<application guid="HOSPITALITY_SERVICE" version="1.0"><display name="Hospitality Service" categories="Samples.Travel" /><creation date="10-01-2006 12:00:00" authors="Admin" /><short-description>The documentation for this event process flow is available at {Fiorano Install Dir}/esb/samples/EventProcesses/HospitalityService/docs/readme.html.</short-description><deployment label="Development" cache="false" /><service-instances><inst name="RequestFeeder"><service guid="Feeder" version="4.0" /><long-description>The Feeder service is used to feed data to any service to which its output port is linked. 
        The service defines no input or output format for the messages. It can take any data as input and just sends it forward. The user can input data in the window which pops up on launching the service.
        </long-description><config-file name="RequestFeeder.xml" /><configuration><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="java.util.Properties"> 
  <void method="put"> 
   <string>RootElementName</string> 
   <string>PropertyRQ</string> 
  </void> 
  <void method="put"> 
   <string>MessageFormat</string> 
   <string>XML</string> 
  </void> 
  <void method="put"> 
   <string>OutputDTD</string> 
   <string>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#13;
&lt;xsd:schema xmlns=&quot;http://hospitality.com/service/&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; targetNamespace=&quot;http://hospitality.com/service/&quot;&gt;&#13;
    &lt;xsd:element name=&quot;GuestCount&quot;&gt;&#13;
        &lt;xsd:complexType&gt;&#13;
            &lt;xsd:attribute name=&quot;Count&quot; type=&quot;xsd:string&quot; use=&quot;required&quot;/&gt;&#13;
        &lt;/xsd:complexType&gt;&#13;
    &lt;/xsd:element&gt;&#13;
    &lt;xsd:element name=&quot;GuestCounts&quot;&gt;&#13;
        &lt;xsd:complexType&gt;&#13;
            &lt;xsd:sequence&gt;&#13;
                &lt;xsd:element ref=&quot;GuestCount&quot;/&gt;&#13;
            &lt;/xsd:sequence&gt;&#13;
            &lt;xsd:attribute name=&quot;IsPerRoom&quot; type=&quot;xsd:string&quot; use=&quot;required&quot;/&gt;&#13;
        &lt;/xsd:complexType&gt;&#13;
    &lt;/xsd:element&gt;&#13;
    &lt;xsd:element name=&quot;PropertyRQ&quot;&gt;&#13;
        &lt;xsd:complexType&gt;&#13;
            &lt;xsd:sequence&gt;&#13;
                &lt;xsd:element ref=&quot;PropertySegments&quot;/&gt;&#13;
                &lt;xsd:element ref=&quot;RequestMods&quot;/&gt;&#13;
            &lt;/xsd:sequence&gt;&#13;
        &lt;/xsd:complexType&gt;&#13;
    &lt;/xsd:element&gt;&#13;
    &lt;xsd:element name=&quot;PropertySegment&quot;&gt;&#13;
        &lt;xsd:complexType&gt;&#13;
            &lt;xsd:sequence&gt;&#13;
                &lt;xsd:element ref=&quot;StayDateRange&quot;/&gt;&#13;
                &lt;xsd:element ref=&quot;RoomStayCandidates&quot;/&gt;&#13;
            &lt;/xsd:sequence&gt;&#13;
            &lt;xsd:attribute name=&quot;ChainCode&quot; type=&quot;xsd:string&quot; use=&quot;required&quot;/&gt;&#13;
            &lt;xsd:attribute name=&quot;HotelCode&quot; type=&quot;xsd:string&quot; use=&quot;required&quot;/&gt;&#13;
            &lt;xsd:attribute name=&quot;SystemID&quot; type=&quot;xsd:string&quot; use=&quot;required&quot;/&gt;&#13;
        &lt;/xsd:complexType&gt;&#13;
    &lt;/xsd:element&gt;&#13;
    &lt;xsd:element name=&quot;PropertySegments&quot;&gt;&#13;
        &lt;xsd:complexType&gt;&#13;
            &lt;xsd:sequence maxOccurs=&quot;unbounded&quot;&gt;&#13;
                &lt;xsd:element ref=&quot;PropertySegment&quot;/&gt;&#13;
            &lt;/xsd:sequence&gt;&#13;
        &lt;/xsd:complexType&gt;&#13;
    &lt;/xsd:element&gt;&#13;
    &lt;xsd:element name=&quot;RequestMods&quot; type=&quot;xsd:string&quot;/&gt;&#13;
    &lt;xsd:element name=&quot;RoomStayCandidate&quot;&gt;&#13;
        &lt;xsd:complexType&gt;&#13;
            &lt;xsd:sequence&gt;&#13;
                &lt;xsd:element ref=&quot;GuestCounts&quot;/&gt;&#13;
            &lt;/xsd:sequence&gt;&#13;
        &lt;/xsd:complexType&gt;&#13;
    &lt;/xsd:element&gt;&#13;
    &lt;xsd:element name=&quot;RoomStayCandidates&quot;&gt;&#13;
        &lt;xsd:complexType&gt;&#13;
            &lt;xsd:sequence&gt;&#13;
                &lt;xsd:element ref=&quot;RoomStayCandidate&quot;/&gt;&#13;
            &lt;/xsd:sequence&gt;&#13;
        &lt;/xsd:complexType&gt;&#13;
    &lt;/xsd:element&gt;&#13;
    &lt;xsd:element name=&quot;StayDateRange&quot;&gt;&#13;
        &lt;xsd:complexType&gt;&#13;
            &lt;xsd:attribute name=&quot;End&quot; type=&quot;xsd:string&quot; use=&quot;required&quot;/&gt;&#13;
            &lt;xsd:attribute name=&quot;Start&quot; type=&quot;xsd:string&quot; use=&quot;required&quot;/&gt;&#13;
        &lt;/xsd:complexType&gt;&#13;
    &lt;/xsd:element&gt;&#13;
&lt;/xsd:schema&gt;</string> 
  </void> 
  <void method="put"> 
   <string>Message</string> 
   <string>&lt;ns1:PropertyRQ xmlns:ns1=&quot;http://hospitality.com/service/&quot;&gt;
   &lt;ns1:PropertySegments&gt;
      &lt;ns1:PropertySegment ChainCode=&quot;ChainCode&quot; HotelCode=&quot;H&quot; SystemID=&quot;A&quot;&gt;
         &lt;ns1:StayDateRange End=&quot;2005-01-10&quot; Start=&quot;2005-01-05&quot;/&gt;
         &lt;ns1:RoomStayCandidates&gt;
            &lt;ns1:RoomStayCandidate&gt;
               &lt;ns1:GuestCounts IsPerRoom=&quot;IsPerRoom&quot;&gt;
                  &lt;ns1:GuestCount Count=&quot;Count&quot;/&gt;
               &lt;/ns1:GuestCounts&gt;
            &lt;/ns1:RoomStayCandidate&gt;
         &lt;/ns1:RoomStayCandidates&gt;
      &lt;/ns1:PropertySegment&gt;
      &lt;ns1:PropertySegment ChainCode=&quot;ChainCode&quot; HotelCode=&quot;HotelCode&quot; SystemID=&quot;B&quot;&gt;
         &lt;ns1:StayDateRange End=&quot;2005-02-20&quot; Start=&quot;2005-02-10&quot;/&gt;
         &lt;ns1:RoomStayCandidates&gt;
            &lt;ns1:RoomStayCandidate&gt;
               &lt;ns1:GuestCounts IsPerRoom=&quot;IsPerRoom&quot;&gt;
                  &lt;ns1:GuestCount Count=&quot;Count&quot;/&gt;
               &lt;/ns1:GuestCounts&gt;
            &lt;/ns1:RoomStayCandidate&gt;
         &lt;/ns1:RoomStayCandidates&gt;
      &lt;/ns1:PropertySegment&gt;
   &lt;/ns1:PropertySegments&gt;
   &lt;ns1:RequestMods&gt;HotelAvailability&lt;/ns1:RequestMods&gt;
&lt;/ns1:PropertyRQ&gt;</string> 
  </void> 
  <void method="put"> 
   <string>RootElementNS</string> 
   <string>http://hospitality.com/service/</string> 
  </void> 
  <void method="put"> 
   <string>HistorySize</string> 
   <string>10</string> 
  </void> 
 </object> 
</java> 
]]></configuration><configuration-properties /><deployment nodes="fps" /><execution><debug enabled="false" port="5000" /><launch first-available-node="false" /></execution><outputport-instances><outputport-instance name="OUT_PORT"><schema root="{http://hospitality.com/service/}PropertyRQ"><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns="http://hospitality.com/service/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="http://hospitality.com/service/">
    <xsd:element name="GuestCount">
        <xsd:complexType>
            <xsd:attribute name="Count" type="xsd:string" use="required"/>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="GuestCounts">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="GuestCount"/>
            </xsd:sequence>
            <xsd:attribute name="IsPerRoom" type="xsd:string" use="required"/>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="PropertyRQ">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="PropertySegments"/>
                <xsd:element ref="RequestMods"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="PropertySegment">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="StayDateRange"/>
                <xsd:element ref="RoomStayCandidates"/>
            </xsd:sequence>
            <xsd:attribute name="ChainCode" type="xsd:string" use="required"/>
            <xsd:attribute name="HotelCode" type="xsd:string" use="required"/>
            <xsd:attribute name="SystemID" type="xsd:string" use="required"/>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="PropertySegments">
        <xsd:complexType>
            <xsd:sequence maxOccurs="unbounded">
                <xsd:element ref="PropertySegment"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="RequestMods" type="xsd:string"/>
    <xsd:element name="RoomStayCandidate">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="GuestCounts"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="RoomStayCandidates">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="RoomStayCandidate"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="StayDateRange">
        <xsd:complexType>
            <xsd:attribute name="End" type="xsd:string" use="required"/>
            <xsd:attribute name="Start" type="xsd:string" use="required"/>
        </xsd:complexType>
    </xsd:element>
</xsd:schema>]]></content></schema><jms><destination /><publisher><messages priority="4" /></publisher></jms><transformation><script><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:java="http://xml.apache.org/xslt/java" xmlns:datetime="http://exslt.org/dates-and-times" xmlns:set="http://exslt.org/sets" xmlns:math="http://exslt.org/math" exclude-result-prefixes="java" xmlns:lxslt="http://xml.apache.org/xslt" xmlns:xalan="http://xml.apache.org/xslt" xmlns:ns1="http://www.w3.org/2001/XMLSchema" xmlns:ns0="http://hospitality.com/service/" xmlns:dateConversion="ext1" xmlns:myext="ext2" xmlns:strings="ext3" extension-element-prefixes="datetime set math dateConversion myext strings">
  <xsl:output method="xml" indent="yes" encoding="UTF-8" xalan:indent-amount="2" omit-xml-declaration="no"></xsl:output>
  <xsl:template match="/">
    <Context>
      <xsl:attribute name="ReqMode">
        <xsl:value-of select="document('OUT_PORT')/ns0:PropertyRQ/ns0:RequestMods"></xsl:value-of>
      </xsl:attribute></Context>
  </xsl:template>
</xsl:stylesheet>]]></script><project><![CDATA[<MapperProject version="3.0.1" suppressEmptyItems="false" convertor="nameIndexed" separator=",">
  <XSLTEngine>Xalan</XSLTEngine>
  <XSLTEncoding>UTF-8</XSLTEncoding>
  <OutputEncoding>UTF-8</OutputEncoding>
  <indent>true</indent>
  <setDTD>false</setDTD>
  <omit-xml-declaration>false</omit-xml-declaration>
  <Comments/>
  <InputStructure name="Application-Context" mime="dtd" rootName="Context" duplicates="0"><![CDATA[<!ELEMENT Context (#PCDATA)>]]]]><![CDATA[></InputStructure>
  <InputStructure name="OUT_PORT" mime="xsd" rootName="PropertyRQ" namespace="http://hospitality.com/service/" parser="Xerces" duplicates="0"><![CDATA[${OperationType.IN_PORT}]]]]><![CDATA[></InputStructure>
  <OutputStructure name="Application-Context" mime="dtd" rootName="Context" duplicates=""><![CDATA[<!ELEMENT Context (#PCDATA)>
<!ATTLIST Context MsgCount CDATA #REQUIRED>
<!ATTLIST Context ReqMode CDATA #REQUIRED>
<!ATTLIST Context SCode CDATA #REQUIRED>]]]]><![CDATA[></OutputStructure>
  <Extensions>
    <Extension name="dateConversion" language="javascript">
      <Script><![CDATA[// ===================================================================
// You may *NOT* re-distribute this code in any way except through its
// use. That means, you can include it in your product, or your web
// site, or any other form where the code is actually being used. You
// may not put the plain javascript up on your site for download or
// include it in your javascript libraries for download. 
// If you wish to share this code with others, please just point them
// to the URL instead.
// Please DO NOT link directly to my .js files from your site. Copy
// the files to your server and use them there. Thank you.
// ===================================================================

// HISTORY
// ------------------------------------------------------------------
// March 11, 2003: Added parseDate() function
// March 11, 2003: Added "NNN" formatting option. Doesn't match up
//                 perfectly with SimpleDateFormat formats, but 
//                 backwards-compatability was required.

// ------------------------------------------------------------------
// These functions use the same 'format' strings as the 
// java.text.SimpleDateFormat class, with minor exceptions.
// The format string consists of the following abbreviations:
// 
// Field        | Full Form          | Short Form
// -------------+--------------------+-----------------------
// Year         | yyyy (4 digits)    | yy (2 digits), y (2 or 4 digits)
// Month        | MMM (name or abbr.)| MM (2 digits), M (1 or 2 digits)
//              | NNN (abbr.)        |
// Day of Month | dd (2 digits)      | d (1 or 2 digits)
// Day of Week  | EE (name)          | E (abbr)
// Hour (1-12)  | hh (2 digits)      | h (1 or 2 digits)
// Hour (0-23)  | HH (2 digits)      | H (1 or 2 digits)
// Hour (0-11)  | KK (2 digits)      | K (1 or 2 digits)
// Hour (1-24)  | kk (2 digits)      | k (1 or 2 digits)
// Minute       | mm (2 digits)      | m (1 or 2 digits)
// Second       | ss (2 digits)      | s (1 or 2 digits)
// AM/PM        | a                  |
//
// NOTE THE DIFFERENCE BETWEEN MM and mm! Month=MM, not mm!
// Examples:
//  "MMM d, y" matches: January 01, 2000
//                      Dec 1, 1900
//                      Nov 20, 00
//  "M/d/yy"   matches: 01/20/00
//                      9/2/00
//  "MMM dd, yyyy hh:mm:ssa" matches: "January 01, 2000 12:30:45AM"
// ------------------------------------------------------------------

var MONTH_NAMES=new Array('January','February','March','April','May','June','July','August','September','October','November','December','Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec');
var DAY_NAMES=new Array('Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sun','Mon','Tue','Wed','Thu','Fri','Sat');
function LZ(x) {return(x<0||x>9?"":"0")+x}

function convertDate(dateString, inFormat, outFormat)
{
    return formatDate(getDateFromFormat(dateString,inFormat),outFormat);
}

// ------------------------------------------------------------------
// isDate ( date_string, format_string )
// Returns true if date string matches format of format string and
// is a valid date. Else returns false.
// It is recommended that you trim whitespace around the value before
// passing it to this function, as whitespace is NOT ignored!
// ------------------------------------------------------------------
function isDate(val,format) {
    var date=getDateFromFormat(val,format);
    if (date==0) { return false; }
    return true;
    }

// -------------------------------------------------------------------
// compareDates(date1,date1format,date2,date2format)
//   Compare two date strings to see which is greater.
//   Returns:
//   1 if date1 is greater than date2
//   0 if date2 is greater than date1 of if they are the same
//  -1 if either of the dates is in an invalid format
// -------------------------------------------------------------------
function compareDates(date1,dateformat1,date2,dateformat2) {
    var d1=getDateFromFormat(date1,dateformat1);
    var d2=getDateFromFormat(date2,dateformat2);
    if (d1==0 || d2==0) {
        return -1;
        }
    else if (d1 > d2) {
        return 1;
        }
    return 0;
    }

// ------------------------------------------------------------------
// formatDate (date_object, format)
// Returns a date in the output format specified.
// The format string uses the same abbreviations as in getDateFromFormat()
// ------------------------------------------------------------------
function formatDate(date,format) {
    format=format+"";
    var result="";
    var i_format=0;
    var c="";
    var token="";
    var y=date.getYear()+"";
    var M=date.getMonth()+1;
    var d=date.getDate();
    var E=date.getDay();
    var H=date.getHours();
    var m=date.getMinutes();
    var s=date.getSeconds();
    var yyyy,yy,MMM,MM,dd,hh,h,mm,ss,ampm,HH,H,KK,K,kk,k;
    // Convert real date parts into formatted versions
    var value=new Object();
    if (y.length < 4) {y=""+(y-0+1900);}
    value["y"]=""+y;
    value["yyyy"]=y;
    value["yy"]=y.substring(2,4);
    value["M"]=M;
    value["MM"]=LZ(M);
    value["MMM"]=MONTH_NAMES[M-1];
    value["NNN"]=MONTH_NAMES[M+11];
    value["d"]=d;
    value["dd"]=LZ(d);
    value["E"]=DAY_NAMES[E+7];
    value["EE"]=DAY_NAMES[E];
    value["H"]=H;
    value["HH"]=LZ(H);
    if (H==0){value["h"]=12;}
    else if (H>12){value["h"]=H-12;}
    else {value["h"]=H;}
    value["hh"]=LZ(value["h"]);
    if (H>11){value["K"]=H-12;} else {value["K"]=H;}
    value["k"]=H+1;
    value["KK"]=LZ(value["K"]);
    value["kk"]=LZ(value["k"]);
    if (H > 11) { value["a"]="PM"; }
    else { value["a"]="AM"; }
    value["m"]=m;
    value["mm"]=LZ(m);
    value["s"]=s;
    value["ss"]=LZ(s);
    while (i_format < format.length) {
        c=format.charAt(i_format);
        token="";
        while ((format.charAt(i_format)==c) && (i_format < format.length)) {
            token += format.charAt(i_format++);
            }
        if (value[token] != null) { result=result + value[token]; }
        else { result=result + token; }
        }
    return result;
    }
    
// ------------------------------------------------------------------
// Utility functions for parsing in getDateFromFormat()
// ------------------------------------------------------------------
function _isInteger(val) {
    var digits="1234567890";
    for (var i=0; i < val.length; i++) {
        if (digits.indexOf(val.charAt(i))==-1) { return false; }
        }
    return true;
    }
function _getInt(str,i,minlength,maxlength) {
    for (var x=maxlength; x>=minlength; x--) {
        var token=str.substring(i,i+x);
        if (token.length < minlength) { return null; }
        if (_isInteger(token)) { return token; }
        }
    return null;
    }
    
// ------------------------------------------------------------------
// getDateFromFormat( date_string , format_string )
//
// This function takes a date string and a format string. It matches
// If the date string matches the format string, it returns the 
// getTime() of the date. If it does not match, it returns 0.
// ------------------------------------------------------------------
function getDateFromFormat(val,format) {
    val=val+"";
    format=format+"";
    var i_val=0;
    var i_format=0;
    var c="";
    var token="";
    var token2="";
    var x,y;
    var now=new Date();
    var year=now.getYear();
    var month=now.getMonth()+1;
    var date=1;
    var hh=now.getHours();
    var mm=now.getMinutes();
    var ss=now.getSeconds();
    var ampm="";
    
    while (i_format < format.length) {
        // Get next token from format string
        c=format.charAt(i_format);
        token="";
        while ((format.charAt(i_format)==c) && (i_format < format.length)) {
            token += format.charAt(i_format++);
            }
        // Extract contents of value based on format token
        if (token=="yyyy" || token=="yy" || token=="y") {
            if (token=="yyyy") { x=4;y=4; }
            if (token=="yy")   { x=2;y=2; }
            if (token=="y")    { x=2;y=4; }
            year=_getInt(val,i_val,x,y);
            if (year==null) { return 0; }
            i_val += year.length;
            if (year.length==2) {
                if (year > 70) { year=1900+(year-0); }
                else { year=2000+(year-0); }
                }
            }
        else if (token=="MMM"||token=="NNN"){
            month=0;
            for (var i=0; i<MONTH_NAMES.length; i++) {
                var month_name=MONTH_NAMES[i];
                if (val.substring(i_val,i_val+month_name.length).toLowerCase()==month_name.toLowerCase()) {
                    if (token=="MMM"||(token=="NNN"&&i>11)) {
                        month=i+1;
                        if (month>12) { month -= 12; }
                        i_val += month_name.length;
                        break;
                        }
                    }
                }
            if ((month < 1)||(month>12)){return 0;}
            }
        else if (token=="EE"||token=="E"){
            for (var i=0; i<DAY_NAMES.length; i++) {
                var day_name=DAY_NAMES[i];
                if (val.substring(i_val,i_val+day_name.length).toLowerCase()==day_name.toLowerCase()) {
                    i_val += day_name.length;
                    break;
                    }
                }
            }
        else if (token=="MM"||token=="M") {
            month=_getInt(val,i_val,token.length,2);
            if(month==null||(month<1)||(month>12)){return 0;}
            i_val+=month.length;}
        else if (token=="dd"||token=="d") {
            date=_getInt(val,i_val,token.length,2);
            if(date==null||(date<1)||(date>31)){return 0;}
            i_val+=date.length;}
        else if (token=="hh"||token=="h") {
            hh=_getInt(val,i_val,token.length,2);
            if(hh==null||(hh<1)||(hh>12)){return 0;}
            i_val+=hh.length;}
        else if (token=="HH"||token=="H") {
            hh=_getInt(val,i_val,token.length,2);
            if(hh==null||(hh<0)||(hh>23)){return 0;}
            i_val+=hh.length;}
        else if (token=="KK"||token=="K") {
            hh=_getInt(val,i_val,token.length,2);
            if(hh==null||(hh<0)||(hh>11)){return 0;}
            i_val+=hh.length;}
        else if (token=="kk"||token=="k") {
            hh=_getInt(val,i_val,token.length,2);
            if(hh==null||(hh<1)||(hh>24)){return 0;}
            i_val+=hh.length;hh--;}
        else if (token=="mm"||token=="m") {
            mm=_getInt(val,i_val,token.length,2);
            if(mm==null||(mm<0)||(mm>59)){return 0;}
            i_val+=mm.length;}
        else if (token=="ss"||token=="s") {
            ss=_getInt(val,i_val,token.length,2);
            if(ss==null||(ss<0)||(ss>59)){return 0;}
            i_val+=ss.length;}
        else if (token=="a") {
            if (val.substring(i_val,i_val+2).toLowerCase()=="am") {ampm="AM";}
            else if (val.substring(i_val,i_val+2).toLowerCase()=="pm") {ampm="PM";}
            else {return 0;}
            i_val+=2;}
        else {
            if (val.substring(i_val,i_val+token.length)!=token) {return 0;}
            else {i_val+=token.length;}
            }
        }
    // If there are any trailing characters left in the value, it doesn't match
    if (i_val != val.length) { return 0; }
    // Is date valid for month?
    if (month==2) {
        // Check for leap year
        if ( ( (year%4==0)&&(year%100 != 0) ) || (year%400==0) ) { // leap year
            if (date > 29){ return 0; }
            }
        else { if (date > 28) { return 0; } }
        }
    if ((month==4)||(month==6)||(month==9)||(month==11)) {
        if (date > 30) { return 0; }
        }
    // Correct hours value
    if (hh<12 && ampm=="PM") { hh=hh-0+12; }
    else if (hh>11 && ampm=="AM") { hh-=12; }
    var newdate=new Date(year,month-1,date,hh,mm,ss);
    return newdate;
    }

// ------------------------------------------------------------------
// parseDate( date_string [, prefer_euro_format] )
//
// This function takes a date string and tries to match it to a
// number of possible date formats to get the value. It will try to
// match against the following international formats, in this order:
// y-M-d   MMM d, y   MMM d,y   y-MMM-d   d-MMM-y  MMM d
// M/d/y   M-d-y      M.d.y     MMM-d     M/d      M-d
// d/M/y   d-M-y      d.M.y     d-MMM     d/M      d-M
// A second argument may be passed to instruct the method to search
// for formats like d/M/y (european format) before M/d/y (American).
// Returns a Date object or null if no patterns match.
// ------------------------------------------------------------------
function parseDate(val) {
    var preferEuro=(arguments.length==2)?arguments[1]:false;
    generalFormats=new Array('y-M-d','MMM d, y','MMM d,y','y-MMM-d','d-MMM-y','MMM d');
    monthFirst=new Array('M/d/y','M-d-y','M.d.y','MMM-d','M/d','M-d');
    dateFirst =new Array('d/M/y','d-M-y','d.M.y','d-MMM','d/M','d-M');
    var checkList=new Array('generalFormats',preferEuro?'dateFirst':'monthFirst',preferEuro?'monthFirst':'dateFirst');
    var d=null;
    for (var i=0; i<checkList.length; i++) {
        var l=window[checkList[i]];
        for (var j=0; j<l.length; j++) {
            d=getDateFromFormat(val,l[j]);
            if (d>0) { return new Date(d); }
            }
        }
    return null;
}]]]]><![CDATA[></Script>
      <Function name="convertDate" return="String">
        <Argument name="dateString" datatype="String"/>
        <Argument name="inFormat" datatype="String"/>
        <Argument name="outFormat" datatype="String"/>
      </Function>
    </Extension>
    <Extension name="myext" language="javascript">
      <Script><![CDATA[function compute(expr){
    return eval(expr);
}

function nextMillenium(){
    d = new Date()    //today's date
    mill=new Date(3000, 00, 01, 00, 00, 00)    //Next millennium start date
    diff = mill-d    //difference in milliseconds
    mtg = new String(diff/86400000)    //calculate days and convert to string
    point=mtg.indexOf(".")    //find the decimal point
    days=mtg.substring(0,point)    //get just the whole days
    return "There are only " + days + " days remaining to the start of the next millennium."; 
}

function replace(input, pattern, flags, str){
    return input.replace(new RegExp(pattern, flags), str);
}]]]]><![CDATA[></Script>
      <Function name="compute" return="String">
        <Argument name="expr" datatype="String"/>
      </Function>
      <Function name="nextMillenium" return="String"/>
      <Function name="replace" return="String">
        <Argument name="input" datatype="String"/>
        <Argument name="pattern" datatype="String"/>
        <Argument name="flags" datatype="String"/>
        <Argument name="str" datatype="String"/>
      </Function>
    </Extension>
    <Extension name="strings" language="javascript">
      <Script><![CDATA[function multiConcat(ctx, delim){
    var ipString = "";
    if (ctx.length){
    for (var i=0; i < ctx.getLength(); i++){
        ctxN  = ctx.item(i);
        if (ctxN.nodeType == 1){
            ipString +=  _wander(ctxN, delim);
        }
        if (ctxN.nodeType == 2){
            ipString += ctxN.nodeValue;
        }
    }
    }else{
    return '';
    }
    return ipString.length>1 ? ipString.substring(delim.length) : ipString;
}
function   _wander(ctx, delim){
    var retStr = "";
    var nodelist = ctx.childNodes;
    
    for (var i=0; i < ctx.childNodes.length; i++){
        
        ctxN = nodelist.item(i);//ctx.childNodes[i];
        
        switch(ctxN.nodeType){
            case 1:
                retStr +=   _wander(ctxN);
                break;
            case 3:
                retStr += delim +ctxN.nodeValue;
                break;
            default:
                break;
        }
    }
    return retStr;
}]]]]><![CDATA[></Script>
      <Function name="multiConcat" return="String">
        <Argument name="ctx" datatype="Unknown"/>
        <Argument name="delim" datatype="String"/>
      </Function>
    </Extension>
  </Extensions>
  <Mappings>
    <GraphModel outputNode="Application-Context:0,Context:0,ReqMode:0" x="315" y="22" inputPins="1">
      <TreeGraphNode inputNode="OUT_PORT:0,PropertyRQ:0,RequestMods:0" x="131" y="22">
        <InputPins>1st</InputPins>
        <OutputPins>1st</OutputPins>
      </TreeGraphNode>
      <Link inputID="0" inputIndex="0" outputID="1" outputIndex="0"/>
    </GraphModel>
  </Mappings>
</MapperProject>]]></project></transformation></outputport-instance><outputport-instance name="ON_EXCEPTION"><schema root="{http://www.fiorano.com/fesb/activity/fault}Error"><content><![CDATA[<?xml version="1.0" encoding="UTF-8" ?>
								<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.fiorano.com/fesb/activity/fault">
								<xsd:element name="Error">
								<xsd:complexType>
								<xsd:sequence>
								<xsd:element name="errorCode" type="xsd:string"/>
								<xsd:element name="errorMessage" type="xsd:string"/>
								<xsd:element name="errorDetail" type="xsd:string" minOccurs="0"/>
								<xsd:element name="data" minOccurs="0">
								<xsd:complexType>
								<xsd:sequence>
								<xsd:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>
								</xsd:sequence>
								</xsd:complexType>
								</xsd:element>
								</xsd:sequence>
								</xsd:complexType>
								</xsd:element>
								</xsd:schema>            
						]]></content></schema><jms><destination /><publisher><messages priority="4" /></publisher></jms></outputport-instance></outputport-instances><logmanager logger="java.util.logging.FileHandler"><Param name="java.util.logging.FileHandler.limit">50000</Param><Param name="java.util.logging.FileHandler.dir">logs</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.dateformat">MM:dd:yyyy</Param><Param name="java.util.logging.FileHandler.count">4</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.includetimestamp">true</Param></logmanager><logmodules><logmodule name="ERR_HANDLER" /><logmodule name="FeederServiceInfo" /><logmodule name="OUT_HANDLER" level="INFO" /></logmodules><runtime-arguments><runtime-argument name="JVM_PARAMS" mandatory="false" inmemory="false"><value>-DLOG_TO_STREAM=true</value></runtime-argument></runtime-arguments></inst><inst name="OperationType"><service guid="CBR" version="4.0" /><long-description>The CBR service allows data filtering based on the given XPATH selection criteria. This service accepts XML data on the input channel, performs XPATH selection and writes data to the appropriate output port.
        </long-description><config-file name="OperationType.xml" /><configuration><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.6.0_02" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.cbr.model.CBRPropertyModel"> 
  <void property="XPaths"> 
   <void method="add"> 
    <string>(/ns1:PropertyRQ/ns1:RequestMods = &apos;BookHotel&apos;)</string> 
   </void> 
   <void method="add"> 
    <string>(/ns1:PropertyRQ/ns1:RequestMods = &apos;HotelAvailability&apos;)</string> 
   </void> 
  </void> 
  <void property="namespaces"> 
   <object class="java.util.HashMap"> 
    <void method="put"> 
     <string>ns2</string> 
     <string>http://www.w3.org/2001/XMLSchema</string> 
    </void> 
    <void method="put"> 
     <string>ns1</string> 
     <string>http://hospitality.com/service/</string> 
    </void> 
   </object> 
  </void> 
  <void property="outPortNames"> 
   <void method="add"> 
    <string>BookHotel</string> 
   </void> 
   <void method="add"> 
    <string>Availability</string> 
   </void> 
  </void> 
  <void property="routeCounts"> 
   <void method="add"> 
    <int>1</int> 
   </void> 
   <void method="add"> 
    <int>1</int> 
   </void> 
  </void> 
 </object> 
</java> 
]]></configuration><configuration-properties /><deployment nodes="fps" /><execution><debug enabled="false" port="5000" /><launch first-available-node="false" /></execution><inputport-instances><inputport-instance name="IN_PORT"><schema root="{http://hospitality.com/service/}PropertyRQ"><content><![CDATA[${RequestFeeder.OUT_PORT}]]></content></schema><jms><destination /><subscriber><transaction enabled="true" /><subscription durable="false" name="null" /></subscriber></jms></inputport-instance></inputport-instances><outputport-instances><outputport-instance name="OUT_FALSE"><schema root="{http://hospitality.com/service/}PropertyRQ"><content><![CDATA[${RequestFeeder.OUT_PORT}]]></content></schema><jms><destination /><publisher><messages priority="4" /></publisher></jms></outputport-instance><outputport-instance name="BookHotel"><schema root="{http://hospitality.com/service/}PropertyRQ"><content><![CDATA[${RequestFeeder.OUT_PORT}]]></content></schema><jms><destination /><publisher><messages persistent="true" /></publisher></jms></outputport-instance><outputport-instance name="Availability"><schema root="{http://hospitality.com/service/}PropertyRQ"><content><![CDATA[${RequestFeeder.OUT_PORT}]]></content></schema><jms><destination /><publisher><messages persistent="true" /></publisher></jms></outputport-instance><outputport-instance name="ON_EXCEPTION"><schema root="{http://www.fiorano.com/fesb/activity/fault}Error"><content><![CDATA[${RequestFeeder.ON_EXCEPTION}]]></content></schema><jms><destination /><publisher><messages priority="4" /></publisher></jms></outputport-instance></outputport-instances><logmanager logger="java.util.logging.FileHandler"><Param name="java.util.logging.FileHandler.limit">50000</Param><Param name="java.util.logging.FileHandler.dir">logs</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.dateformat">MM:dd:yyyy</Param><Param name="java.util.logging.FileHandler.count">4</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.includetimestamp">true</Param></logmanager><logmodules><logmodule name="ERR_HANDLER" /><logmodule name="OUT_HANDLER" level="INFO" /><logmodule name="CBRService" /></logmodules><runtime-arguments><runtime-argument name="useFioranoCBR"><value>false</value></runtime-argument><runtime-argument name="numConnections"><value>1</value></runtime-argument><runtime-argument name="numSessions"><value>1</value></runtime-argument><runtime-argument name="numConsumers"><value>1</value></runtime-argument><runtime-argument name="JVM_PARAMS" mandatory="false" inmemory="false"><value>-DLOG_TO_STREAM=true</value></runtime-argument></runtime-arguments></inst><inst name="SplitToSuppliers_Avlbl"><service guid="XMLSplitter" version="4.0" /><long-description>XMLSplitterComponent</long-description><config-file name="SplitToSuppliers_Avlbl.xml" /><configuration><![CDATA[<?xml version="1.0" encoding="UTF-8"?><TrGatewayConfigurations><BCConfigurations><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.bc.trgateway.model.dmi.bcdk.BCDKConfigurationInfo"> 
  <void property="JCAAdapterConfig"> 
   <string>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;ESBAdapterConfigurations&gt;&lt;ConnectionLess&gt;true&lt;/ConnectionLess&gt;&lt;isConfigurationRequired&gt;true&lt;/isConfigurationRequired&gt;&lt;isLicensed&gt;false&lt;/isLicensed&gt;&lt;Inbound&gt;false&lt;/Inbound&gt;&lt;AdapterInstanceProperties&gt;&lt;![CDATA[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; 
&lt;java version=&quot;1.5.0_05&quot; class=&quot;java.beans.XMLDecoder&quot;&gt; 
 &lt;object class=&quot;fiorano.esb.adapter.cfg.ESBAdapterInstanceProperties&quot;&gt; 
  &lt;void property=&quot;domain&quot;&gt; 
   &lt;string&gt;BCConfigPropertySheet&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;instanceName&quot;&gt; 
   &lt;string&gt;XMLSplitter1&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;logCategories&quot;&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;XMLSplitterManagedConnectionFactory&lt;/string&gt; 
    &lt;object class=&quot;fiorano.esb.adapter.cfg.LogCategory&quot;&gt; 
     &lt;void property=&quot;loggerDescription&quot;&gt; 
      &lt;string&gt;XMLSplitterManagedConnectionFactory&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerDisplayName&quot;&gt; 
      &lt;string&gt;XMLSplitterManagedConnectionFactory&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerLevel&quot;&gt; 
      &lt;string&gt;SEVERE&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerName&quot;&gt; 
      &lt;string&gt;com.fiorano.adapter.jca.xmlsplitter.spi.outbound.XMLSplitterManagedConnectionFactory&lt;/string&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;XMLSplitterInteraction&lt;/string&gt; 
    &lt;object class=&quot;fiorano.esb.adapter.cfg.LogCategory&quot;&gt; 
     &lt;void property=&quot;loggerDescription&quot;&gt; 
      &lt;string&gt;XMLSplitterInteraction&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerDisplayName&quot;&gt; 
      &lt;string&gt;XMLSplitterInteraction&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerLevel&quot;&gt; 
      &lt;string&gt;SEVERE&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerName&quot;&gt; 
      &lt;string&gt;com.fiorano.adapter.jca.xmlsplitter.cci.XMLSplitterInteraction&lt;/string&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;state&quot;&gt; 
   &lt;int&gt;8&lt;/int&gt; 
  &lt;/void&gt; 
 &lt;/object&gt; 
&lt;/java&gt; 
]]&gt;&lt;/AdapterInstanceProperties&gt;&lt;ConfigurationObjects&gt;&lt;ConfigurationObject&gt;&lt;![CDATA[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; 
&lt;java version=&quot;1.5.0_05&quot; class=&quot;java.beans.XMLDecoder&quot;&gt; 
 &lt;object class=&quot;fiorano.esb.adapter.cfg.ConfigurationObject&quot;&gt; 
  &lt;void property=&quot;beanClassName&quot;&gt; 
   &lt;class&gt;com.fiorano.adapter.jca.xmlsplitter.cci.XMLSplitterInteractionSpec&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;beanObject&quot;&gt; 
   &lt;void property=&quot;errorActionsMap&quot;&gt; 
    &lt;object class=&quot;fiorano.esb.adapter.jca.error.ErrorActionsMap&quot;&gt; 
     &lt;void property=&quot;errorActionsMap&quot;&gt; 
      &lt;void method=&quot;put&quot;&gt; 
       &lt;object class=&quot;fiorano.esb.adapter.jca.error.Error&quot;&gt; 
        &lt;void property=&quot;errorID&quot;&gt; 
         &lt;int&gt;2&lt;/int&gt; 
        &lt;/void&gt; 
       &lt;/object&gt; 
       &lt;object class=&quot;java.util.ArrayList&quot;&gt; 
        &lt;void method=&quot;add&quot;&gt; 
         &lt;object class=&quot;fiorano.esb.adapter.jca.error.RetryErrorAction&quot;&gt; 
          &lt;void property=&quot;errorActionID&quot;&gt; 
           &lt;int&gt;1&lt;/int&gt; 
          &lt;/void&gt; 
         &lt;/object&gt; 
        &lt;/void&gt; 
        &lt;void method=&quot;add&quot;&gt; 
         &lt;object class=&quot;fiorano.esb.adapter.jca.error.ErrorAction&quot;&gt; 
          &lt;void property=&quot;errorActionID&quot;&gt; 
           &lt;int&gt;3&lt;/int&gt; 
          &lt;/void&gt; 
         &lt;/object&gt; 
        &lt;/void&gt; 
       &lt;/object&gt; 
      &lt;/void&gt; 
      &lt;void method=&quot;put&quot;&gt; 
       &lt;object class=&quot;fiorano.esb.adapter.jca.error.Error&quot;&gt; 
        &lt;void property=&quot;errorID&quot;&gt; 
         &lt;int&gt;0&lt;/int&gt; 
        &lt;/void&gt; 
       &lt;/object&gt; 
       &lt;object class=&quot;java.util.ArrayList&quot;/&gt; 
      &lt;/void&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;namespaceMap&quot;&gt; 
    &lt;void method=&quot;put&quot;&gt; 
     &lt;string&gt;ns2&lt;/string&gt; 
     &lt;string&gt;http://www.w3.org/2001/XMLSchema&lt;/string&gt; 
    &lt;/void&gt; 
    &lt;void method=&quot;put&quot;&gt; 
     &lt;string&gt;ns1&lt;/string&gt; 
     &lt;string&gt;http://hospitality.com/service/&lt;/string&gt; 
    &lt;/void&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;splitPath&quot;&gt; 
    &lt;string&gt;/ns1:PropertyRQ/ns1:PropertySegments/ns1:PropertySegment&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;state&quot;&gt; 
    &lt;int&gt;6&lt;/int&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;targetNamespace&quot;&gt; 
    &lt;string&gt;http://www.fiorano.com/fesb/activity/XMLSplitter1&lt;/string&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;category&quot;&gt; 
   &lt;string&gt;Flow&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;configParams&quot;&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;outPort&lt;/string&gt; 
    &lt;string&gt;OUT_PORT&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsScheduling&lt;/string&gt; 
    &lt;boolean&gt;true&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;enableScheduling&lt;/string&gt; 
    &lt;boolean&gt;false&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;inPort&lt;/string&gt; 
    &lt;string&gt;IN_PORT&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsStudio&lt;/string&gt; 
    &lt;boolean&gt;false&lt;/boolean&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;description&quot;&gt; 
   &lt;string&gt;XMLSplitterComponent&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;icon&quot;&gt; 
   &lt;string&gt;xmlsplitter.png&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;implClassName&quot;&gt; 
   &lt;class&gt;com.fiorano.adapter.jca.xmlsplitter.cci.XMLSplitterInteractionSpec&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;name&quot;&gt; 
   &lt;string&gt;XMLSplitter&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;type&quot;&gt; 
   &lt;string&gt;javax.resource.cci.InteractionSpec&lt;/string&gt; 
  &lt;/void&gt; 
 &lt;/object&gt; 
&lt;/java&gt; 
]]&gt;&lt;/ConfigurationObject&gt;&lt;ConfigurationObject&gt;&lt;![CDATA[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; 
&lt;java version=&quot;1.5.0_05&quot; class=&quot;java.beans.XMLDecoder&quot;&gt; 
 &lt;object class=&quot;fiorano.esb.adapter.cfg.ConfigurationObject&quot;&gt; 
  &lt;void property=&quot;beanClassName&quot;&gt; 
   &lt;class&gt;com.fiorano.adapter.jca.xmlsplitter.spi.outbound.XMLSplitterManagedConnectionFactory&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;category&quot;&gt; 
   &lt;string&gt;Flow&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;configParams&quot;&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;outPort&lt;/string&gt; 
    &lt;string&gt;OUT_PORT&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsReconnection&lt;/string&gt; 
    &lt;boolean&gt;false&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsScheduling&lt;/string&gt; 
    &lt;boolean&gt;true&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;enableScheduling&lt;/string&gt; 
    &lt;boolean&gt;false&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;inPort&lt;/string&gt; 
    &lt;string&gt;IN_PORT&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsStudio&lt;/string&gt; 
    &lt;boolean&gt;false&lt;/boolean&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;description&quot;&gt; 
   &lt;string&gt;XMLSplitter Connection&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;icon&quot;&gt; 
   &lt;string&gt;cf.gif&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;implClassName&quot;&gt; 
   &lt;class&gt;com.fiorano.adapter.jca.xmlsplitter.spi.outbound.XMLSplitterManagedConnectionFactory&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;name&quot;&gt; 
   &lt;string&gt;XMLSplitter Connection&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;type&quot;&gt; 
   &lt;string&gt;javax.resource.spi.ManagedConnectionFactory&lt;/string&gt; 
  &lt;/void&gt; 
 &lt;/object&gt; 
&lt;/java&gt; 
]]&gt;&lt;/ConfigurationObject&gt;&lt;/ConfigurationObjects&gt;&lt;/ESBAdapterConfigurations&gt;</string> 
  </void> 
 </object> 
</java> 
]]]]><![CDATA[></BCConfigurations><TransportConfigurations><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.bc.trgateway.model.dmi.tr.TrConfigurationInfo"/> 
</java> 
]]]]><![CDATA[></TransportConfigurations><ErrorConfigurations><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.bc.trgateway.model.dmi.error.ErrorConfigurationInfo"> 
  <void property="errorActionsMap"> 
   <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorActionsMap"> 
    <void property="errorActionsMap"> 
     <void method="put"> 
      <object class="fiorano.esb.adapter.jca.error.Error"> 
       <void property="errorID"> 
        <int>2</int> 
       </void> 
      </object> 
      <object class="java.util.ArrayList"> 
       <void method="add"> 
        <object class="fiorano.esb.adapter.jca.error.RetryErrorAction"> 
         <void property="errorActionID"> 
          <int>1</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="fiorano.esb.adapter.jca.error.ErrorAction"> 
         <void property="errorActionID"> 
          <int>3</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="active"> 
          <boolean>true</boolean> 
         </void> 
         <void property="errorActionID"> 
          <int>11</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="errorActionID"> 
          <int>12</int> 
         </void> 
        </object> 
       </void> 
      </object> 
     </void> 
     <void method="put"> 
      <object class="fiorano.esb.adapter.jca.error.Error"> 
       <void property="errorID"> 
        <int>0</int> 
       </void> 
      </object> 
      <object class="java.util.ArrayList"> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="active"> 
          <boolean>true</boolean> 
         </void> 
         <void property="errorActionID"> 
          <int>11</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="active"> 
          <boolean>true</boolean> 
         </void> 
         <void property="errorActionID"> 
          <int>2</int> 
         </void> 
        </object> 
       </void> 
      </object> 
     </void> 
    </void> 
   </object> 
  </void> 
 </object> 
</java> 
]]]]><![CDATA[></ErrorConfigurations><SchedulerConfigurations><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.bc.trgateway.model.dmi.scheduler.SchedulerConfigurationInfo"> 
  <void property="startDate"> 
   <object class="java.util.Date"> 
    <long>1136869400671</long> 
   </object> 
  </void> 
  <void property="timeOffset"> 
   <string>+00:00</string> 
  </void> 
  <void property="unit"> 
   <string>seconds</string> 
  </void> 
 </object> 
</java> 
]]]]><![CDATA[></SchedulerConfigurations></TrGatewayConfigurations>]]></configuration><configuration-properties /><deployment nodes="fps" /><execution><debug enabled="false" port="5000" /><launch first-available-node="false" /></execution><inputport-instances><inputport-instance name="IN_PORT"><jms><destination /><subscriber><transaction enabled="true" /><subscription durable="false" name="null" /></subscriber></jms></inputport-instance></inputport-instances><outputport-instances><outputport-instance name="OUT_PORT"><jms><destination /><publisher><messages priority="4" /></publisher></jms></outputport-instance><outputport-instance name="ON_EXCEPTION"><schema root="{http://www.fiorano.com/fesb/activity/fault}Error"><content><![CDATA[<?xml version="1.0" encoding="UTF-8" ?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.fiorano.com/fesb/activity/fault" xmlns:tns="http://www.fiorano.com/fesb/activity/fault">
    <xsd:element name="Error">
       <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="errorCode" type="xsd:string"/>
            <xsd:element name="errorMessage" type="xsd:string"/>
            <xsd:element name="errorTrace" type="xsd:string" minOccurs="0"/>
            <xsd:element name="data" type="tns:data" minOccurs="0"/>
          </xsd:sequence>
       </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="data">
      <xsd:sequence>
         <xsd:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
</xsd:schema>]]></content></schema><jms><destination /><publisher><messages priority="4" /></publisher></jms></outputport-instance></outputport-instances><logmanager logger="java.util.logging.FileHandler"><Param name="java.util.logging.FileHandler.limit">50000</Param><Param name="java.util.logging.FileHandler.dir">logs</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.dateformat">MM:dd:yyyy</Param><Param name="java.util.logging.FileHandler.count">4</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.includetimestamp">true</Param></logmanager><logmodules><logmodule name="com.fiorano.bc.trgateway" /><logmodule name="com.fiorano.adapter.jca.xmlsplitter.cci.XMLSplitterInteraction" /><logmodule name="com.fiorano.adapter.jca.xmlsplitter.spi.outbound.XMLSplitterManagedConnectionFactory" /><logmodule name="ERR_HANDLER" /><logmodule name="OUT_HANDLER" level="INFO" /></logmodules><runtime-arguments><runtime-argument name="JVM_PARAMS" mandatory="false" inmemory="false"><value>-DLOG_TO_STREAM=true</value></runtime-argument></runtime-arguments></inst><inst name="SplitToSuppliers_Book"><service guid="XMLSplitter" version="4.0" /><long-description>XMLSplitterComponent</long-description><config-file name="SplitToSuppliers_Book.xml" /><configuration><![CDATA[<?xml version="1.0" encoding="UTF-8"?><TrGatewayConfigurations><BCConfigurations><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.bc.trgateway.model.dmi.bcdk.BCDKConfigurationInfo"> 
  <void property="JCAAdapterConfig"> 
   <string>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;ESBAdapterConfigurations&gt;&lt;ConnectionLess&gt;true&lt;/ConnectionLess&gt;&lt;isConfigurationRequired&gt;true&lt;/isConfigurationRequired&gt;&lt;isLicensed&gt;false&lt;/isLicensed&gt;&lt;Inbound&gt;false&lt;/Inbound&gt;&lt;AdapterInstanceProperties&gt;&lt;![CDATA[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; 
&lt;java version=&quot;1.5.0_05&quot; class=&quot;java.beans.XMLDecoder&quot;&gt; 
 &lt;object class=&quot;fiorano.esb.adapter.cfg.ESBAdapterInstanceProperties&quot;&gt; 
  &lt;void property=&quot;domain&quot;&gt; 
   &lt;string&gt;BCConfigPropertySheet&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;instanceName&quot;&gt; 
   &lt;string&gt;XMLSplitter1&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;logCategories&quot;&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;XMLSplitterManagedConnectionFactory&lt;/string&gt; 
    &lt;object class=&quot;fiorano.esb.adapter.cfg.LogCategory&quot;&gt; 
     &lt;void property=&quot;loggerDescription&quot;&gt; 
      &lt;string&gt;XMLSplitterManagedConnectionFactory&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerDisplayName&quot;&gt; 
      &lt;string&gt;XMLSplitterManagedConnectionFactory&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerLevel&quot;&gt; 
      &lt;string&gt;SEVERE&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerName&quot;&gt; 
      &lt;string&gt;com.fiorano.adapter.jca.xmlsplitter.spi.outbound.XMLSplitterManagedConnectionFactory&lt;/string&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;XMLSplitterInteraction&lt;/string&gt; 
    &lt;object class=&quot;fiorano.esb.adapter.cfg.LogCategory&quot;&gt; 
     &lt;void property=&quot;loggerDescription&quot;&gt; 
      &lt;string&gt;XMLSplitterInteraction&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerDisplayName&quot;&gt; 
      &lt;string&gt;XMLSplitterInteraction&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerLevel&quot;&gt; 
      &lt;string&gt;SEVERE&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerName&quot;&gt; 
      &lt;string&gt;com.fiorano.adapter.jca.xmlsplitter.cci.XMLSplitterInteraction&lt;/string&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;state&quot;&gt; 
   &lt;int&gt;8&lt;/int&gt; 
  &lt;/void&gt; 
 &lt;/object&gt; 
&lt;/java&gt; 
]]&gt;&lt;/AdapterInstanceProperties&gt;&lt;ConfigurationObjects&gt;&lt;ConfigurationObject&gt;&lt;![CDATA[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; 
&lt;java version=&quot;1.5.0_05&quot; class=&quot;java.beans.XMLDecoder&quot;&gt; 
 &lt;object class=&quot;fiorano.esb.adapter.cfg.ConfigurationObject&quot;&gt; 
  &lt;void property=&quot;beanClassName&quot;&gt; 
   &lt;class&gt;com.fiorano.adapter.jca.xmlsplitter.cci.XMLSplitterInteractionSpec&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;beanObject&quot;&gt; 
   &lt;void property=&quot;errorActionsMap&quot;&gt; 
    &lt;object class=&quot;fiorano.esb.adapter.jca.error.ErrorActionsMap&quot;&gt; 
     &lt;void property=&quot;errorActionsMap&quot;&gt; 
      &lt;void method=&quot;put&quot;&gt; 
       &lt;object class=&quot;fiorano.esb.adapter.jca.error.Error&quot;&gt; 
        &lt;void property=&quot;errorID&quot;&gt; 
         &lt;int&gt;2&lt;/int&gt; 
        &lt;/void&gt; 
       &lt;/object&gt; 
       &lt;object class=&quot;java.util.ArrayList&quot;&gt; 
        &lt;void method=&quot;add&quot;&gt; 
         &lt;object class=&quot;fiorano.esb.adapter.jca.error.RetryErrorAction&quot;&gt; 
          &lt;void property=&quot;errorActionID&quot;&gt; 
           &lt;int&gt;1&lt;/int&gt; 
          &lt;/void&gt; 
         &lt;/object&gt; 
        &lt;/void&gt; 
        &lt;void method=&quot;add&quot;&gt; 
         &lt;object class=&quot;fiorano.esb.adapter.jca.error.ErrorAction&quot;&gt; 
          &lt;void property=&quot;errorActionID&quot;&gt; 
           &lt;int&gt;3&lt;/int&gt; 
          &lt;/void&gt; 
         &lt;/object&gt; 
        &lt;/void&gt; 
       &lt;/object&gt; 
      &lt;/void&gt; 
      &lt;void method=&quot;put&quot;&gt; 
       &lt;object class=&quot;fiorano.esb.adapter.jca.error.Error&quot;&gt; 
        &lt;void property=&quot;errorID&quot;&gt; 
         &lt;int&gt;0&lt;/int&gt; 
        &lt;/void&gt; 
       &lt;/object&gt; 
       &lt;object class=&quot;java.util.ArrayList&quot;/&gt; 
      &lt;/void&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;namespaceMap&quot;&gt; 
    &lt;void method=&quot;put&quot;&gt; 
     &lt;string&gt;ns2&lt;/string&gt; 
     &lt;string&gt;http://www.w3.org/2001/XMLSchema&lt;/string&gt; 
    &lt;/void&gt; 
    &lt;void method=&quot;put&quot;&gt; 
     &lt;string&gt;ns1&lt;/string&gt; 
     &lt;string&gt;http://hospitality.com/service/&lt;/string&gt; 
    &lt;/void&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;splitPath&quot;&gt; 
    &lt;string&gt;/ns1:PropertyRQ/ns1:PropertySegments/ns1:PropertySegment&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;state&quot;&gt; 
    &lt;int&gt;6&lt;/int&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;targetNamespace&quot;&gt; 
    &lt;string&gt;http://www.fiorano.com/fesb/activity/XMLSplitter1&lt;/string&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;category&quot;&gt; 
   &lt;string&gt;Flow&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;configParams&quot;&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;outPort&lt;/string&gt; 
    &lt;string&gt;OUT_PORT&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsScheduling&lt;/string&gt; 
    &lt;boolean&gt;true&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;enableScheduling&lt;/string&gt; 
    &lt;boolean&gt;false&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;inPort&lt;/string&gt; 
    &lt;string&gt;IN_PORT&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsStudio&lt;/string&gt; 
    &lt;boolean&gt;false&lt;/boolean&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;description&quot;&gt; 
   &lt;string&gt;XMLSplitterComponent&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;icon&quot;&gt; 
   &lt;string&gt;xmlsplitter.png&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;implClassName&quot;&gt; 
   &lt;class&gt;com.fiorano.adapter.jca.xmlsplitter.cci.XMLSplitterInteractionSpec&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;name&quot;&gt; 
   &lt;string&gt;XMLSplitter&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;type&quot;&gt; 
   &lt;string&gt;javax.resource.cci.InteractionSpec&lt;/string&gt; 
  &lt;/void&gt; 
 &lt;/object&gt; 
&lt;/java&gt; 
]]&gt;&lt;/ConfigurationObject&gt;&lt;ConfigurationObject&gt;&lt;![CDATA[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; 
&lt;java version=&quot;1.5.0_05&quot; class=&quot;java.beans.XMLDecoder&quot;&gt; 
 &lt;object class=&quot;fiorano.esb.adapter.cfg.ConfigurationObject&quot;&gt; 
  &lt;void property=&quot;beanClassName&quot;&gt; 
   &lt;class&gt;com.fiorano.adapter.jca.xmlsplitter.spi.outbound.XMLSplitterManagedConnectionFactory&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;category&quot;&gt; 
   &lt;string&gt;Flow&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;configParams&quot;&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;outPort&lt;/string&gt; 
    &lt;string&gt;OUT_PORT&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsReconnection&lt;/string&gt; 
    &lt;boolean&gt;false&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsScheduling&lt;/string&gt; 
    &lt;boolean&gt;true&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;enableScheduling&lt;/string&gt; 
    &lt;boolean&gt;false&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;inPort&lt;/string&gt; 
    &lt;string&gt;IN_PORT&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsStudio&lt;/string&gt; 
    &lt;boolean&gt;false&lt;/boolean&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;description&quot;&gt; 
   &lt;string&gt;XMLSplitter Connection&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;icon&quot;&gt; 
   &lt;string&gt;cf.gif&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;implClassName&quot;&gt; 
   &lt;class&gt;com.fiorano.adapter.jca.xmlsplitter.spi.outbound.XMLSplitterManagedConnectionFactory&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;name&quot;&gt; 
   &lt;string&gt;XMLSplitter Connection&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;type&quot;&gt; 
   &lt;string&gt;javax.resource.spi.ManagedConnectionFactory&lt;/string&gt; 
  &lt;/void&gt; 
 &lt;/object&gt; 
&lt;/java&gt; 
]]&gt;&lt;/ConfigurationObject&gt;&lt;/ConfigurationObjects&gt;&lt;/ESBAdapterConfigurations&gt;</string> 
  </void> 
 </object> 
</java> 
]]]]><![CDATA[></BCConfigurations><TransportConfigurations><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.bc.trgateway.model.dmi.tr.TrConfigurationInfo"/> 
</java> 
]]]]><![CDATA[></TransportConfigurations><ErrorConfigurations><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.bc.trgateway.model.dmi.error.ErrorConfigurationInfo"> 
  <void property="errorActionsMap"> 
   <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorActionsMap"> 
    <void property="errorActionsMap"> 
     <void method="put"> 
      <object class="fiorano.esb.adapter.jca.error.Error"> 
       <void property="errorID"> 
        <int>2</int> 
       </void> 
      </object> 
      <object class="java.util.ArrayList"> 
       <void method="add"> 
        <object class="fiorano.esb.adapter.jca.error.RetryErrorAction"> 
         <void property="errorActionID"> 
          <int>1</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="fiorano.esb.adapter.jca.error.ErrorAction"> 
         <void property="errorActionID"> 
          <int>3</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="active"> 
          <boolean>true</boolean> 
         </void> 
         <void property="errorActionID"> 
          <int>11</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="errorActionID"> 
          <int>12</int> 
         </void> 
        </object> 
       </void> 
      </object> 
     </void> 
     <void method="put"> 
      <object class="fiorano.esb.adapter.jca.error.Error"> 
       <void property="errorID"> 
        <int>0</int> 
       </void> 
      </object> 
      <object class="java.util.ArrayList"> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="active"> 
          <boolean>true</boolean> 
         </void> 
         <void property="errorActionID"> 
          <int>11</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="active"> 
          <boolean>true</boolean> 
         </void> 
         <void property="errorActionID"> 
          <int>2</int> 
         </void> 
        </object> 
       </void> 
      </object> 
     </void> 
    </void> 
   </object> 
  </void> 
 </object> 
</java> 
]]]]><![CDATA[></ErrorConfigurations><SchedulerConfigurations><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.bc.trgateway.model.dmi.scheduler.SchedulerConfigurationInfo"> 
  <void property="startDate"> 
   <object class="java.util.Date"> 
    <long>1136869400671</long> 
   </object> 
  </void> 
  <void property="timeOffset"> 
   <string>+00:00</string> 
  </void> 
  <void property="unit"> 
   <string>seconds</string> 
  </void> 
 </object> 
</java> 
]]]]><![CDATA[></SchedulerConfigurations></TrGatewayConfigurations>]]></configuration><configuration-properties /><deployment nodes="fps" /><execution><debug enabled="false" port="5000" /><launch first-available-node="false" /></execution><inputport-instances><inputport-instance name="IN_PORT"><jms><destination /><subscriber><transaction enabled="true" /><subscription durable="false" name="null" /></subscriber></jms></inputport-instance></inputport-instances><outputport-instances><outputport-instance name="OUT_PORT"><jms><destination /><publisher><messages priority="4" /></publisher></jms></outputport-instance><outputport-instance name="ON_EXCEPTION"><schema root="Error"><content><![CDATA[<?xml version="1.0" encoding="UTF-8" ?><xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"><xsd:element name="Error"><xsd:complexType><xsd:sequence><xsd:element name="errorCode" type="xsd:string"/><xsd:element name="errorMessage" type="xsd:string"/><xsd:element name="errorTrace" type="xsd:string" minOccurs="0"/><xsd:element name="data" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/></xsd:sequence></xsd:complexType></xsd:element></xsd:sequence></xsd:complexType></xsd:element></xsd:schema>]]></content></schema><jms><destination /><publisher><messages priority="4" /></publisher></jms></outputport-instance></outputport-instances><logmanager logger="java.util.logging.FileHandler"><Param name="java.util.logging.FileHandler.limit">50000</Param><Param name="java.util.logging.FileHandler.dir">logs</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.dateformat">MM:dd:yyyy</Param><Param name="java.util.logging.FileHandler.count">4</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.includetimestamp">true</Param></logmanager><logmodules><logmodule name="com.fiorano.bc.trgateway" /><logmodule name="com.fiorano.adapter.jca.xmlsplitter.cci.XMLSplitterInteraction" /><logmodule name="com.fiorano.adapter.jca.xmlsplitter.spi.outbound.XMLSplitterManagedConnectionFactory" /><logmodule name="ERR_HANDLER" /><logmodule name="OUT_HANDLER" level="INFO" /></logmodules><runtime-arguments><runtime-argument name="JVM_PARAMS" mandatory="false" inmemory="false"><value>-DLOG_TO_STREAM=true</value></runtime-argument></runtime-arguments></inst><inst name="SupplierRouter_1"><service guid="CBR" version="4.0" /><long-description>The CBR service allows data filtering based on the given XPATH selection criteria. This service accepts XML data on the input channel, performs XPATH selection and writes data to the appropriate output port.
        </long-description><config-file name="SupplierRouter_1.xml" /><configuration><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.6.0_02" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.cbr.model.CBRPropertyModel"> 
  <void property="XPaths"> 
   <void method="add"> 
    <string>//ns1:PropertySegment[@SystemID=&apos;A&apos;]</string> 
   </void> 
   <void method="add"> 
    <string>//ns1:PropertySegment[@SystemID=&apos;B&apos;]</string> 
   </void> 
  </void> 
  <void property="namespaces"> 
   <object class="java.util.HashMap"> 
    <void method="put"> 
     <string>ns2</string> 
     <string>http://www.w3.org/2001/XMLSchema</string> 
    </void> 
    <void method="put"> 
     <string>ns1</string> 
     <string>http://hospitality.com/service/</string> 
    </void> 
   </object> 
  </void> 
  <void property="outPortNames"> 
   <void method="add"> 
    <string>Supplier_A_Req</string> 
   </void> 
   <void method="add"> 
    <string>Supplier_B_Req</string> 
   </void> 
  </void> 
  <void property="routeCounts"> 
   <void method="add"> 
    <int>1</int> 
   </void> 
   <void method="add"> 
    <int>1</int> 
   </void> 
   <void method="add"> 
    <int>1</int> 
   </void> 
  </void> 
 </object> 
</java> 
]]></configuration><configuration-properties /><deployment nodes="fps" /><execution><debug enabled="false" port="5000" /><launch first-available-node="false" /></execution><inputport-instances><inputport-instance name="IN_PORT"><jms><destination /><subscriber><transaction enabled="true" /><subscription durable="false" name="null" /></subscriber></jms></inputport-instance></inputport-instances><outputport-instances><outputport-instance name="OUT_FALSE"><jms><destination /><publisher><messages priority="4" /></publisher></jms></outputport-instance><outputport-instance name="Supplier_A_Req"><jms><destination /><publisher><messages persistent="true" /></publisher></jms></outputport-instance><outputport-instance name="Supplier_B_Req"><jms><destination /><publisher><messages persistent="true" /></publisher></jms></outputport-instance><outputport-instance name="ON_EXCEPTION"><schema root="{http://www.fiorano.com/fesb/activity/fault}Error"><content><![CDATA[${RequestFeeder.ON_EXCEPTION}]]></content></schema><jms><destination /><publisher><messages priority="4" /></publisher></jms></outputport-instance></outputport-instances><logmanager logger="java.util.logging.FileHandler"><Param name="java.util.logging.FileHandler.limit">50000</Param><Param name="java.util.logging.FileHandler.dir">logs</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.dateformat">MM:dd:yyyy</Param><Param name="java.util.logging.FileHandler.count">4</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.includetimestamp">true</Param></logmanager><logmodules><logmodule name="ERR_HANDLER" /><logmodule name="OUT_HANDLER" level="INFO" /><logmodule name="CBRService" /></logmodules><runtime-arguments><runtime-argument name="numConnections"><value>1</value></runtime-argument><runtime-argument name="useFioranoCBR"><value>false</value></runtime-argument><runtime-argument name="numSessions"><value>1</value></runtime-argument><runtime-argument name="numConsumers"><value>1</value></runtime-argument><runtime-argument name="JVM_PARAMS" mandatory="false" inmemory="false"><value>-DLOG_TO_STREAM=true</value></runtime-argument></runtime-arguments></inst><inst name="SupplierRouter_2"><service guid="CBR" version="4.0" /><long-description>The CBR service allows data filtering based on the given XPATH selection criteria. This service accepts XML data on the input channel, performs XPATH selection and writes data to the appropriate output port.
        </long-description><config-file name="SupplierRouter_2.xml" /><configuration><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.6.0_02" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.cbr.model.CBRPropertyModel"> 
  <void property="XPaths"> 
   <void method="add"> 
    <string>//ns1:PropertySegment[@SystemID=&apos;A&apos;]</string> 
   </void> 
   <void method="add"> 
    <string>//ns1:PropertySegment[@SystemID=&apos;B&apos;]</string> 
   </void> 
  </void> 
  <void property="namespaces"> 
   <object class="java.util.HashMap"> 
    <void method="put"> 
     <string>ns2</string> 
     <string>http://www.w3.org/2001/XMLSchema</string> 
    </void> 
    <void method="put"> 
     <string>ns1</string> 
     <string>http://hospitality.com/service/</string> 
    </void> 
   </object> 
  </void> 
  <void property="outPortNames"> 
   <void method="add"> 
    <string>Supplier_A_Req</string> 
   </void> 
   <void method="add"> 
    <string>Supplier_B_Req</string> 
   </void> 
  </void> 
  <void property="routeCounts"> 
   <void method="add"> 
    <int>1</int> 
   </void> 
   <void method="add"> 
    <int>1</int> 
   </void> 
   <void method="add"> 
    <int>1</int> 
   </void> 
  </void> 
 </object> 
</java> 
]]></configuration><configuration-properties /><deployment nodes="fps" /><execution><debug enabled="false" port="5000" /><launch first-available-node="false" /></execution><inputport-instances><inputport-instance name="IN_PORT"><jms><destination /><subscriber><transaction enabled="true" /><subscription durable="false" name="null" /></subscriber></jms></inputport-instance></inputport-instances><outputport-instances><outputport-instance name="OUT_FALSE"><jms><destination /><publisher><messages priority="4" /></publisher></jms></outputport-instance><outputport-instance name="Supplier_A_Req"><jms><destination /><publisher><messages persistent="true" /></publisher></jms></outputport-instance><outputport-instance name="Supplier_B_Req"><jms><destination /><publisher><messages persistent="true" /></publisher></jms></outputport-instance><outputport-instance name="ON_EXCEPTION"><schema root="{http://www.fiorano.com/fesb/activity/fault}Error"><content><![CDATA[${RequestFeeder.ON_EXCEPTION}]]></content></schema><jms><destination /><publisher><messages priority="4" /></publisher></jms></outputport-instance></outputport-instances><logmanager logger="java.util.logging.FileHandler"><Param name="java.util.logging.FileHandler.limit">50000</Param><Param name="java.util.logging.FileHandler.dir">logs</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.dateformat">MM:dd:yyyy</Param><Param name="java.util.logging.FileHandler.count">4</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.includetimestamp">true</Param></logmanager><logmodules><logmodule name="ERR_HANDLER" /><logmodule name="OUT_HANDLER" level="INFO" /><logmodule name="CBRService" /></logmodules><runtime-arguments><runtime-argument name="useFioranoCBR"><value>false</value></runtime-argument><runtime-argument name="numConnections"><value>1</value></runtime-argument><runtime-argument name="numSessions"><value>1</value></runtime-argument><runtime-argument name="numConsumers"><value>1</value></runtime-argument><runtime-argument name="JVM_PARAMS" mandatory="false" inmemory="false"><value>-DLOG_TO_STREAM=true</value></runtime-argument></runtime-arguments></inst><inst name="SupplierA_WS_BH"><service guid="WebServiceConsumer" version="4.0" /><long-description>WebService Invoker component</long-description><config-file name="SupplierA_WS_BH.xml" /><configuration><![CDATA[<?xml version="1.0" encoding="UTF-8"?><TrGatewayConfigurations><BCConfigurations><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.bc.trgateway.model.dmi.bcdk.BCDKConfigurationInfo"> 
  <void property="JCAAdapterConfig"> 
   <string>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;ESBAdapterConfigurations&gt;&lt;ConnectionLess&gt;false&lt;/ConnectionLess&gt;&lt;isConfigurationRequired&gt;true&lt;/isConfigurationRequired&gt;&lt;isLicensed&gt;false&lt;/isLicensed&gt;&lt;Inbound&gt;false&lt;/Inbound&gt;&lt;AdapterInstanceProperties&gt;&lt;![CDATA[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; 
&lt;java version=&quot;1.5.0_05&quot; class=&quot;java.beans.XMLDecoder&quot;&gt; 
 &lt;object class=&quot;fiorano.esb.adapter.cfg.ESBAdapterInstanceProperties&quot;&gt; 
  &lt;void property=&quot;domain&quot;&gt; 
   &lt;string&gt;BCConfigPropertySheet&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;instanceName&quot;&gt; 
   &lt;string&gt;Invoke_BookHotel_WS&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;logCategories&quot;&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;WSInvokerInteractionSpec&lt;/string&gt; 
    &lt;object class=&quot;fiorano.esb.adapter.cfg.LogCategory&quot;&gt; 
     &lt;void property=&quot;loggerDescription&quot;&gt; 
      &lt;string&gt;WSInvokerInteractionSpec&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerDisplayName&quot;&gt; 
      &lt;string&gt;WSInvokerInteractionSpec&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerLevel&quot;&gt; 
      &lt;string&gt;SEVERE&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerName&quot;&gt; 
      &lt;string&gt;com.fiorano.webservices.invoker.cci.WSInvokerInteractionSpec&lt;/string&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;WSInvokerManagedConnectionFactory&lt;/string&gt; 
    &lt;object class=&quot;fiorano.esb.adapter.cfg.LogCategory&quot;&gt; 
     &lt;void property=&quot;loggerDescription&quot;&gt; 
      &lt;string&gt;WSInvokerManagedConnectionFactory&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerDisplayName&quot;&gt; 
      &lt;string&gt;WSInvokerManagedConnectionFactory&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerLevel&quot;&gt; 
      &lt;string&gt;SEVERE&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerName&quot;&gt; 
      &lt;string&gt;com.fiorano.webservices.invoker.spi.outbound.WSInvokerManagedConnectionFactory&lt;/string&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;state&quot;&gt; 
   &lt;int&gt;8&lt;/int&gt; 
  &lt;/void&gt; 
 &lt;/object&gt; 
&lt;/java&gt; 
]]&gt;&lt;/AdapterInstanceProperties&gt;&lt;ConfigurationObjects&gt;&lt;ConfigurationObject&gt;&lt;![CDATA[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; 
&lt;java version=&quot;1.5.0_05&quot; class=&quot;java.beans.XMLDecoder&quot;&gt; 
 &lt;object class=&quot;fiorano.esb.adapter.cfg.ConfigurationObject&quot;&gt; 
  &lt;void property=&quot;beanClassName&quot;&gt; 
   &lt;class&gt;com.fiorano.webservices.invoker.cci.WSInvokerInteractionSpec&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;beanObject&quot;&gt; 
   &lt;void property=&quot;description&quot;&gt; 
    &lt;string&gt;&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;&amp;lt;h3&amp;gt;bookHotelRoom&amp;lt;/h3&amp;gt;&amp;lt;pre&amp;gt;string &amp;lt;b&amp;gt;bookHotelRoom&amp;lt;/b&amp;gt;(int in0, string in1)&amp;lt;/pre&amp;gt;&amp;lt;dl&amp;gt;&amp;lt;dt&amp;gt;&amp;lt;b&amp;gt;Parameters:&amp;lt;/b&amp;gt;&amp;lt;dd&amp;gt;&amp;lt;code&amp;gt;in0&amp;lt;/code&amp;gt; - The int value.&amp;lt;dd&amp;gt;&amp;lt;code&amp;gt;in1&amp;lt;/code&amp;gt; - The string value.&amp;lt;dt&amp;gt;&amp;lt;b&amp;gt;Returns:&amp;lt;/b&amp;gt;&amp;lt;dd&amp;gt;&amp;lt;code&amp;gt;string&amp;lt;/code&amp;gt; - The string value.&amp;lt;/dl&amp;gt;&amp;lt;/dd&amp;gt;&amp;lt;/dl&amp;gt;&amp;lt;/html&amp;gt;&amp;lt;/body&amp;gt;&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;endpointAddress&quot;&gt; 
    &lt;string&gt;http://localhost:1880/bcwsgateway/services/SupplierA_WS&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;errorActionsMap&quot;&gt; 
    &lt;object class=&quot;fiorano.esb.adapter.jca.error.ErrorActionsMap&quot;&gt; 
     &lt;void property=&quot;errorActionsMap&quot;&gt; 
      &lt;void method=&quot;put&quot;&gt; 
       &lt;object class=&quot;fiorano.esb.adapter.jca.error.Error&quot;&gt; 
        &lt;void property=&quot;errorID&quot;&gt; 
         &lt;int&gt;2&lt;/int&gt; 
        &lt;/void&gt; 
       &lt;/object&gt; 
       &lt;object class=&quot;java.util.ArrayList&quot;&gt; 
        &lt;void method=&quot;add&quot;&gt; 
         &lt;object class=&quot;fiorano.esb.adapter.jca.error.RetryErrorAction&quot;&gt; 
          &lt;void property=&quot;errorActionID&quot;&gt; 
           &lt;int&gt;1&lt;/int&gt; 
          &lt;/void&gt; 
         &lt;/object&gt; 
        &lt;/void&gt; 
        &lt;void method=&quot;add&quot;&gt; 
         &lt;object class=&quot;fiorano.esb.adapter.jca.error.ErrorAction&quot;&gt; 
          &lt;void property=&quot;errorActionID&quot;&gt; 
           &lt;int&gt;3&lt;/int&gt; 
          &lt;/void&gt; 
         &lt;/object&gt; 
        &lt;/void&gt; 
       &lt;/object&gt; 
      &lt;/void&gt; 
      &lt;void method=&quot;put&quot;&gt; 
       &lt;object class=&quot;fiorano.esb.adapter.jca.error.Error&quot;&gt; 
        &lt;void property=&quot;errorID&quot;&gt; 
         &lt;int&gt;1&lt;/int&gt; 
        &lt;/void&gt; 
       &lt;/object&gt; 
       &lt;object class=&quot;java.util.ArrayList&quot;&gt; 
        &lt;void method=&quot;add&quot;&gt; 
         &lt;object class=&quot;fiorano.esb.adapter.jca.error.RetryErrorAction&quot;/&gt; 
        &lt;/void&gt; 
       &lt;/object&gt; 
      &lt;/void&gt; 
      &lt;void method=&quot;put&quot;&gt; 
       &lt;object class=&quot;fiorano.esb.adapter.jca.error.Error&quot;&gt; 
        &lt;void property=&quot;errorID&quot;&gt; 
         &lt;int&gt;0&lt;/int&gt; 
        &lt;/void&gt; 
       &lt;/object&gt; 
       &lt;object class=&quot;java.util.ArrayList&quot;/&gt; 
      &lt;/void&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;operationInputParam&quot;&gt; 
    &lt;string&gt;bookHotelRoomRequest&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;operationName&quot;&gt; 
    &lt;string&gt;bookHotelRoom&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;operationOutputParam&quot;&gt; 
    &lt;string&gt;bookHotelRoomResponse&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;portName&quot;&gt; 
    &lt;string&gt;SupplierA_WS&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;properties&quot;&gt; 
    &lt;void method=&quot;put&quot;&gt; 
     &lt;string&gt;TargetNamespace.Prefix&lt;/string&gt; 
     &lt;string&gt;impl&lt;/string&gt; 
    &lt;/void&gt; 
    &lt;void method=&quot;put&quot;&gt; 
     &lt;string&gt;javax.xml.rpc.soap.operation.style&lt;/string&gt; 
     &lt;string&gt;rpc&lt;/string&gt; 
    &lt;/void&gt; 
    &lt;void method=&quot;put&quot;&gt; 
     &lt;string&gt;SOAP.version&lt;/string&gt; 
     &lt;string&gt;http://schemas.xmlsoap.org/wsdl/soap/&lt;/string&gt; 
    &lt;/void&gt; 
    &lt;void method=&quot;put&quot;&gt; 
     &lt;string&gt;javax.xml.rpc.soap.http.soapaction.uri&lt;/string&gt; 
     &lt;string&gt;&lt;/string&gt; 
    &lt;/void&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;service&quot;&gt; 
    &lt;string&gt;{http://localhost:1880/bcwsgateway/services/SupplierA_WS}SupplierA_WSService&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;soapBodyNS&quot;&gt; 
    &lt;string&gt;http://DefaultNamespace&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;state&quot;&gt; 
    &lt;int&gt;6&lt;/int&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;category&quot;&gt; 
   &lt;string&gt;WebService&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;configParams&quot;&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsScheduling&lt;/string&gt; 
    &lt;boolean&gt;true&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;enableScheduling&lt;/string&gt; 
    &lt;boolean&gt;false&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsStudio&lt;/string&gt; 
    &lt;boolean&gt;true&lt;/boolean&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;description&quot;&gt; 
   &lt;string&gt;WebService Invoker component&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;icon&quot;&gt; 
   &lt;string&gt;wsinvoker.png&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;implClassName&quot;&gt; 
   &lt;class&gt;com.fiorano.webservices.invoker.cci.WSInvokerInteractionSpec&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;name&quot;&gt; 
   &lt;string&gt;WebServiceConsumer&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;type&quot;&gt; 
   &lt;string&gt;javax.resource.cci.InteractionSpec&lt;/string&gt; 
  &lt;/void&gt; 
 &lt;/object&gt; 
&lt;/java&gt; 
]]&gt;&lt;/ConfigurationObject&gt;&lt;ConfigurationObject&gt;&lt;![CDATA[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; 
&lt;java version=&quot;1.5.0_05&quot; class=&quot;java.beans.XMLDecoder&quot;&gt; 
 &lt;object class=&quot;fiorano.esb.adapter.cfg.ConfigurationObject&quot;&gt; 
  &lt;void property=&quot;beanClassName&quot;&gt; 
   &lt;class&gt;com.fiorano.webservices.invoker.spi.outbound.WSInvokerManagedConnectionFactory&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;beanObject&quot;&gt; 
   &lt;void property=&quot;JNDIName&quot;&gt; 
    &lt;string&gt;WebServiceConsumer&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;state&quot;&gt; 
    &lt;int&gt;8&lt;/int&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;wsdl&quot;&gt; 
    &lt;object class=&quot;com.fiorano.webservices.invoker.model.WSDLInfo&quot;&gt; 
     &lt;void property=&quot;wsdlURL&quot;&gt; 
      &lt;string&gt;http://localhost:1880/bcwsgateway/services/SupplierA_WS?wsdl&lt;/string&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;category&quot;&gt; 
   &lt;string&gt;WebService&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;configParams&quot;&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsReconnection&lt;/string&gt; 
    &lt;boolean&gt;true&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsScheduling&lt;/string&gt; 
    &lt;boolean&gt;true&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;enableScheduling&lt;/string&gt; 
    &lt;boolean&gt;false&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsStudio&lt;/string&gt; 
    &lt;boolean&gt;true&lt;/boolean&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;description&quot;&gt; 
   &lt;string&gt;WSInvoker Connection&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;icon&quot;&gt; 
   &lt;string&gt;wsinvoker.png&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;implClassName&quot;&gt; 
   &lt;class&gt;com.fiorano.webservices.invoker.spi.outbound.WSInvokerManagedConnectionFactory&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;name&quot;&gt; 
   &lt;string&gt;WebServiceConsumer&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;type&quot;&gt; 
   &lt;string&gt;javax.resource.spi.ManagedConnectionFactory&lt;/string&gt; 
  &lt;/void&gt; 
 &lt;/object&gt; 
&lt;/java&gt; 
]]&gt;&lt;/ConfigurationObject&gt;&lt;ConfigurationObject&gt;&lt;![CDATA[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; 
&lt;java version=&quot;1.5.0_05&quot; class=&quot;java.beans.XMLDecoder&quot;&gt; 
 &lt;object class=&quot;fiorano.esb.adapter.cfg.ConfigurationObject&quot;&gt; 
  &lt;void property=&quot;beanClassName&quot;&gt; 
   &lt;class&gt;fiorano.esb.adapter.jca.cci.ESBConnectionSpec&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;beanObject&quot;&gt; 
   &lt;void property=&quot;MCFClassName&quot;&gt; 
    &lt;string&gt;com.fiorano.webservices.invoker.spi.outbound.WSInvokerManagedConnectionFactory&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;connectionFactoryJNDIName&quot;&gt; 
    &lt;string&gt;WebServiceConsumer&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;state&quot;&gt; 
    &lt;int&gt;8&lt;/int&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;category&quot;&gt; 
   &lt;string&gt;WebService&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;configParams&quot;&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsReconnection&lt;/string&gt; 
    &lt;boolean&gt;true&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsScheduling&lt;/string&gt; 
    &lt;boolean&gt;true&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;enableScheduling&lt;/string&gt; 
    &lt;boolean&gt;false&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsStudio&lt;/string&gt; 
    &lt;boolean&gt;true&lt;/boolean&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;description&quot;&gt; 
   &lt;string&gt;WSInvoker Connection&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;icon&quot;&gt; 
   &lt;string&gt;wsinvoker.png&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;implClassName&quot;&gt; 
   &lt;class&gt;fiorano.esb.adapter.jca.cci.ESBConnectionSpec&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;name&quot;&gt; 
   &lt;string&gt;WebServiceConsumer&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;type&quot;&gt; 
   &lt;string&gt;javax.resource.cci.ConnectionSpec&lt;/string&gt; 
  &lt;/void&gt; 
 &lt;/object&gt; 
&lt;/java&gt; 
]]&gt;&lt;/ConfigurationObject&gt;&lt;/ConfigurationObjects&gt;&lt;/ESBAdapterConfigurations&gt;</string> 
  </void> 
 </object> 
</java> 
]]]]><![CDATA[></BCConfigurations><TransportConfigurations><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.bc.trgateway.model.dmi.tr.TrConfigurationInfo"/> 
</java> 
]]]]><![CDATA[></TransportConfigurations><ErrorConfigurations><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.bc.trgateway.model.dmi.error.ErrorConfigurationInfo"> 
  <void property="errorActionsMap"> 
   <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorActionsMap"> 
    <void property="errorActionsMap"> 
     <void method="put"> 
      <object class="fiorano.esb.adapter.jca.error.Error"> 
       <void property="errorID"> 
        <int>2</int> 
       </void> 
      </object> 
      <object class="java.util.ArrayList"> 
       <void method="add"> 
        <object class="fiorano.esb.adapter.jca.error.RetryErrorAction"> 
         <void property="errorActionID"> 
          <int>1</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="fiorano.esb.adapter.jca.error.ErrorAction"> 
         <void property="errorActionID"> 
          <int>3</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="active"> 
          <boolean>true</boolean> 
         </void> 
         <void property="errorActionID"> 
          <int>11</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="errorActionID"> 
          <int>12</int> 
         </void> 
        </object> 
       </void> 
      </object> 
     </void> 
     <void method="put"> 
      <object class="fiorano.esb.adapter.jca.error.Error"> 
       <void property="errorID"> 
        <int>1</int> 
       </void> 
      </object> 
      <object class="java.util.ArrayList"> 
       <void method="add"> 
        <object class="fiorano.esb.adapter.jca.error.RetryErrorAction"/> 
       </void> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="active"> 
          <boolean>true</boolean> 
         </void> 
         <void property="errorActionID"> 
          <int>11</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="errorActionID"> 
          <int>12</int> 
         </void> 
        </object> 
       </void> 
      </object> 
     </void> 
     <void method="put"> 
      <object class="fiorano.esb.adapter.jca.error.Error"> 
       <void property="errorID"> 
        <int>0</int> 
       </void> 
      </object> 
      <object class="java.util.ArrayList"> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="active"> 
          <boolean>true</boolean> 
         </void> 
         <void property="errorActionID"> 
          <int>11</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="active"> 
          <boolean>true</boolean> 
         </void> 
         <void property="errorActionID"> 
          <int>2</int> 
         </void> 
        </object> 
       </void> 
      </object> 
     </void> 
    </void> 
   </object> 
  </void> 
 </object> 
</java> 
]]]]><![CDATA[></ErrorConfigurations><SchedulerConfigurations><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.bc.trgateway.model.dmi.scheduler.SchedulerConfigurationInfo"> 
  <void property="startDate"> 
   <object class="java.util.Date"> 
    <long>1136786206578</long> 
   </object> 
  </void> 
  <void property="timeOffset"> 
   <string>+00:00</string> 
  </void> 
  <void property="unit"> 
   <string>seconds</string> 
  </void> 
 </object> 
</java> 
]]]]><![CDATA[></SchedulerConfigurations></TrGatewayConfigurations>]]></configuration><configuration-properties /><deployment nodes="fps" /><execution><debug enabled="false" port="5000" /><launch first-available-node="false" /></execution><inputport-instances><inputport-instance name="IN_PORT"><schema root="{http://localhost:1880/bcwsgateway/services/SupplierA_WS/bookHotelRoom/Input}Envelope"><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:impl="http://localhost:1880/bcwsgateway/services/SupplierA_WS" xmlns:intf="http://localhost:1880/bcwsgateway/services/SupplierA_WS" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:apachesoap="http://xml.apache.org/xml-soap" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ftns="http://localhost:1880/bcwsgateway/services/SupplierA_WS/bookHotelRoom/Input" targetNamespace="http://localhost:1880/bcwsgateway/services/SupplierA_WS/bookHotelRoom/Input">
   <xsd:import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
   <xsd:element name="Envelope">
      <xsd:complexType>
         <xsd:sequence>
            <xsd:element ref="ftns:Header"/>
            <xsd:element ref="ftns:Body"/>
         </xsd:sequence>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="Header">
      <xsd:complexType>
         <xsd:sequence/>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="Body">
      <xsd:complexType>
         <xsd:sequence>
            <xsd:element ref="ftns:bookHotelRoom"/>
         </xsd:sequence>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="bookHotelRoom">
      <xsd:complexType>
         <xsd:sequence>
            <xsd:element name="in0" type="soapenc:int"/>
            <xsd:element name="in1" type="soapenc:string"/>
         </xsd:sequence>
      </xsd:complexType>
   </xsd:element>
</xsd:schema>]]></content></schema><jms><destination /><subscriber><transaction enabled="true" /><subscription durable="false" name="null" /></subscriber></jms></inputport-instance></inputport-instances><outputport-instances><outputport-instance name="OUT_PORT"><schema root="{http://localhost:1880/bcwsgateway/services/SupplierA_WS/bookHotelRoom/Output}Envelope"><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:impl="http://localhost:1880/bcwsgateway/services/SupplierA_WS" xmlns:intf="http://localhost:1880/bcwsgateway/services/SupplierA_WS" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:apachesoap="http://xml.apache.org/xml-soap" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ftns="http://localhost:1880/bcwsgateway/services/SupplierA_WS/bookHotelRoom/Output" targetNamespace="http://localhost:1880/bcwsgateway/services/SupplierA_WS/bookHotelRoom/Output">
   <xsd:import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
   <xsd:element name="Envelope">
      <xsd:complexType>
         <xsd:sequence>
            <xsd:element ref="ftns:Header"/>
            <xsd:element ref="ftns:Body"/>
         </xsd:sequence>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="Header">
      <xsd:complexType>
         <xsd:sequence/>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="Body">
      <xsd:complexType>
         <xsd:sequence>
            <xsd:element ref="ftns:bookHotelRoom"/>
         </xsd:sequence>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="bookHotelRoom">
      <xsd:complexType>
         <xsd:sequence>
            <xsd:element name="bookHotelRoomReturn" type="soapenc:string"/>
         </xsd:sequence>
      </xsd:complexType>
   </xsd:element>
</xsd:schema>]]></content></schema><jms><destination /><publisher><messages priority="4" /></publisher></jms></outputport-instance><outputport-instance name="ON_EXCEPTION"><schema root="{http://www.fiorano.com/fesb/activity/fault}Error"><content><![CDATA[<?xml version="1.0" encoding="UTF-8" ?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.fiorano.com/fesb/activity/fault" xmlns:tns="http://www.fiorano.com/fesb/activity/fault" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
    <xsd:import namespace="http://schemas.xmlsoap.org/soap/envelope/"/>
    <xsd:element name="Error">
       <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="errorCode" type="xsd:string"/>
            <xsd:element name="errorMessage" type="xsd:string"/>
            <xsd:element name="errorDetail" type="tns:errorDetail" minOccurs="0"/>
            <xsd:element name="data" type="tns:data" minOccurs="0"/>
          </xsd:sequence>
       </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="errorDetail">
	  <xsd:sequence>
            <xsd:element ref="soapenv:Fault"/>
          </xsd:sequence>
    </xsd:complexType>
    <xsd:complexType name="data">
	  <xsd:sequence>
         <xsd:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
</xsd:schema>]]></content></schema><jms><destination /><publisher><messages priority="4" /></publisher></jms></outputport-instance></outputport-instances><logmanager logger="java.util.logging.FileHandler"><Param name="java.util.logging.FileHandler.limit">50000</Param><Param name="java.util.logging.FileHandler.dir">logs</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.dateformat">MM:dd:yyyy</Param><Param name="java.util.logging.FileHandler.count">4</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.includetimestamp">true</Param></logmanager><logmodules><logmodule name="com.fiorano.bc.trgateway" level="ALL" /><logmodule name="com.fiorano.webservices.invoker.spi.outbound.WSInvokerManagedConnectionFactory" level="ALL" /><logmodule name="ERR_HANDLER" level="ALL" /><logmodule name="com.fiorano.webservices.invoker.cci.WSInvokerInteractionSpec" level="ALL" /><logmodule name="OUT_HANDLER" level="ALL" /></logmodules><runtime-arguments><runtime-argument name="JVM_PARAMS" mandatory="false" inmemory="false"><value>-DLOG_TO_STREAM=true</value></runtime-argument></runtime-arguments></inst><inst name="SupplierB_Post"><service guid="HTTPAdapters" version="4.0" /><config-file name="SupplierB_Post.xml" /><configuration><![CDATA[<?xml version="1.0" encoding="UTF-8"?><TrGatewayConfigurations><BCConfigurations><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.bc.trgateway.model.dmi.bcdk.BCDKConfigurationInfo"> 
  <void property="JCAAdapterConfig"> 
   <string>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;ESBAdapterConfigurations&gt;&lt;ConnectionLess&gt;false&lt;/ConnectionLess&gt;&lt;isConfigurationRequired&gt;true&lt;/isConfigurationRequired&gt;&lt;isLicensed&gt;true&lt;/isLicensed&gt;&lt;Inbound&gt;false&lt;/Inbound&gt;&lt;AdapterInstanceProperties&gt;&lt;![CDATA[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; 
&lt;java version=&quot;1.5.0_05&quot; class=&quot;java.beans.XMLDecoder&quot;&gt; 
 &lt;object class=&quot;fiorano.esb.adapter.cfg.ESBAdapterInstanceProperties&quot;&gt; 
  &lt;void property=&quot;domain&quot;&gt; 
   &lt;string&gt;BCConfigPropertySheet&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;instanceName&quot;&gt; 
   &lt;string&gt;Post_BookHotel&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;logCategories&quot;&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;HTTPManagedConnectionFactory&lt;/string&gt; 
    &lt;object class=&quot;fiorano.esb.adapter.cfg.LogCategory&quot;&gt; 
     &lt;void property=&quot;loggerDescription&quot;&gt; 
      &lt;string&gt;HTTPManagedConnectionFactory&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerDisplayName&quot;&gt; 
      &lt;string&gt;HTTPManagedConnectionFactory&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerLevel&quot;&gt; 
      &lt;string&gt;SEVERE&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerName&quot;&gt; 
      &lt;string&gt;HTTPManagedConnectionFactory&lt;/string&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;HTTPInteraction&lt;/string&gt; 
    &lt;object class=&quot;fiorano.esb.adapter.cfg.LogCategory&quot;&gt; 
     &lt;void property=&quot;loggerDescription&quot;&gt; 
      &lt;string&gt;HTTPInteraction&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerDisplayName&quot;&gt; 
      &lt;string&gt;HTTPInteraction&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerLevel&quot;&gt; 
      &lt;string&gt;SEVERE&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerName&quot;&gt; 
      &lt;string&gt;HTTPInteraction&lt;/string&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;state&quot;&gt; 
   &lt;int&gt;8&lt;/int&gt; 
  &lt;/void&gt; 
 &lt;/object&gt; 
&lt;/java&gt; 
]]&gt;&lt;/AdapterInstanceProperties&gt;&lt;ConfigurationObjects&gt;&lt;ConfigurationObject&gt;&lt;![CDATA[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; 
&lt;java version=&quot;1.5.0_05&quot; class=&quot;java.beans.XMLDecoder&quot;&gt; 
 &lt;object class=&quot;fiorano.esb.adapter.cfg.ConfigurationObject&quot;&gt; 
  &lt;void property=&quot;beanClassName&quot;&gt; 
   &lt;class&gt;fiorano.esb.adapter.jca.cci.ESBConnectionSpec&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;beanObject&quot;&gt; 
   &lt;void property=&quot;MCFClassName&quot;&gt; 
    &lt;string&gt;com.fiorano.adapter.jca.http.spi.outbound.HTTPManagedConnectionFactory&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;connectionFactoryJNDIName&quot;&gt; 
    &lt;string&gt;HTTPAdapters&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;state&quot;&gt; 
    &lt;int&gt;8&lt;/int&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;implClassName&quot;&gt; 
   &lt;class&gt;fiorano.esb.adapter.jca.cci.ESBConnectionSpec&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;type&quot;&gt; 
   &lt;string&gt;javax.resource.cci.ConnectionSpec&lt;/string&gt; 
  &lt;/void&gt; 
 &lt;/object&gt; 
&lt;/java&gt; 
]]&gt;&lt;/ConfigurationObject&gt;&lt;ConfigurationObject&gt;&lt;![CDATA[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; 
&lt;java version=&quot;1.5.0_05&quot; class=&quot;java.beans.XMLDecoder&quot;&gt; 
 &lt;object class=&quot;fiorano.esb.adapter.cfg.ConfigurationObject&quot;&gt; 
  &lt;void property=&quot;beanClassName&quot;&gt; 
   &lt;class&gt;com.fiorano.adapter.jca.http.spi.outbound.HTTPManagedConnectionFactory&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;beanObject&quot;&gt; 
   &lt;void property=&quot;HTTPPort&quot;&gt; 
    &lt;int&gt;1880&lt;/int&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;JNDIName&quot;&gt; 
    &lt;string&gt;HTTPAdapters&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;state&quot;&gt; 
    &lt;int&gt;8&lt;/int&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;configParams&quot;&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsReconnection&lt;/string&gt; 
    &lt;boolean&gt;true&lt;/boolean&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;description&quot;&gt; 
   &lt;string&gt;HTTP&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;icon&quot;&gt; 
   &lt;string&gt;httpconnection.png&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;implClassName&quot;&gt; 
   &lt;class&gt;com.fiorano.adapter.jca.http.spi.outbound.HTTPManagedConnectionFactory&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;name&quot;&gt; 
   &lt;string&gt;HTTP&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;type&quot;&gt; 
   &lt;string&gt;javax.resource.spi.ManagedConnectionFactory&lt;/string&gt; 
  &lt;/void&gt; 
 &lt;/object&gt; 
&lt;/java&gt; 
]]&gt;&lt;/ConfigurationObject&gt;&lt;ConfigurationObject&gt;&lt;![CDATA[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; 
&lt;java version=&quot;1.5.0_05&quot; class=&quot;java.beans.XMLDecoder&quot;&gt; 
 &lt;object class=&quot;fiorano.esb.adapter.cfg.ConfigurationObject&quot;&gt; 
  &lt;void property=&quot;beanClassName&quot;&gt; 
   &lt;class&gt;com.fiorano.adapter.jca.http.cci.HTTPInteractionSpec&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;beanObject&quot;&gt; 
   &lt;void property=&quot;HTTPRequestProperty&quot;&gt; 
    &lt;void property=&quot;HTTPMethod&quot;&gt; 
     &lt;string&gt;POST&lt;/string&gt; 
    &lt;/void&gt; 
    &lt;void property=&quot;URI&quot;&gt; 
     &lt;string&gt;/SupplierB/HotelAvailability&lt;/string&gt; 
    &lt;/void&gt; 
    &lt;void property=&quot;contentEncoding&quot;&gt; 
     &lt;string&gt;&lt;/string&gt; 
    &lt;/void&gt; 
    &lt;void property=&quot;contentLength&quot;&gt; 
     &lt;string&gt;&lt;/string&gt; 
    &lt;/void&gt; 
    &lt;void property=&quot;cookie&quot;&gt; 
     &lt;string&gt;&lt;/string&gt; 
    &lt;/void&gt; 
    &lt;void property=&quot;pragma&quot;&gt; 
     &lt;string&gt;&lt;/string&gt; 
    &lt;/void&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;errorActionsMap&quot;&gt; 
    &lt;object class=&quot;fiorano.esb.adapter.jca.error.ErrorActionsMap&quot;&gt; 
     &lt;void property=&quot;errorActionsMap&quot;&gt; 
      &lt;void method=&quot;put&quot;&gt; 
       &lt;object class=&quot;fiorano.esb.adapter.jca.error.Error&quot;&gt; 
        &lt;void property=&quot;errorID&quot;&gt; 
         &lt;int&gt;2&lt;/int&gt; 
        &lt;/void&gt; 
       &lt;/object&gt; 
       &lt;object class=&quot;java.util.ArrayList&quot;&gt; 
        &lt;void method=&quot;add&quot;&gt; 
         &lt;object class=&quot;fiorano.esb.adapter.jca.error.RetryErrorAction&quot;&gt; 
          &lt;void property=&quot;errorActionID&quot;&gt; 
           &lt;int&gt;1&lt;/int&gt; 
          &lt;/void&gt; 
         &lt;/object&gt; 
        &lt;/void&gt; 
        &lt;void method=&quot;add&quot;&gt; 
         &lt;object class=&quot;fiorano.esb.adapter.jca.error.ErrorAction&quot;&gt; 
          &lt;void property=&quot;errorActionID&quot;&gt; 
           &lt;int&gt;3&lt;/int&gt; 
          &lt;/void&gt; 
         &lt;/object&gt; 
        &lt;/void&gt; 
       &lt;/object&gt; 
      &lt;/void&gt; 
      &lt;void method=&quot;put&quot;&gt; 
       &lt;object class=&quot;fiorano.esb.adapter.jca.error.Error&quot;&gt; 
        &lt;void property=&quot;errorID&quot;&gt; 
         &lt;int&gt;1&lt;/int&gt; 
        &lt;/void&gt; 
       &lt;/object&gt; 
       &lt;object class=&quot;java.util.ArrayList&quot;&gt; 
        &lt;void method=&quot;add&quot;&gt; 
         &lt;object class=&quot;fiorano.esb.adapter.jca.error.RetryErrorAction&quot;/&gt; 
        &lt;/void&gt; 
       &lt;/object&gt; 
      &lt;/void&gt; 
      &lt;void method=&quot;put&quot;&gt; 
       &lt;object class=&quot;fiorano.esb.adapter.jca.error.Error&quot;&gt; 
        &lt;void property=&quot;errorID&quot;&gt; 
         &lt;int&gt;0&lt;/int&gt; 
        &lt;/void&gt; 
       &lt;/object&gt; 
       &lt;object class=&quot;java.util.ArrayList&quot;/&gt; 
      &lt;/void&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;state&quot;&gt; 
    &lt;int&gt;6&lt;/int&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;targetNamespace&quot;&gt; 
    &lt;string&gt;http://www.fiorano.com/fesb/activity/Post_BookHotel&lt;/string&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;category&quot;&gt; 
   &lt;string&gt;Web&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;configParams&quot;&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsReconnection&lt;/string&gt; 
    &lt;boolean&gt;true&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsScheduling&lt;/string&gt; 
    &lt;boolean&gt;true&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;enableScheduling&lt;/string&gt; 
    &lt;boolean&gt;false&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsStudio&lt;/string&gt; 
    &lt;boolean&gt;true&lt;/boolean&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;description&quot;&gt; 
   &lt;string&gt;Send a HTTP Get/Post request&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;icon&quot;&gt; 
   &lt;string&gt;httpcomponent.png&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;implClassName&quot;&gt; 
   &lt;class&gt;com.fiorano.adapter.jca.http.cci.HTTPInteractionSpec&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;name&quot;&gt; 
   &lt;string&gt;HTTP&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;type&quot;&gt; 
   &lt;string&gt;javax.resource.cci.InteractionSpec&lt;/string&gt; 
  &lt;/void&gt; 
 &lt;/object&gt; 
&lt;/java&gt; 
]]&gt;&lt;/ConfigurationObject&gt;&lt;/ConfigurationObjects&gt;&lt;/ESBAdapterConfigurations&gt;</string> 
  </void> 
 </object> 
</java> 
]]]]><![CDATA[></BCConfigurations><TransportConfigurations><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.bc.trgateway.model.dmi.tr.TrConfigurationInfo"/> 
</java> 
]]]]><![CDATA[></TransportConfigurations><ErrorConfigurations><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.bc.trgateway.model.dmi.error.ErrorConfigurationInfo"> 
  <void property="errorActionsMap"> 
   <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorActionsMap"> 
    <void property="errorActionsMap"> 
     <void method="put"> 
      <object class="fiorano.esb.adapter.jca.error.Error"> 
       <void property="errorID"> 
        <int>2</int> 
       </void> 
      </object> 
      <object class="java.util.ArrayList"> 
       <void method="add"> 
        <object class="fiorano.esb.adapter.jca.error.RetryErrorAction"> 
         <void property="errorActionID"> 
          <int>1</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="fiorano.esb.adapter.jca.error.ErrorAction"> 
         <void property="errorActionID"> 
          <int>3</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="active"> 
          <boolean>true</boolean> 
         </void> 
         <void property="errorActionID"> 
          <int>11</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="errorActionID"> 
          <int>12</int> 
         </void> 
        </object> 
       </void> 
      </object> 
     </void> 
     <void method="put"> 
      <object class="fiorano.esb.adapter.jca.error.Error"> 
       <void property="errorID"> 
        <int>1</int> 
       </void> 
      </object> 
      <object class="java.util.ArrayList"> 
       <void method="add"> 
        <object class="fiorano.esb.adapter.jca.error.RetryErrorAction"/> 
       </void> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="active"> 
          <boolean>true</boolean> 
         </void> 
         <void property="errorActionID"> 
          <int>11</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="errorActionID"> 
          <int>12</int> 
         </void> 
        </object> 
       </void> 
      </object> 
     </void> 
     <void method="put"> 
      <object class="fiorano.esb.adapter.jca.error.Error"> 
       <void property="errorID"> 
        <int>0</int> 
       </void> 
      </object> 
      <object class="java.util.ArrayList"> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="active"> 
          <boolean>true</boolean> 
         </void> 
         <void property="errorActionID"> 
          <int>11</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="active"> 
          <boolean>true</boolean> 
         </void> 
         <void property="errorActionID"> 
          <int>2</int> 
         </void> 
        </object> 
       </void> 
      </object> 
     </void> 
    </void> 
   </object> 
  </void> 
 </object> 
</java> 
]]]]><![CDATA[></ErrorConfigurations><SchedulerConfigurations><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.bc.trgateway.model.dmi.scheduler.SchedulerConfigurationInfo"> 
  <void property="startDate"> 
   <object class="java.util.Date"> 
    <long>1136814144328</long> 
   </object> 
  </void> 
  <void property="timeOffset"> 
   <string>+00:00</string> 
  </void> 
  <void property="unit"> 
   <string>seconds</string> 
  </void> 
 </object> 
</java> 
]]]]><![CDATA[></SchedulerConfigurations></TrGatewayConfigurations>]]></configuration><configuration-properties /><deployment nodes="fps" /><execution><debug enabled="false" port="5000" /><launch first-available-node="false" /></execution><inputport-instances><inputport-instance name="IN_PORT"><schema root="{http://www.fiorano.com/fesb/activity/Post_BookHotel/HTTP/In}HTTPRequest"><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:fns="http://www.fiorano.com/fesb/activity/Post_BookHotel/HTTP/In" xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.fiorano.com/fesb/activity/Post_BookHotel/HTTP/In">
   <xsd:complexType name="RootType">
      <xsd:sequence minOccurs="0">
         <xsd:element name="URI" type="xsd:string"/>
         <xsd:element name="Header" type="fns:HeaderType"/>
         <xsd:element name="Entity" type="fns:EntityType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="HTTPRequest" type="fns:RootType"/>
   <xsd:complexType name="HeaderType">
      <xsd:sequence>
         <xsd:element name="Cookie" type="xsd:string"/>
         <xsd:element name="Content-Encoding" type="xsd:string"/>
         <xsd:element name="Content-Length" type="xsd:string"/>
         <xsd:element name="Content-Type" type="xsd:string"/>
         <xsd:element name="Pragma" type="xsd:string"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="EntityType">
      <xsd:sequence>
         <xsd:element name="Text" type="xsd:string"/>
      </xsd:sequence>
   </xsd:complexType>
</xsd:schema>]]></content></schema><jms><destination /><subscriber><transaction enabled="true" /><subscription durable="false" name="null" /></subscriber></jms></inputport-instance></inputport-instances><outputport-instances><outputport-instance name="OUT_PORT"><schema root="{http://www.fiorano.com/fesb/activity/Post_BookHotel/HTTP/Out}HTTP-Response"><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:fns="http://www.fiorano.com/fesb/activity/Post_BookHotel/HTTP/Out" xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://www.fiorano.com/fesb/activity/Post_BookHotel/HTTP/Out">
   <xsd:complexType name="ResponseType">
      <xsd:sequence minOccurs="0">
         <xsd:element minOccurs="0" name="Response-Code" type="xsd:string"/>
         <xsd:element minOccurs="0" name="Response-Message" type="xsd:string"/>
         <xsd:element name="Header" type="fns:HeaderType"/>
         <xsd:element name="Body" type="fns:BodyType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="HTTP-Response" type="fns:ResponseType"/>
   <xsd:complexType name="HeaderType">
      <xsd:sequence minOccurs="0">
         <xsd:element name="Content-Encoding" type="xsd:string"/>
         <xsd:element name="Content-Length" type="xsd:string"/>
         <xsd:element name="Content-Type" type="xsd:string"/>
         <xsd:element name="Content-Range" type="xsd:string"/>
         <xsd:element name="Content-Location" type="xsd:string"/>
         <xsd:element name="Last-Modified" type="xsd:string"/>
         <xsd:element name="Set-Cookie" type="xsd:string"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="BodyType">
      <xsd:sequence minOccurs="0" maxOccurs="unbounded">
         <xsd:element name="Text" type="xsd:string"/>
      </xsd:sequence>
   </xsd:complexType>
</xsd:schema>]]></content></schema><jms><destination /><publisher><messages priority="4" /></publisher></jms></outputport-instance><outputport-instance name="ON_EXCEPTION"><schema root="Error"><content><![CDATA[${SplitToSuppliers_Book.ON_EXCEPTION}]]></content></schema><jms><destination /><publisher><messages priority="4" /></publisher></jms></outputport-instance></outputport-instances><logmanager logger="java.util.logging.FileHandler"><Param name="java.util.logging.FileHandler.limit">50000</Param><Param name="java.util.logging.FileHandler.dir">logs</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.dateformat">MM:dd:yyyy</Param><Param name="java.util.logging.FileHandler.count">4</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.includetimestamp">true</Param></logmanager><logmodules><logmodule name="com.fiorano.bc.trgateway" /><logmodule name="HTTPManagedConnectionFactory" /><logmodule name="ERR_HANDLER" /><logmodule name="HTTPInteraction" /><logmodule name="OUT_HANDLER" level="INFO" /></logmodules><runtime-arguments><runtime-argument name="JVM_PARAMS" mandatory="false" inmemory="false"><value>-DLOG_TO_STREAM=true</value></runtime-argument></runtime-arguments></inst><inst name="Transform2B_Book"><service guid="Xslt" version="4.0" /><config-file name="Transform2B_Book.xml" /><configuration><![CDATA[<?xml version="1.0" encoding="UTF-8"?><TrGatewayConfigurations><BCConfigurations><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.bc.trgateway.model.dmi.bcdk.BCDKConfigurationInfo"> 
  <void property="JCAAdapterConfig"> 
   <string>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;ESBAdapterConfigurations&gt;&lt;ConnectionLess&gt;true&lt;/ConnectionLess&gt;&lt;isConfigurationRequired&gt;true&lt;/isConfigurationRequired&gt;&lt;isLicensed&gt;false&lt;/isLicensed&gt;&lt;Inbound&gt;false&lt;/Inbound&gt;&lt;AdapterInstanceProperties&gt;&lt;![CDATA[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; 
&lt;java version=&quot;1.5.0_05&quot; class=&quot;java.beans.XMLDecoder&quot;&gt; 
 &lt;object class=&quot;fiorano.esb.adapter.cfg.ESBAdapterInstanceProperties&quot;&gt; 
  &lt;void property=&quot;domain&quot;&gt; 
   &lt;string&gt;BCConfigPropertySheet&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;instanceName&quot;&gt; 
   &lt;string&gt;Transform2B_Book&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;logCategories&quot;&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;XsltInteractionSpec&lt;/string&gt; 
    &lt;object class=&quot;fiorano.esb.adapter.cfg.LogCategory&quot;&gt; 
     &lt;void property=&quot;loggerDescription&quot;&gt; 
      &lt;string&gt;XsltInteractionSpec&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerDisplayName&quot;&gt; 
      &lt;string&gt;XsltInteractionSpec&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerLevel&quot;&gt; 
      &lt;string&gt;SEVERE&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerName&quot;&gt; 
      &lt;string&gt;com.fiorano.adapter.jca.xslt.cci.XsltInteractionSpec&lt;/string&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;XsltInteraction&lt;/string&gt; 
    &lt;object class=&quot;fiorano.esb.adapter.cfg.LogCategory&quot;&gt; 
     &lt;void property=&quot;loggerDescription&quot;&gt; 
      &lt;string&gt;XsltInteraction&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerDisplayName&quot;&gt; 
      &lt;string&gt;XsltInteraction&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerLevel&quot;&gt; 
      &lt;string&gt;SEVERE&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerName&quot;&gt; 
      &lt;string&gt;com.fiorano.adapter.jca.xslt.cci.XsltInteraction&lt;/string&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;XsltManagedConnectionFactory&lt;/string&gt; 
    &lt;object class=&quot;fiorano.esb.adapter.cfg.LogCategory&quot;&gt; 
     &lt;void property=&quot;loggerDescription&quot;&gt; 
      &lt;string&gt;XsltManagedConnectionFactory&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerDisplayName&quot;&gt; 
      &lt;string&gt;XsltManagedConnectionFactory&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerLevel&quot;&gt; 
      &lt;string&gt;SEVERE&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerName&quot;&gt; 
      &lt;string&gt;com.fiorano.adapter.jca.xslt.spi.outbound.XsltManagedConnectionFactory&lt;/string&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;state&quot;&gt; 
   &lt;int&gt;8&lt;/int&gt; 
  &lt;/void&gt; 
 &lt;/object&gt; 
&lt;/java&gt; 
]]&gt;&lt;/AdapterInstanceProperties&gt;&lt;ConfigurationObjects&gt;&lt;ConfigurationObject&gt;&lt;![CDATA[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; 
&lt;java version=&quot;1.5.0_05&quot; class=&quot;java.beans.XMLDecoder&quot;&gt; 
 &lt;object class=&quot;fiorano.esb.adapter.cfg.ConfigurationObject&quot;&gt; 
  &lt;void property=&quot;beanClassName&quot;&gt; 
   &lt;class&gt;com.fiorano.adapter.jca.xslt.spi.outbound.XsltManagedConnectionFactory&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;configParams&quot;&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsReconnection&lt;/string&gt; 
    &lt;boolean&gt;false&lt;/boolean&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;description&quot;&gt; 
   &lt;string&gt;Xslt Connection&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;icon&quot;&gt; 
   &lt;string&gt;cf.gif&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;implClassName&quot;&gt; 
   &lt;class&gt;com.fiorano.adapter.jca.xslt.spi.outbound.XsltManagedConnectionFactory&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;name&quot;&gt; 
   &lt;string&gt;Xslt Connection&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;type&quot;&gt; 
   &lt;string&gt;javax.resource.spi.ManagedConnectionFactory&lt;/string&gt; 
  &lt;/void&gt; 
 &lt;/object&gt; 
&lt;/java&gt; 
]]&gt;&lt;/ConfigurationObject&gt;&lt;ConfigurationObject&gt;&lt;![CDATA[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; 
&lt;java version=&quot;1.5.0_05&quot; class=&quot;java.beans.XMLDecoder&quot;&gt; 
 &lt;object class=&quot;fiorano.esb.adapter.cfg.ConfigurationObject&quot;&gt; 
  &lt;void property=&quot;beanClassName&quot;&gt; 
   &lt;class&gt;com.fiorano.adapter.jca.xslt.cci.XsltInteractionSpec&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;beanObject&quot;&gt; 
   &lt;void property=&quot;XSL&quot;&gt; 
    &lt;string&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;xsl:stylesheet version=&amp;quot;1.0&amp;quot; xmlns:xsl=&amp;quot;http://www.w3.org/1999/XSL/Transform&amp;quot; xmlns:java=&amp;quot;http://xml.apache.org/xslt/java&amp;quot; xmlns:datetime=&amp;quot;http://exslt.org/dates-and-times&amp;quot; xmlns:set=&amp;quot;http://exslt.org/sets&amp;quot; xmlns:math=&amp;quot;http://exslt.org/math&amp;quot; exclude-result-prefixes=&amp;quot;java&amp;quot; xmlns:lxslt=&amp;quot;http://xml.apache.org/xslt&amp;quot; xmlns:xalan=&amp;quot;http://xml.apache.org/xslt&amp;quot; xmlns:ns1=&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot; xmlns:ns2=&amp;quot;http://www.fiorano.com/fesb/activity/Post_BookHotel/HTTP/In&amp;quot; xmlns:ns0=&amp;quot;http://hospitality.com/service/&amp;quot; xmlns:dateConversion=&amp;quot;ext1&amp;quot; xmlns:myext=&amp;quot;ext2&amp;quot; xmlns:strings=&amp;quot;ext3&amp;quot; extension-element-prefixes=&amp;quot;datetime set math dateConversion myext strings&amp;quot;&amp;gt;
  &amp;lt;xsl:output method=&amp;quot;xml&amp;quot; indent=&amp;quot;yes&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; xalan:indent-amount=&amp;quot;2&amp;quot; omit-xml-declaration=&amp;quot;no&amp;quot;&amp;gt;&amp;lt;/xsl:output&amp;gt;
  &amp;lt;xsl:template match=&amp;quot;/&amp;quot;&amp;gt;
    &amp;lt;ns2:HTTPRequest&amp;gt;
      &amp;lt;Entity&amp;gt;
        &amp;lt;Text&amp;gt;
          &amp;lt;xsl:copy-of select=&amp;quot;document(&amp;apos;Input2&amp;apos;)/ns0:PropertySegment&amp;quot;&amp;gt;&amp;lt;/xsl:copy-of&amp;gt;
        &amp;lt;/Text&amp;gt;
      &amp;lt;/Entity&amp;gt;
    &amp;lt;/ns2:HTTPRequest&amp;gt;
  &amp;lt;/xsl:template&amp;gt;
&amp;lt;/xsl:stylesheet&amp;gt;&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;errorActionsMap&quot;&gt; 
    &lt;object class=&quot;fiorano.esb.adapter.jca.error.ErrorActionsMap&quot;&gt; 
     &lt;void property=&quot;errorActionsMap&quot;&gt; 
      &lt;void method=&quot;put&quot;&gt; 
       &lt;object class=&quot;fiorano.esb.adapter.jca.error.Error&quot;&gt; 
        &lt;void property=&quot;errorID&quot;&gt; 
         &lt;int&gt;2&lt;/int&gt; 
        &lt;/void&gt; 
       &lt;/object&gt; 
       &lt;object class=&quot;java.util.ArrayList&quot;&gt; 
        &lt;void method=&quot;add&quot;&gt; 
         &lt;object class=&quot;fiorano.esb.adapter.jca.error.RetryErrorAction&quot;&gt; 
          &lt;void property=&quot;errorActionID&quot;&gt; 
           &lt;int&gt;1&lt;/int&gt; 
          &lt;/void&gt; 
         &lt;/object&gt; 
        &lt;/void&gt; 
        &lt;void method=&quot;add&quot;&gt; 
         &lt;object class=&quot;fiorano.esb.adapter.jca.error.ErrorAction&quot;&gt; 
          &lt;void property=&quot;errorActionID&quot;&gt; 
           &lt;int&gt;3&lt;/int&gt; 
          &lt;/void&gt; 
         &lt;/object&gt; 
        &lt;/void&gt; 
       &lt;/object&gt; 
      &lt;/void&gt; 
      &lt;void method=&quot;put&quot;&gt; 
       &lt;object class=&quot;fiorano.esb.adapter.jca.error.Error&quot;&gt; 
        &lt;void property=&quot;errorID&quot;&gt; 
         &lt;int&gt;0&lt;/int&gt; 
        &lt;/void&gt; 
       &lt;/object&gt; 
       &lt;object class=&quot;java.util.ArrayList&quot;/&gt; 
      &lt;/void&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;esbDefInPort&quot;&gt; 
    &lt;object class=&quot;fiorano.esb.record.ESBRecordDefinition&quot;&gt; 
     &lt;void property=&quot;importedStructures&quot;&gt; 
      &lt;object class=&quot;java.util.Hashtable&quot;/&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;rootElementName&quot;&gt; 
      &lt;string&gt;PropertySegment&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;structure&quot;&gt; 
      &lt;string&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;xsd:schema xmlns=&amp;quot;http://hospitality.com/service/&amp;quot; xmlns:xsd=&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot; targetNamespace=&amp;quot;http://hospitality.com/service/&amp;quot;&amp;gt;
    &amp;lt;xsd:element name=&amp;quot;GuestCount&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;Count&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
    &amp;lt;xsd:element name=&amp;quot;GuestCounts&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:sequence&amp;gt;
                &amp;lt;xsd:element ref=&amp;quot;GuestCount&amp;quot;/&amp;gt;
            &amp;lt;/xsd:sequence&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;IsPerRoom&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
    
    &amp;lt;xsd:element name=&amp;quot;PropertySegment&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:sequence&amp;gt;
                &amp;lt;xsd:element ref=&amp;quot;StayDateRange&amp;quot;/&amp;gt;
                &amp;lt;xsd:element ref=&amp;quot;RoomStayCandidates&amp;quot;/&amp;gt;
            &amp;lt;/xsd:sequence&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;ChainCode&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;HotelCode&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;SystemID&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
    
    &amp;lt;xsd:element name=&amp;quot;RoomStayCandidate&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:sequence&amp;gt;
                &amp;lt;xsd:element ref=&amp;quot;GuestCounts&amp;quot;/&amp;gt;
            &amp;lt;/xsd:sequence&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
    &amp;lt;xsd:element name=&amp;quot;RoomStayCandidates&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:sequence&amp;gt;
                &amp;lt;xsd:element ref=&amp;quot;RoomStayCandidate&amp;quot;/&amp;gt;
            &amp;lt;/xsd:sequence&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
    &amp;lt;xsd:element name=&amp;quot;StayDateRange&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;End&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;Start&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
&amp;lt;/xsd:schema&amp;gt;&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;targetNamespace&quot;&gt; 
      &lt;string&gt;http://hospitality.com/service/&lt;/string&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;esbDefOutPort&quot;&gt; 
    &lt;object class=&quot;fiorano.esb.record.ESBRecordDefinition&quot;&gt; 
     &lt;void property=&quot;importedStructures&quot;&gt; 
      &lt;object class=&quot;java.util.Hashtable&quot;/&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;rootElementName&quot;&gt; 
      &lt;string&gt;HTTPRequest&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;structure&quot;&gt; 
      &lt;string&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;xsd:schema xmlns:fns=&amp;quot;http://www.fiorano.com/fesb/activity/Post_BookHotel/HTTP/In&amp;quot; xmlns:xsd=&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot; targetNamespace=&amp;quot;http://www.fiorano.com/fesb/activity/Post_BookHotel/HTTP/In&amp;quot;&amp;gt;
   &amp;lt;xsd:complexType name=&amp;quot;RootType&amp;quot;&amp;gt;
      &amp;lt;xsd:sequence minOccurs=&amp;quot;0&amp;quot;&amp;gt;
         &amp;lt;xsd:element name=&amp;quot;URI&amp;quot; type=&amp;quot;xsd:string&amp;quot;/&amp;gt;
         &amp;lt;xsd:element name=&amp;quot;Header&amp;quot; type=&amp;quot;fns:HeaderType&amp;quot;/&amp;gt;
         &amp;lt;xsd:element name=&amp;quot;Entity&amp;quot; type=&amp;quot;fns:EntityType&amp;quot;/&amp;gt;
      &amp;lt;/xsd:sequence&amp;gt;
   &amp;lt;/xsd:complexType&amp;gt;
   &amp;lt;xsd:element name=&amp;quot;HTTPRequest&amp;quot; type=&amp;quot;fns:RootType&amp;quot;/&amp;gt;
   &amp;lt;xsd:complexType name=&amp;quot;HeaderType&amp;quot;&amp;gt;
      &amp;lt;xsd:sequence&amp;gt;
         &amp;lt;xsd:element name=&amp;quot;Cookie&amp;quot; type=&amp;quot;xsd:string&amp;quot;/&amp;gt;
         &amp;lt;xsd:element name=&amp;quot;Content-Encoding&amp;quot; type=&amp;quot;xsd:string&amp;quot;/&amp;gt;
         &amp;lt;xsd:element name=&amp;quot;Content-Length&amp;quot; type=&amp;quot;xsd:string&amp;quot;/&amp;gt;
         &amp;lt;xsd:element name=&amp;quot;Content-Type&amp;quot; type=&amp;quot;xsd:string&amp;quot;/&amp;gt;
         &amp;lt;xsd:element name=&amp;quot;Pragma&amp;quot; type=&amp;quot;xsd:string&amp;quot;/&amp;gt;
      &amp;lt;/xsd:sequence&amp;gt;
   &amp;lt;/xsd:complexType&amp;gt;
   &amp;lt;xsd:complexType name=&amp;quot;EntityType&amp;quot;&amp;gt;
      &amp;lt;xsd:sequence&amp;gt;
         &amp;lt;xsd:element name=&amp;quot;Text&amp;quot; type=&amp;quot;xsd:string&amp;quot;/&amp;gt;
      &amp;lt;/xsd:sequence&amp;gt;
   &amp;lt;/xsd:complexType&amp;gt;
&amp;lt;/xsd:schema&amp;gt;&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;targetNamespace&quot;&gt; 
      &lt;string&gt;http://www.fiorano.com/fesb/activity/Post_BookHotel/HTTP/In&lt;/string&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;project&quot;&gt; 
    &lt;string&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;MapperProject version=&amp;quot;3.0.1&amp;quot; suppressEmptyItems=&amp;quot;false&amp;quot; convertor=&amp;quot;nameIndexed&amp;quot; separator=&amp;quot;,&amp;quot;&amp;gt;
  &amp;lt;XSLTEngine&amp;gt;Xalan&amp;lt;/XSLTEngine&amp;gt;
  &amp;lt;XSLTEncoding&amp;gt;UTF-8&amp;lt;/XSLTEncoding&amp;gt;
  &amp;lt;OutputEncoding&amp;gt;UTF-8&amp;lt;/OutputEncoding&amp;gt;
  &amp;lt;indent&amp;gt;true&amp;lt;/indent&amp;gt;
  &amp;lt;setDTD&amp;gt;false&amp;lt;/setDTD&amp;gt;
  &amp;lt;omit-xml-declaration&amp;gt;false&amp;lt;/omit-xml-declaration&amp;gt;
  &amp;lt;Comments&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/Comments&amp;gt;
  &amp;lt;InputStructure name=&amp;quot;Application-Context&amp;quot; mime=&amp;quot;dtd&amp;quot; rootName=&amp;quot;Context&amp;quot; duplicates=&amp;quot;&amp;quot;&amp;gt;&amp;lt;![CDATA[&amp;lt;!ELEMENT Context (#PCDATA)&amp;gt;]]&amp;gt;&amp;lt;/InputStructure&amp;gt;
  &amp;lt;InputStructure name=&amp;quot;Input2&amp;quot; mime=&amp;quot;xsd&amp;quot; rootName=&amp;quot;PropertySegment&amp;quot; namespace=&amp;quot;http://hospitality.com/service/&amp;quot; parser=&amp;quot;Xerces&amp;quot; duplicates=&amp;quot;&amp;quot;&amp;gt;&amp;lt;![CDATA[&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;xsd:schema xmlns=&amp;quot;http://hospitality.com/service/&amp;quot; xmlns:xsd=&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot; targetNamespace=&amp;quot;http://hospitality.com/service/&amp;quot;&amp;gt;
    &amp;lt;xsd:element name=&amp;quot;GuestCount&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;Count&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
    &amp;lt;xsd:element name=&amp;quot;GuestCounts&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:sequence&amp;gt;
                &amp;lt;xsd:element ref=&amp;quot;GuestCount&amp;quot;/&amp;gt;
            &amp;lt;/xsd:sequence&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;IsPerRoom&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
    
    &amp;lt;xsd:element name=&amp;quot;PropertySegment&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:sequence&amp;gt;
                &amp;lt;xsd:element ref=&amp;quot;StayDateRange&amp;quot;/&amp;gt;
                &amp;lt;xsd:element ref=&amp;quot;RoomStayCandidates&amp;quot;/&amp;gt;
            &amp;lt;/xsd:sequence&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;ChainCode&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;HotelCode&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;SystemID&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
    
    &amp;lt;xsd:element name=&amp;quot;RoomStayCandidate&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:sequence&amp;gt;
                &amp;lt;xsd:element ref=&amp;quot;GuestCounts&amp;quot;/&amp;gt;
            &amp;lt;/xsd:sequence&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
    &amp;lt;xsd:element name=&amp;quot;RoomStayCandidates&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:sequence&amp;gt;
                &amp;lt;xsd:element ref=&amp;quot;RoomStayCandidate&amp;quot;/&amp;gt;
            &amp;lt;/xsd:sequence&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
    &amp;lt;xsd:element name=&amp;quot;StayDateRange&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;End&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;Start&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
&amp;lt;/xsd:schema&amp;gt;]]&amp;gt;&amp;lt;/InputStructure&amp;gt;
  &amp;lt;OutputStructure name=&amp;quot;OUT_PORT&amp;quot; mime=&amp;quot;xsd&amp;quot; rootName=&amp;quot;HTTPRequest&amp;quot; namespace=&amp;quot;http://www.fiorano.com/fesb/activity/Post_BookHotel/HTTP/In&amp;quot; parser=&amp;quot;Xerces&amp;quot; duplicates=&amp;quot;&amp;quot;&amp;gt;&amp;lt;![CDATA[&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;xsd:schema xmlns:fns=&amp;quot;http://www.fiorano.com/fesb/activity/Post_BookHotel/HTTP/In&amp;quot; xmlns:xsd=&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot; targetNamespace=&amp;quot;http://www.fiorano.com/fesb/activity/Post_BookHotel/HTTP/In&amp;quot;&amp;gt;
   &amp;lt;xsd:complexType name=&amp;quot;RootType&amp;quot;&amp;gt;
      &amp;lt;xsd:sequence minOccurs=&amp;quot;0&amp;quot;&amp;gt;
         &amp;lt;xsd:element name=&amp;quot;URI&amp;quot; type=&amp;quot;xsd:string&amp;quot;/&amp;gt;
         &amp;lt;xsd:element name=&amp;quot;Header&amp;quot; type=&amp;quot;fns:HeaderType&amp;quot;/&amp;gt;
         &amp;lt;xsd:element name=&amp;quot;Entity&amp;quot; type=&amp;quot;fns:EntityType&amp;quot;/&amp;gt;
      &amp;lt;/xsd:sequence&amp;gt;
   &amp;lt;/xsd:complexType&amp;gt;
   &amp;lt;xsd:element name=&amp;quot;HTTPRequest&amp;quot; type=&amp;quot;fns:RootType&amp;quot;/&amp;gt;
   &amp;lt;xsd:complexType name=&amp;quot;HeaderType&amp;quot;&amp;gt;
      &amp;lt;xsd:sequence&amp;gt;
         &amp;lt;xsd:element name=&amp;quot;Cookie&amp;quot; type=&amp;quot;xsd:string&amp;quot;/&amp;gt;
         &amp;lt;xsd:element name=&amp;quot;Content-Encoding&amp;quot; type=&amp;quot;xsd:string&amp;quot;/&amp;gt;
         &amp;lt;xsd:element name=&amp;quot;Content-Length&amp;quot; type=&amp;quot;xsd:string&amp;quot;/&amp;gt;
         &amp;lt;xsd:element name=&amp;quot;Content-Type&amp;quot; type=&amp;quot;xsd:string&amp;quot;/&amp;gt;
         &amp;lt;xsd:element name=&amp;quot;Pragma&amp;quot; type=&amp;quot;xsd:string&amp;quot;/&amp;gt;
      &amp;lt;/xsd:sequence&amp;gt;
   &amp;lt;/xsd:complexType&amp;gt;
   &amp;lt;xsd:complexType name=&amp;quot;EntityType&amp;quot;&amp;gt;
      &amp;lt;xsd:sequence&amp;gt;
         &amp;lt;xsd:element name=&amp;quot;Text&amp;quot; type=&amp;quot;xsd:string&amp;quot;/&amp;gt;
      &amp;lt;/xsd:sequence&amp;gt;
   &amp;lt;/xsd:complexType&amp;gt;
&amp;lt;/xsd:schema&amp;gt;]]&amp;gt;&amp;lt;/OutputStructure&amp;gt;
  &amp;lt;Extensions&amp;gt;
    &amp;lt;Extension name=&amp;quot;dateConversion&amp;quot; language=&amp;quot;javascript&amp;quot;&amp;gt;
      &amp;lt;Script&amp;gt;&amp;lt;![CDATA[// ===================================================================
// You may *NOT* re-distribute this code in any way except through its
// use. That means, you can include it in your product, or your web
// site, or any other form where the code is actually being used. You
// may not put the plain javascript up on your site for download or
// include it in your javascript libraries for download. 
// If you wish to share this code with others, please just point them
// to the URL instead.
// Please DO NOT link directly to my .js files from your site. Copy
// the files to your server and use them there. Thank you.
// ===================================================================

// HISTORY
// ------------------------------------------------------------------
// March 11, 2003: Added parseDate() function
// March 11, 2003: Added &amp;quot;NNN&amp;quot; formatting option. Doesn&amp;apos;t match up
//                 perfectly with SimpleDateFormat formats, but 
//                 backwards-compatability was required.

// ------------------------------------------------------------------
// These functions use the same &amp;apos;format&amp;apos; strings as the 
// java.text.SimpleDateFormat class, with minor exceptions.
// The format string consists of the following abbreviations:
// 
// Field        | Full Form          | Short Form
// -------------+--------------------+-----------------------
// Year         | yyyy (4 digits)    | yy (2 digits), y (2 or 4 digits)
// Month        | MMM (name or abbr.)| MM (2 digits), M (1 or 2 digits)
//              | NNN (abbr.)        |
// Day of Month | dd (2 digits)      | d (1 or 2 digits)
// Day of Week  | EE (name)          | E (abbr)
// Hour (1-12)  | hh (2 digits)      | h (1 or 2 digits)
// Hour (0-23)  | HH (2 digits)      | H (1 or 2 digits)
// Hour (0-11)  | KK (2 digits)      | K (1 or 2 digits)
// Hour (1-24)  | kk (2 digits)      | k (1 or 2 digits)
// Minute       | mm (2 digits)      | m (1 or 2 digits)
// Second       | ss (2 digits)      | s (1 or 2 digits)
// AM/PM        | a                  |
//
// NOTE THE DIFFERENCE BETWEEN MM and mm! Month=MM, not mm!
// Examples:
//  &amp;quot;MMM d, y&amp;quot; matches: January 01, 2000
//                      Dec 1, 1900
//                      Nov 20, 00
//  &amp;quot;M/d/yy&amp;quot;   matches: 01/20/00
//                      9/2/00
//  &amp;quot;MMM dd, yyyy hh:mm:ssa&amp;quot; matches: &amp;quot;January 01, 2000 12:30:45AM&amp;quot;
// ------------------------------------------------------------------

var MONTH_NAMES=new Array(&amp;apos;January&amp;apos;,&amp;apos;February&amp;apos;,&amp;apos;March&amp;apos;,&amp;apos;April&amp;apos;,&amp;apos;May&amp;apos;,&amp;apos;June&amp;apos;,&amp;apos;July&amp;apos;,&amp;apos;August&amp;apos;,&amp;apos;September&amp;apos;,&amp;apos;October&amp;apos;,&amp;apos;November&amp;apos;,&amp;apos;December&amp;apos;,&amp;apos;Jan&amp;apos;,&amp;apos;Feb&amp;apos;,&amp;apos;Mar&amp;apos;,&amp;apos;Apr&amp;apos;,&amp;apos;May&amp;apos;,&amp;apos;Jun&amp;apos;,&amp;apos;Jul&amp;apos;,&amp;apos;Aug&amp;apos;,&amp;apos;Sep&amp;apos;,&amp;apos;Oct&amp;apos;,&amp;apos;Nov&amp;apos;,&amp;apos;Dec&amp;apos;);
var DAY_NAMES=new Array(&amp;apos;Sunday&amp;apos;,&amp;apos;Monday&amp;apos;,&amp;apos;Tuesday&amp;apos;,&amp;apos;Wednesday&amp;apos;,&amp;apos;Thursday&amp;apos;,&amp;apos;Friday&amp;apos;,&amp;apos;Saturday&amp;apos;,&amp;apos;Sun&amp;apos;,&amp;apos;Mon&amp;apos;,&amp;apos;Tue&amp;apos;,&amp;apos;Wed&amp;apos;,&amp;apos;Thu&amp;apos;,&amp;apos;Fri&amp;apos;,&amp;apos;Sat&amp;apos;);
function LZ(x) {return(x&amp;lt;0||x&amp;gt;9?&amp;quot;&amp;quot;:&amp;quot;0&amp;quot;)+x}

function convertDate(dateString, inFormat, outFormat)
{
    return formatDate(getDateFromFormat(dateString,inFormat),outFormat);
}

// ------------------------------------------------------------------
// isDate ( date_string, format_string )
// Returns true if date string matches format of format string and
// is a valid date. Else returns false.
// It is recommended that you trim whitespace around the value before
// passing it to this function, as whitespace is NOT ignored!
// ------------------------------------------------------------------
function isDate(val,format) {
    var date=getDateFromFormat(val,format);
    if (date==0) { return false; }
    return true;
    }

// -------------------------------------------------------------------
// compareDates(date1,date1format,date2,date2format)
//   Compare two date strings to see which is greater.
//   Returns:
//   1 if date1 is greater than date2
//   0 if date2 is greater than date1 of if they are the same
//  -1 if either of the dates is in an invalid format
// -------------------------------------------------------------------
function compareDates(date1,dateformat1,date2,dateformat2) {
    var d1=getDateFromFormat(date1,dateformat1);
    var d2=getDateFromFormat(date2,dateformat2);
    if (d1==0 || d2==0) {
        return -1;
        }
    else if (d1 &amp;gt; d2) {
        return 1;
        }
    return 0;
    }

// ------------------------------------------------------------------
// formatDate (date_object, format)
// Returns a date in the output format specified.
// The format string uses the same abbreviations as in getDateFromFormat()
// ------------------------------------------------------------------
function formatDate(date,format) {
    format=format+&amp;quot;&amp;quot;;
    var result=&amp;quot;&amp;quot;;
    var i_format=0;
    var c=&amp;quot;&amp;quot;;
    var token=&amp;quot;&amp;quot;;
    var y=date.getYear()+&amp;quot;&amp;quot;;
    var M=date.getMonth()+1;
    var d=date.getDate();
    var E=date.getDay();
    var H=date.getHours();
    var m=date.getMinutes();
    var s=date.getSeconds();
    var yyyy,yy,MMM,MM,dd,hh,h,mm,ss,ampm,HH,H,KK,K,kk,k;
    // Convert real date parts into formatted versions
    var value=new Object();
    if (y.length &amp;lt; 4) {y=&amp;quot;&amp;quot;+(y-0+1900);}
    value[&amp;quot;y&amp;quot;]=&amp;quot;&amp;quot;+y;
    value[&amp;quot;yyyy&amp;quot;]=y;
    value[&amp;quot;yy&amp;quot;]=y.substring(2,4);
    value[&amp;quot;M&amp;quot;]=M;
    value[&amp;quot;MM&amp;quot;]=LZ(M);
    value[&amp;quot;MMM&amp;quot;]=MONTH_NAMES[M-1];
    value[&amp;quot;NNN&amp;quot;]=MONTH_NAMES[M+11];
    value[&amp;quot;d&amp;quot;]=d;
    value[&amp;quot;dd&amp;quot;]=LZ(d);
    value[&amp;quot;E&amp;quot;]=DAY_NAMES[E+7];
    value[&amp;quot;EE&amp;quot;]=DAY_NAMES[E];
    value[&amp;quot;H&amp;quot;]=H;
    value[&amp;quot;HH&amp;quot;]=LZ(H);
    if (H==0){value[&amp;quot;h&amp;quot;]=12;}
    else if (H&amp;gt;12){value[&amp;quot;h&amp;quot;]=H-12;}
    else {value[&amp;quot;h&amp;quot;]=H;}
    value[&amp;quot;hh&amp;quot;]=LZ(value[&amp;quot;h&amp;quot;]);
    if (H&amp;gt;11){value[&amp;quot;K&amp;quot;]=H-12;} else {value[&amp;quot;K&amp;quot;]=H;}
    value[&amp;quot;k&amp;quot;]=H+1;
    value[&amp;quot;KK&amp;quot;]=LZ(value[&amp;quot;K&amp;quot;]);
    value[&amp;quot;kk&amp;quot;]=LZ(value[&amp;quot;k&amp;quot;]);
    if (H &amp;gt; 11) { value[&amp;quot;a&amp;quot;]=&amp;quot;PM&amp;quot;; }
    else { value[&amp;quot;a&amp;quot;]=&amp;quot;AM&amp;quot;; }
    value[&amp;quot;m&amp;quot;]=m;
    value[&amp;quot;mm&amp;quot;]=LZ(m);
    value[&amp;quot;s&amp;quot;]=s;
    value[&amp;quot;ss&amp;quot;]=LZ(s);
    while (i_format &amp;lt; format.length) {
        c=format.charAt(i_format);
        token=&amp;quot;&amp;quot;;
        while ((format.charAt(i_format)==c) &amp;amp;&amp;amp; (i_format &amp;lt; format.length)) {
            token += format.charAt(i_format++);
            }
        if (value[token] != null) { result=result + value[token]; }
        else { result=result + token; }
        }
    return result;
    }
    
// ------------------------------------------------------------------
// Utility functions for parsing in getDateFromFormat()
// ------------------------------------------------------------------
function _isInteger(val) {
    var digits=&amp;quot;1234567890&amp;quot;;
    for (var i=0; i &amp;lt; val.length; i++) {
        if (digits.indexOf(val.charAt(i))==-1) { return false; }
        }
    return true;
    }
function _getInt(str,i,minlength,maxlength) {
    for (var x=maxlength; x&amp;gt;=minlength; x--) {
        var token=str.substring(i,i+x);
        if (token.length &amp;lt; minlength) { return null; }
        if (_isInteger(token)) { return token; }
        }
    return null;
    }
    
// ------------------------------------------------------------------
// getDateFromFormat( date_string , format_string )
//
// This function takes a date string and a format string. It matches
// If the date string matches the format string, it returns the 
// getTime() of the date. If it does not match, it returns 0.
// ------------------------------------------------------------------
function getDateFromFormat(val,format) {
    val=val+&amp;quot;&amp;quot;;
    format=format+&amp;quot;&amp;quot;;
    var i_val=0;
    var i_format=0;
    var c=&amp;quot;&amp;quot;;
    var token=&amp;quot;&amp;quot;;
    var token2=&amp;quot;&amp;quot;;
    var x,y;
    var now=new Date();
    var year=now.getYear();
    var month=now.getMonth()+1;
    var date=1;
    var hh=now.getHours();
    var mm=now.getMinutes();
    var ss=now.getSeconds();
    var ampm=&amp;quot;&amp;quot;;
    
    while (i_format &amp;lt; format.length) {
        // Get next token from format string
        c=format.charAt(i_format);
        token=&amp;quot;&amp;quot;;
        while ((format.charAt(i_format)==c) &amp;amp;&amp;amp; (i_format &amp;lt; format.length)) {
            token += format.charAt(i_format++);
            }
        // Extract contents of value based on format token
        if (token==&amp;quot;yyyy&amp;quot; || token==&amp;quot;yy&amp;quot; || token==&amp;quot;y&amp;quot;) {
            if (token==&amp;quot;yyyy&amp;quot;) { x=4;y=4; }
            if (token==&amp;quot;yy&amp;quot;)   { x=2;y=2; }
            if (token==&amp;quot;y&amp;quot;)    { x=2;y=4; }
            year=_getInt(val,i_val,x,y);
            if (year==null) { return 0; }
            i_val += year.length;
            if (year.length==2) {
                if (year &amp;gt; 70) { year=1900+(year-0); }
                else { year=2000+(year-0); }
                }
            }
        else if (token==&amp;quot;MMM&amp;quot;||token==&amp;quot;NNN&amp;quot;){
            month=0;
            for (var i=0; i&amp;lt;MONTH_NAMES.length; i++) {
                var month_name=MONTH_NAMES[i];
                if (val.substring(i_val,i_val+month_name.length).toLowerCase()==month_name.toLowerCase()) {
                    if (token==&amp;quot;MMM&amp;quot;||(token==&amp;quot;NNN&amp;quot;&amp;amp;&amp;amp;i&amp;gt;11)) {
                        month=i+1;
                        if (month&amp;gt;12) { month -= 12; }
                        i_val += month_name.length;
                        break;
                        }
                    }
                }
            if ((month &amp;lt; 1)||(month&amp;gt;12)){return 0;}
            }
        else if (token==&amp;quot;EE&amp;quot;||token==&amp;quot;E&amp;quot;){
            for (var i=0; i&amp;lt;DAY_NAMES.length; i++) {
                var day_name=DAY_NAMES[i];
                if (val.substring(i_val,i_val+day_name.length).toLowerCase()==day_name.toLowerCase()) {
                    i_val += day_name.length;
                    break;
                    }
                }
            }
        else if (token==&amp;quot;MM&amp;quot;||token==&amp;quot;M&amp;quot;) {
            month=_getInt(val,i_val,token.length,2);
            if(month==null||(month&amp;lt;1)||(month&amp;gt;12)){return 0;}
            i_val+=month.length;}
        else if (token==&amp;quot;dd&amp;quot;||token==&amp;quot;d&amp;quot;) {
            date=_getInt(val,i_val,token.length,2);
            if(date==null||(date&amp;lt;1)||(date&amp;gt;31)){return 0;}
            i_val+=date.length;}
        else if (token==&amp;quot;hh&amp;quot;||token==&amp;quot;h&amp;quot;) {
            hh=_getInt(val,i_val,token.length,2);
            if(hh==null||(hh&amp;lt;1)||(hh&amp;gt;12)){return 0;}
            i_val+=hh.length;}
        else if (token==&amp;quot;HH&amp;quot;||token==&amp;quot;H&amp;quot;) {
            hh=_getInt(val,i_val,token.length,2);
            if(hh==null||(hh&amp;lt;0)||(hh&amp;gt;23)){return 0;}
            i_val+=hh.length;}
        else if (token==&amp;quot;KK&amp;quot;||token==&amp;quot;K&amp;quot;) {
            hh=_getInt(val,i_val,token.length,2);
            if(hh==null||(hh&amp;lt;0)||(hh&amp;gt;11)){return 0;}
            i_val+=hh.length;}
        else if (token==&amp;quot;kk&amp;quot;||token==&amp;quot;k&amp;quot;) {
            hh=_getInt(val,i_val,token.length,2);
            if(hh==null||(hh&amp;lt;1)||(hh&amp;gt;24)){return 0;}
            i_val+=hh.length;hh--;}
        else if (token==&amp;quot;mm&amp;quot;||token==&amp;quot;m&amp;quot;) {
            mm=_getInt(val,i_val,token.length,2);
            if(mm==null||(mm&amp;lt;0)||(mm&amp;gt;59)){return 0;}
            i_val+=mm.length;}
        else if (token==&amp;quot;ss&amp;quot;||token==&amp;quot;s&amp;quot;) {
            ss=_getInt(val,i_val,token.length,2);
            if(ss==null||(ss&amp;lt;0)||(ss&amp;gt;59)){return 0;}
            i_val+=ss.length;}
        else if (token==&amp;quot;a&amp;quot;) {
            if (val.substring(i_val,i_val+2).toLowerCase()==&amp;quot;am&amp;quot;) {ampm=&amp;quot;AM&amp;quot;;}
            else if (val.substring(i_val,i_val+2).toLowerCase()==&amp;quot;pm&amp;quot;) {ampm=&amp;quot;PM&amp;quot;;}
            else {return 0;}
            i_val+=2;}
        else {
            if (val.substring(i_val,i_val+token.length)!=token) {return 0;}
            else {i_val+=token.length;}
            }
        }
    // If there are any trailing characters left in the value, it doesn&amp;apos;t match
    if (i_val != val.length) { return 0; }
    // Is date valid for month?
    if (month==2) {
        // Check for leap year
        if ( ( (year%4==0)&amp;amp;&amp;amp;(year%100 != 0) ) || (year%400==0) ) { // leap year
            if (date &amp;gt; 29){ return 0; }
            }
        else { if (date &amp;gt; 28) { return 0; } }
        }
    if ((month==4)||(month==6)||(month==9)||(month==11)) {
        if (date &amp;gt; 30) { return 0; }
        }
    // Correct hours value
    if (hh&amp;lt;12 &amp;amp;&amp;amp; ampm==&amp;quot;PM&amp;quot;) { hh=hh-0+12; }
    else if (hh&amp;gt;11 &amp;amp;&amp;amp; ampm==&amp;quot;AM&amp;quot;) { hh-=12; }
    var newdate=new Date(year,month-1,date,hh,mm,ss);
    return newdate;
    }

// ------------------------------------------------------------------
// parseDate( date_string [, prefer_euro_format] )
//
// This function takes a date string and tries to match it to a
// number of possible date formats to get the value. It will try to
// match against the following international formats, in this order:
// y-M-d   MMM d, y   MMM d,y   y-MMM-d   d-MMM-y  MMM d
// M/d/y   M-d-y      M.d.y     MMM-d     M/d      M-d
// d/M/y   d-M-y      d.M.y     d-MMM     d/M      d-M
// A second argument may be passed to instruct the method to search
// for formats like d/M/y (european format) before M/d/y (American).
// Returns a Date object or null if no patterns match.
// ------------------------------------------------------------------
function parseDate(val) {
    var preferEuro=(arguments.length==2)?arguments[1]:false;
    generalFormats=new Array(&amp;apos;y-M-d&amp;apos;,&amp;apos;MMM d, y&amp;apos;,&amp;apos;MMM d,y&amp;apos;,&amp;apos;y-MMM-d&amp;apos;,&amp;apos;d-MMM-y&amp;apos;,&amp;apos;MMM d&amp;apos;);
    monthFirst=new Array(&amp;apos;M/d/y&amp;apos;,&amp;apos;M-d-y&amp;apos;,&amp;apos;M.d.y&amp;apos;,&amp;apos;MMM-d&amp;apos;,&amp;apos;M/d&amp;apos;,&amp;apos;M-d&amp;apos;);
    dateFirst =new Array(&amp;apos;d/M/y&amp;apos;,&amp;apos;d-M-y&amp;apos;,&amp;apos;d.M.y&amp;apos;,&amp;apos;d-MMM&amp;apos;,&amp;apos;d/M&amp;apos;,&amp;apos;d-M&amp;apos;);
    var checkList=new Array(&amp;apos;generalFormats&amp;apos;,preferEuro?&amp;apos;dateFirst&amp;apos;:&amp;apos;monthFirst&amp;apos;,preferEuro?&amp;apos;monthFirst&amp;apos;:&amp;apos;dateFirst&amp;apos;);
    var d=null;
    for (var i=0; i&amp;lt;checkList.length; i++) {
        var l=window[checkList[i]];
        for (var j=0; j&amp;lt;l.length; j++) {
            d=getDateFromFormat(val,l[j]);
            if (d&amp;gt;0) { return new Date(d); }
            }
        }
    return null;
}]]&amp;gt;&amp;lt;/Script&amp;gt;
      &amp;lt;Function name=&amp;quot;convertDate&amp;quot; return=&amp;quot;String&amp;quot;&amp;gt;
        &amp;lt;Argument name=&amp;quot;dateString&amp;quot; datatype=&amp;quot;String&amp;quot;&amp;gt;&amp;lt;/Argument&amp;gt;
        &amp;lt;Argument name=&amp;quot;inFormat&amp;quot; datatype=&amp;quot;String&amp;quot;&amp;gt;&amp;lt;/Argument&amp;gt;
        &amp;lt;Argument name=&amp;quot;outFormat&amp;quot; datatype=&amp;quot;String&amp;quot;&amp;gt;&amp;lt;/Argument&amp;gt;
      &amp;lt;/Function&amp;gt;
    &amp;lt;/Extension&amp;gt;
    &amp;lt;Extension name=&amp;quot;myext&amp;quot; language=&amp;quot;javascript&amp;quot;&amp;gt;
      &amp;lt;Script&amp;gt;&amp;lt;![CDATA[function compute(expr){
    return eval(expr);
}

function nextMillenium(){
    d = new Date()    //today&amp;apos;s date
    mill=new Date(3000, 00, 01, 00, 00, 00)    //Next millennium start date
    diff = mill-d    //difference in milliseconds
    mtg = new String(diff/86400000)    //calculate days and convert to string
    point=mtg.indexOf(&amp;quot;.&amp;quot;)    //find the decimal point
    days=mtg.substring(0,point)    //get just the whole days
    return &amp;quot;There are only &amp;quot; + days + &amp;quot; days remaining to the start of the next millennium.&amp;quot;; 
}

function replace(input, pattern, flags, str){
    return input.replace(new RegExp(pattern, flags), str);
}]]&amp;gt;&amp;lt;/Script&amp;gt;
      &amp;lt;Function name=&amp;quot;compute&amp;quot; return=&amp;quot;String&amp;quot;&amp;gt;
        &amp;lt;Argument name=&amp;quot;expr&amp;quot; datatype=&amp;quot;String&amp;quot;&amp;gt;&amp;lt;/Argument&amp;gt;
      &amp;lt;/Function&amp;gt;
      &amp;lt;Function name=&amp;quot;nextMillenium&amp;quot; return=&amp;quot;String&amp;quot;&amp;gt;&amp;lt;/Function&amp;gt;
      &amp;lt;Function name=&amp;quot;replace&amp;quot; return=&amp;quot;String&amp;quot;&amp;gt;
        &amp;lt;Argument name=&amp;quot;input&amp;quot; datatype=&amp;quot;String&amp;quot;&amp;gt;&amp;lt;/Argument&amp;gt;
        &amp;lt;Argument name=&amp;quot;pattern&amp;quot; datatype=&amp;quot;String&amp;quot;&amp;gt;&amp;lt;/Argument&amp;gt;
        &amp;lt;Argument name=&amp;quot;flags&amp;quot; datatype=&amp;quot;String&amp;quot;&amp;gt;&amp;lt;/Argument&amp;gt;
        &amp;lt;Argument name=&amp;quot;str&amp;quot; datatype=&amp;quot;String&amp;quot;&amp;gt;&amp;lt;/Argument&amp;gt;
      &amp;lt;/Function&amp;gt;
    &amp;lt;/Extension&amp;gt;
    &amp;lt;Extension name=&amp;quot;strings&amp;quot; language=&amp;quot;javascript&amp;quot;&amp;gt;
      &amp;lt;Script&amp;gt;&amp;lt;![CDATA[function multiConcat(ctx, delim){
    var ipString = &amp;quot;&amp;quot;;
    if (ctx.length){
    for (var i=0; i &amp;lt; ctx.getLength(); i++){
        ctxN  = ctx.item(i);
        if (ctxN.nodeType == 1){
            ipString +=  _wander(ctxN, delim);
        }
        if (ctxN.nodeType == 2){
            ipString += ctxN.nodeValue;
        }
    }
    }else{
    return &amp;apos;&amp;apos;;
    }
    return ipString.length&amp;gt;1 ? ipString.substring(delim.length) : ipString;
}
function   _wander(ctx, delim){
    var retStr = &amp;quot;&amp;quot;;
    var nodelist = ctx.childNodes;
    
    for (var i=0; i &amp;lt; ctx.childNodes.length; i++){
        
        ctxN = nodelist.item(i);//ctx.childNodes[i];
        
        switch(ctxN.nodeType){
            case 1:
                retStr +=   _wander(ctxN);
                break;
            case 3:
                retStr += delim +ctxN.nodeValue;
                break;
            default:
                break;
        }
    }
    return retStr;
}]]&amp;gt;&amp;lt;/Script&amp;gt;
      &amp;lt;Function name=&amp;quot;multiConcat&amp;quot; return=&amp;quot;String&amp;quot;&amp;gt;
        &amp;lt;Argument name=&amp;quot;ctx&amp;quot; datatype=&amp;quot;Unknown&amp;quot;&amp;gt;&amp;lt;/Argument&amp;gt;
        &amp;lt;Argument name=&amp;quot;delim&amp;quot; datatype=&amp;quot;String&amp;quot;&amp;gt;&amp;lt;/Argument&amp;gt;
      &amp;lt;/Function&amp;gt;
    &amp;lt;/Extension&amp;gt;
  &amp;lt;/Extensions&amp;gt;
  &amp;lt;Mappings&amp;gt;
    &amp;lt;GraphModel outputNode=&amp;quot;OUT_PORT:0,HTTPRequest:0,Entity:0,Text:0&amp;quot; x=&amp;quot;543&amp;quot; y=&amp;quot;46&amp;quot; inputPins=&amp;quot;1,2&amp;quot;&amp;gt;
      &amp;lt;FunctionGraphNode label=&amp;quot;Deep-Copy&amp;quot; type=&amp;quot;62&amp;quot; x=&amp;quot;339&amp;quot; y=&amp;quot;44&amp;quot;&amp;gt;
        &amp;lt;InputPins&amp;gt;1&amp;lt;/InputPins&amp;gt;
        &amp;lt;OutputPins&amp;gt;R&amp;lt;/OutputPins&amp;gt;
        &amp;lt;Properties&amp;gt;&amp;lt;/Properties&amp;gt;
      &amp;lt;/FunctionGraphNode&amp;gt;
      &amp;lt;TreeGraphNode inputNode=&amp;quot;Input2:0,PropertySegment:0&amp;quot; x=&amp;quot;122&amp;quot; y=&amp;quot;42&amp;quot;&amp;gt;
        &amp;lt;InputPins&amp;gt;1st&amp;lt;/InputPins&amp;gt;
        &amp;lt;OutputPins&amp;gt;1st&amp;lt;/OutputPins&amp;gt;
      &amp;lt;/TreeGraphNode&amp;gt;
      &amp;lt;Link inputID=&amp;quot;0&amp;quot; inputIndex=&amp;quot;0&amp;quot; outputID=&amp;quot;1&amp;quot; outputIndex=&amp;quot;0&amp;quot;&amp;gt;&amp;lt;/Link&amp;gt;
      &amp;lt;Link inputID=&amp;quot;1&amp;quot; inputIndex=&amp;quot;0&amp;quot; outputID=&amp;quot;2&amp;quot; outputIndex=&amp;quot;0&amp;quot;&amp;gt;&amp;lt;/Link&amp;gt;
    &amp;lt;/GraphModel&amp;gt;
  &amp;lt;/Mappings&amp;gt;
&amp;lt;/MapperProject&amp;gt;&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;state&quot;&gt; 
    &lt;int&gt;6&lt;/int&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;targetNamespace&quot;&gt; 
    &lt;string&gt;http://www.fiorano.com/fesb/activity/Transform2B_Book&lt;/string&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;category&quot;&gt; 
   &lt;string&gt;Transformation&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;configParams&quot;&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;outPort&lt;/string&gt; 
    &lt;string&gt;OUT_PORT&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsReconnection&lt;/string&gt; 
    &lt;boolean&gt;false&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsScheduling&lt;/string&gt; 
    &lt;boolean&gt;true&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;enableScheduling&lt;/string&gt; 
    &lt;boolean&gt;false&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;inPort&lt;/string&gt; 
    &lt;string&gt;IN_PORT&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsStudio&lt;/string&gt; 
    &lt;boolean&gt;false&lt;/boolean&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;description&quot;&gt; 
   &lt;string&gt;Transforms input XML based on Mappings defined and generates an output XML&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;icon&quot;&gt; 
   &lt;string&gt;xslt.png&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;implClassName&quot;&gt; 
   &lt;class&gt;com.fiorano.adapter.jca.xslt.cci.XsltInteractionSpec&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;name&quot;&gt; 
   &lt;string&gt;XSLT&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;type&quot;&gt; 
   &lt;string&gt;javax.resource.cci.InteractionSpec&lt;/string&gt; 
  &lt;/void&gt; 
 &lt;/object&gt; 
&lt;/java&gt; 
]]&gt;&lt;/ConfigurationObject&gt;&lt;/ConfigurationObjects&gt;&lt;/ESBAdapterConfigurations&gt;</string> 
  </void> 
 </object> 
</java> 
]]]]><![CDATA[></BCConfigurations><TransportConfigurations><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.bc.trgateway.model.dmi.tr.TrConfigurationInfo"/> 
</java> 
]]]]><![CDATA[></TransportConfigurations><ErrorConfigurations><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.bc.trgateway.model.dmi.error.ErrorConfigurationInfo"> 
  <void property="errorActionsMap"> 
   <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorActionsMap"> 
    <void property="errorActionsMap"> 
     <void method="put"> 
      <object class="fiorano.esb.adapter.jca.error.Error"> 
       <void property="errorID"> 
        <int>2</int> 
       </void> 
      </object> 
      <object class="java.util.ArrayList"> 
       <void method="add"> 
        <object class="fiorano.esb.adapter.jca.error.RetryErrorAction"> 
         <void property="errorActionID"> 
          <int>1</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="fiorano.esb.adapter.jca.error.ErrorAction"> 
         <void property="errorActionID"> 
          <int>3</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="active"> 
          <boolean>true</boolean> 
         </void> 
         <void property="errorActionID"> 
          <int>11</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="errorActionID"> 
          <int>12</int> 
         </void> 
        </object> 
       </void> 
      </object> 
     </void> 
     <void method="put"> 
      <object class="fiorano.esb.adapter.jca.error.Error"> 
       <void property="errorID"> 
        <int>0</int> 
       </void> 
      </object> 
      <object class="java.util.ArrayList"> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="active"> 
          <boolean>true</boolean> 
         </void> 
         <void property="errorActionID"> 
          <int>11</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="active"> 
          <boolean>true</boolean> 
         </void> 
         <void property="errorActionID"> 
          <int>2</int> 
         </void> 
        </object> 
       </void> 
      </object> 
     </void> 
    </void> 
   </object> 
  </void> 
 </object> 
</java> 
]]]]><![CDATA[></ErrorConfigurations><SchedulerConfigurations><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.bc.trgateway.model.dmi.scheduler.SchedulerConfigurationInfo"> 
  <void property="startDate"> 
   <object class="java.util.Date"> 
    <long>1136873915875</long> 
   </object> 
  </void> 
  <void property="timeOffset"> 
   <string>+00:00</string> 
  </void> 
  <void property="unit"> 
   <string>seconds</string> 
  </void> 
 </object> 
</java> 
]]]]><![CDATA[></SchedulerConfigurations></TrGatewayConfigurations>]]></configuration><configuration-properties /><deployment nodes="fps" /><execution><debug enabled="false" port="5000" /><launch first-available-node="false" /></execution><inputport-instances><inputport-instance name="IN_PORT"><schema root="{http://hospitality.com/service/}PropertySegment"><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns="http://hospitality.com/service/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="http://hospitality.com/service/">
    <xsd:element name="GuestCount">
        <xsd:complexType>
            <xsd:attribute name="Count" type="xsd:string" use="required"/>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="GuestCounts">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="GuestCount"/>
            </xsd:sequence>
            <xsd:attribute name="IsPerRoom" type="xsd:string" use="required"/>
        </xsd:complexType>
    </xsd:element>
    
    <xsd:element name="PropertySegment">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="StayDateRange"/>
                <xsd:element ref="RoomStayCandidates"/>
            </xsd:sequence>
            <xsd:attribute name="ChainCode" type="xsd:string" use="required"/>
            <xsd:attribute name="HotelCode" type="xsd:string" use="required"/>
            <xsd:attribute name="SystemID" type="xsd:string" use="required"/>
        </xsd:complexType>
    </xsd:element>
    
    <xsd:element name="RoomStayCandidate">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="GuestCounts"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="RoomStayCandidates">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="RoomStayCandidate"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="StayDateRange">
        <xsd:complexType>
            <xsd:attribute name="End" type="xsd:string" use="required"/>
            <xsd:attribute name="Start" type="xsd:string" use="required"/>
        </xsd:complexType>
    </xsd:element>
</xsd:schema>]]></content></schema><jms><destination /><subscriber><transaction enabled="true" /><subscription durable="false" name="null" /></subscriber></jms></inputport-instance></inputport-instances><outputport-instances><outputport-instance name="OUT_PORT"><schema root="{http://www.fiorano.com/fesb/activity/Post_BookHotel/HTTP/In}HTTPRequest"><content><![CDATA[${SupplierB_Post.IN_PORT}]]></content></schema><jms><destination /><publisher><messages priority="4" /></publisher></jms></outputport-instance><outputport-instance name="ON_EXCEPTION"><schema root="{http://www.fiorano.com/fesb/activity/fault}Error"><content><![CDATA[${SplitToSuppliers_Avlbl.ON_EXCEPTION}]]></content></schema><jms><destination /><publisher><messages priority="4" /></publisher></jms></outputport-instance></outputport-instances><logmanager logger="java.util.logging.FileHandler"><Param name="java.util.logging.FileHandler.limit">50000</Param><Param name="java.util.logging.FileHandler.dir">logs</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.dateformat">MM:dd:yyyy</Param><Param name="java.util.logging.FileHandler.count">4</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.includetimestamp">true</Param></logmanager><logmodules><logmodule name="com.fiorano.bc.trgateway" /><logmodule name="com.fiorano.adapter.jca.xslt.spi.outbound.XsltManagedConnectionFactory" /><logmodule name="com.fiorano.adapter.jca.xslt.cci.XsltInteraction" /><logmodule name="ERR_HANDLER" /><logmodule name="com.fiorano.adapter.jca.xslt.cci.XsltInteractionSpec" /><logmodule name="OUT_HANDLER" level="INFO" /></logmodules><runtime-arguments><runtime-argument name="JVM_PARAMS" mandatory="false" inmemory="false"><value>-DLOG_TO_STREAM=true</value></runtime-argument></runtime-arguments></inst><inst name="Transform2A_Book"><service guid="Xslt" version="4.0" /><config-file name="Transform2A_Book.xml" /><configuration><![CDATA[<?xml version="1.0" encoding="UTF-8"?><TrGatewayConfigurations><BCConfigurations><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.bc.trgateway.model.dmi.bcdk.BCDKConfigurationInfo"> 
  <void property="JCAAdapterConfig"> 
   <string>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;ESBAdapterConfigurations&gt;&lt;ConnectionLess&gt;true&lt;/ConnectionLess&gt;&lt;isConfigurationRequired&gt;true&lt;/isConfigurationRequired&gt;&lt;isLicensed&gt;false&lt;/isLicensed&gt;&lt;Inbound&gt;false&lt;/Inbound&gt;&lt;AdapterInstanceProperties&gt;&lt;![CDATA[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; 
&lt;java version=&quot;1.5.0_05&quot; class=&quot;java.beans.XMLDecoder&quot;&gt; 
 &lt;object class=&quot;fiorano.esb.adapter.cfg.ESBAdapterInstanceProperties&quot;&gt; 
  &lt;void property=&quot;domain&quot;&gt; 
   &lt;string&gt;BCConfigPropertySheet&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;instanceName&quot;&gt; 
   &lt;string&gt;Transform2A_Book&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;logCategories&quot;&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;XsltInteractionSpec&lt;/string&gt; 
    &lt;object class=&quot;fiorano.esb.adapter.cfg.LogCategory&quot;&gt; 
     &lt;void property=&quot;loggerDescription&quot;&gt; 
      &lt;string&gt;XsltInteractionSpec&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerDisplayName&quot;&gt; 
      &lt;string&gt;XsltInteractionSpec&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerLevel&quot;&gt; 
      &lt;string&gt;SEVERE&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerName&quot;&gt; 
      &lt;string&gt;com.fiorano.adapter.jca.xslt.cci.XsltInteractionSpec&lt;/string&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;XsltInteraction&lt;/string&gt; 
    &lt;object class=&quot;fiorano.esb.adapter.cfg.LogCategory&quot;&gt; 
     &lt;void property=&quot;loggerDescription&quot;&gt; 
      &lt;string&gt;XsltInteraction&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerDisplayName&quot;&gt; 
      &lt;string&gt;XsltInteraction&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerLevel&quot;&gt; 
      &lt;string&gt;SEVERE&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerName&quot;&gt; 
      &lt;string&gt;com.fiorano.adapter.jca.xslt.cci.XsltInteraction&lt;/string&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;XsltManagedConnectionFactory&lt;/string&gt; 
    &lt;object class=&quot;fiorano.esb.adapter.cfg.LogCategory&quot;&gt; 
     &lt;void property=&quot;loggerDescription&quot;&gt; 
      &lt;string&gt;XsltManagedConnectionFactory&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerDisplayName&quot;&gt; 
      &lt;string&gt;XsltManagedConnectionFactory&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerLevel&quot;&gt; 
      &lt;string&gt;SEVERE&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerName&quot;&gt; 
      &lt;string&gt;com.fiorano.adapter.jca.xslt.spi.outbound.XsltManagedConnectionFactory&lt;/string&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;state&quot;&gt; 
   &lt;int&gt;8&lt;/int&gt; 
  &lt;/void&gt; 
 &lt;/object&gt; 
&lt;/java&gt; 
]]&gt;&lt;/AdapterInstanceProperties&gt;&lt;ConfigurationObjects&gt;&lt;ConfigurationObject&gt;&lt;![CDATA[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; 
&lt;java version=&quot;1.5.0_05&quot; class=&quot;java.beans.XMLDecoder&quot;&gt; 
 &lt;object class=&quot;fiorano.esb.adapter.cfg.ConfigurationObject&quot;&gt; 
  &lt;void property=&quot;beanClassName&quot;&gt; 
   &lt;class&gt;com.fiorano.adapter.jca.xslt.spi.outbound.XsltManagedConnectionFactory&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;configParams&quot;&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsReconnection&lt;/string&gt; 
    &lt;boolean&gt;false&lt;/boolean&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;description&quot;&gt; 
   &lt;string&gt;Xslt Connection&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;icon&quot;&gt; 
   &lt;string&gt;cf.gif&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;implClassName&quot;&gt; 
   &lt;class&gt;com.fiorano.adapter.jca.xslt.spi.outbound.XsltManagedConnectionFactory&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;name&quot;&gt; 
   &lt;string&gt;Xslt Connection&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;type&quot;&gt; 
   &lt;string&gt;javax.resource.spi.ManagedConnectionFactory&lt;/string&gt; 
  &lt;/void&gt; 
 &lt;/object&gt; 
&lt;/java&gt; 
]]&gt;&lt;/ConfigurationObject&gt;&lt;ConfigurationObject&gt;&lt;![CDATA[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; 
&lt;java version=&quot;1.5.0_05&quot; class=&quot;java.beans.XMLDecoder&quot;&gt; 
 &lt;object class=&quot;fiorano.esb.adapter.cfg.ConfigurationObject&quot;&gt; 
  &lt;void property=&quot;beanClassName&quot;&gt; 
   &lt;class&gt;com.fiorano.adapter.jca.xslt.cci.XsltInteractionSpec&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;beanObject&quot;&gt; 
   &lt;void property=&quot;XSL&quot;&gt; 
    &lt;string&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;xsl:stylesheet version=&amp;quot;1.0&amp;quot; xmlns:xsl=&amp;quot;http://www.w3.org/1999/XSL/Transform&amp;quot; xmlns:java=&amp;quot;http://xml.apache.org/xslt/java&amp;quot; xmlns:datetime=&amp;quot;http://exslt.org/dates-and-times&amp;quot; xmlns:set=&amp;quot;http://exslt.org/sets&amp;quot; xmlns:math=&amp;quot;http://exslt.org/math&amp;quot; exclude-result-prefixes=&amp;quot;java&amp;quot; xmlns:lxslt=&amp;quot;http://xml.apache.org/xslt&amp;quot; xmlns:xalan=&amp;quot;http://xml.apache.org/xslt&amp;quot; xmlns:ns3=&amp;quot;http://schemas.xmlsoap.org/soap/encoding/&amp;quot; xmlns:ns1=&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot; xmlns:ns2=&amp;quot;http://localhost:1880/bcwsgateway/services/SupplierA_WS/bookHotelRoom/Input&amp;quot; xmlns:ns0=&amp;quot;http://hospitality.com/service/&amp;quot; xmlns:dateConversion=&amp;quot;ext1&amp;quot; xmlns:myext=&amp;quot;ext2&amp;quot; xmlns:strings=&amp;quot;ext3&amp;quot; extension-element-prefixes=&amp;quot;datetime set math dateConversion myext strings&amp;quot;&amp;gt;
  &amp;lt;xsl:output method=&amp;quot;xml&amp;quot; indent=&amp;quot;yes&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; xalan:indent-amount=&amp;quot;2&amp;quot; omit-xml-declaration=&amp;quot;no&amp;quot;&amp;gt;&amp;lt;/xsl:output&amp;gt;
  &amp;lt;xsl:template match=&amp;quot;/&amp;quot;&amp;gt;
    &amp;lt;ns2:Envelope&amp;gt;
      &amp;lt;ns2:Body&amp;gt;
        &amp;lt;ns2:bookHotelRoom&amp;gt;
          &amp;lt;in0&amp;gt;
            &amp;lt;xsl:value-of select=&amp;quot;(datetime:dayInYear(document(&amp;apos;Input2&amp;apos;)/ns0:PropertySegment/ns0:StayDateRange/@End))-(datetime:dayInYear(document(&amp;apos;Input2&amp;apos;)/ns0:PropertySegment/ns0:StayDateRange/@Start))&amp;quot;&amp;gt;&amp;lt;/xsl:value-of&amp;gt;
          &amp;lt;/in0&amp;gt;
          &amp;lt;in1&amp;gt;
            &amp;lt;xsl:value-of select=&amp;quot;document(&amp;apos;Input2&amp;apos;)/ns0:PropertySegment/@HotelCode&amp;quot;&amp;gt;&amp;lt;/xsl:value-of&amp;gt;
          &amp;lt;/in1&amp;gt;
        &amp;lt;/ns2:bookHotelRoom&amp;gt;
      &amp;lt;/ns2:Body&amp;gt;
    &amp;lt;/ns2:Envelope&amp;gt;
  &amp;lt;/xsl:template&amp;gt;
&amp;lt;/xsl:stylesheet&amp;gt;&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;errorActionsMap&quot;&gt; 
    &lt;object class=&quot;fiorano.esb.adapter.jca.error.ErrorActionsMap&quot;&gt; 
     &lt;void property=&quot;errorActionsMap&quot;&gt; 
      &lt;void method=&quot;put&quot;&gt; 
       &lt;object class=&quot;fiorano.esb.adapter.jca.error.Error&quot;&gt; 
        &lt;void property=&quot;errorID&quot;&gt; 
         &lt;int&gt;2&lt;/int&gt; 
        &lt;/void&gt; 
       &lt;/object&gt; 
       &lt;object class=&quot;java.util.ArrayList&quot;&gt; 
        &lt;void method=&quot;add&quot;&gt; 
         &lt;object class=&quot;fiorano.esb.adapter.jca.error.RetryErrorAction&quot;&gt; 
          &lt;void property=&quot;errorActionID&quot;&gt; 
           &lt;int&gt;1&lt;/int&gt; 
          &lt;/void&gt; 
         &lt;/object&gt; 
        &lt;/void&gt; 
        &lt;void method=&quot;add&quot;&gt; 
         &lt;object class=&quot;fiorano.esb.adapter.jca.error.ErrorAction&quot;&gt; 
          &lt;void property=&quot;errorActionID&quot;&gt; 
           &lt;int&gt;3&lt;/int&gt; 
          &lt;/void&gt; 
         &lt;/object&gt; 
        &lt;/void&gt; 
       &lt;/object&gt; 
      &lt;/void&gt; 
      &lt;void method=&quot;put&quot;&gt; 
       &lt;object class=&quot;fiorano.esb.adapter.jca.error.Error&quot;&gt; 
        &lt;void property=&quot;errorID&quot;&gt; 
         &lt;int&gt;0&lt;/int&gt; 
        &lt;/void&gt; 
       &lt;/object&gt; 
       &lt;object class=&quot;java.util.ArrayList&quot;/&gt; 
      &lt;/void&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;esbDefInPort&quot;&gt; 
    &lt;object class=&quot;fiorano.esb.record.ESBRecordDefinition&quot;&gt; 
     &lt;void property=&quot;importedStructures&quot;&gt; 
      &lt;object class=&quot;java.util.Hashtable&quot;/&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;rootElementName&quot;&gt; 
      &lt;string&gt;PropertySegment&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;structure&quot;&gt; 
      &lt;string&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;xsd:schema xmlns=&amp;quot;http://hospitality.com/service/&amp;quot; xmlns:xsd=&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot; targetNamespace=&amp;quot;http://hospitality.com/service/&amp;quot;&amp;gt;
    &amp;lt;xsd:element name=&amp;quot;GuestCount&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;Count&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
    &amp;lt;xsd:element name=&amp;quot;GuestCounts&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:sequence&amp;gt;
                &amp;lt;xsd:element ref=&amp;quot;GuestCount&amp;quot;/&amp;gt;
            &amp;lt;/xsd:sequence&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;IsPerRoom&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
    
    &amp;lt;xsd:element name=&amp;quot;PropertySegment&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:sequence&amp;gt;
                &amp;lt;xsd:element ref=&amp;quot;StayDateRange&amp;quot;/&amp;gt;
                &amp;lt;xsd:element ref=&amp;quot;RoomStayCandidates&amp;quot;/&amp;gt;
            &amp;lt;/xsd:sequence&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;ChainCode&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;HotelCode&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;SystemID&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
    
    &amp;lt;xsd:element name=&amp;quot;RoomStayCandidate&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:sequence&amp;gt;
                &amp;lt;xsd:element ref=&amp;quot;GuestCounts&amp;quot;/&amp;gt;
            &amp;lt;/xsd:sequence&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
    &amp;lt;xsd:element name=&amp;quot;RoomStayCandidates&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:sequence&amp;gt;
                &amp;lt;xsd:element ref=&amp;quot;RoomStayCandidate&amp;quot;/&amp;gt;
            &amp;lt;/xsd:sequence&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
    &amp;lt;xsd:element name=&amp;quot;StayDateRange&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;End&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;Start&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
&amp;lt;/xsd:schema&amp;gt;&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;targetNamespace&quot;&gt; 
      &lt;string&gt;http://hospitality.com/service/&lt;/string&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;esbDefOutPort&quot;&gt; 
    &lt;object class=&quot;fiorano.esb.record.ESBRecordDefinition&quot;&gt; 
     &lt;void property=&quot;importedStructures&quot;&gt; 
      &lt;object class=&quot;java.util.Hashtable&quot;/&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;rootElementName&quot;&gt; 
      &lt;string&gt;Envelope&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;structure&quot;&gt; 
      &lt;string&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;xsd:schema xmlns:impl=&amp;quot;http://localhost:1880/bcwsgateway/services/SupplierA_WS&amp;quot; xmlns:intf=&amp;quot;http://localhost:1880/bcwsgateway/services/SupplierA_WS&amp;quot; xmlns:wsdlsoap=&amp;quot;http://schemas.xmlsoap.org/wsdl/soap/&amp;quot; xmlns:apachesoap=&amp;quot;http://xml.apache.org/xml-soap&amp;quot; xmlns:soapenc=&amp;quot;http://schemas.xmlsoap.org/soap/encoding/&amp;quot; xmlns:xsd=&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot; xmlns:wsdl=&amp;quot;http://schemas.xmlsoap.org/wsdl/&amp;quot; xmlns:ftns=&amp;quot;http://localhost:1880/bcwsgateway/services/SupplierA_WS/bookHotelRoom/Input&amp;quot; targetNamespace=&amp;quot;http://localhost:1880/bcwsgateway/services/SupplierA_WS/bookHotelRoom/Input&amp;quot;&amp;gt;
   &amp;lt;xsd:import namespace=&amp;quot;http://schemas.xmlsoap.org/soap/encoding/&amp;quot;/&amp;gt;
   &amp;lt;xsd:element name=&amp;quot;Envelope&amp;quot;&amp;gt;
      &amp;lt;xsd:complexType&amp;gt;
         &amp;lt;xsd:sequence&amp;gt;
            &amp;lt;xsd:element ref=&amp;quot;ftns:Header&amp;quot;/&amp;gt;
            &amp;lt;xsd:element ref=&amp;quot;ftns:Body&amp;quot;/&amp;gt;
         &amp;lt;/xsd:sequence&amp;gt;
      &amp;lt;/xsd:complexType&amp;gt;
   &amp;lt;/xsd:element&amp;gt;
   &amp;lt;xsd:element name=&amp;quot;Header&amp;quot;&amp;gt;
      &amp;lt;xsd:complexType&amp;gt;
         &amp;lt;xsd:sequence/&amp;gt;
      &amp;lt;/xsd:complexType&amp;gt;
   &amp;lt;/xsd:element&amp;gt;
   &amp;lt;xsd:element name=&amp;quot;Body&amp;quot;&amp;gt;
      &amp;lt;xsd:complexType&amp;gt;
         &amp;lt;xsd:sequence&amp;gt;
            &amp;lt;xsd:element ref=&amp;quot;ftns:bookHotelRoom&amp;quot;/&amp;gt;
         &amp;lt;/xsd:sequence&amp;gt;
      &amp;lt;/xsd:complexType&amp;gt;
   &amp;lt;/xsd:element&amp;gt;
   &amp;lt;xsd:element name=&amp;quot;bookHotelRoom&amp;quot;&amp;gt;
      &amp;lt;xsd:complexType&amp;gt;
         &amp;lt;xsd:sequence&amp;gt;
            &amp;lt;xsd:element name=&amp;quot;in0&amp;quot; type=&amp;quot;soapenc:int&amp;quot;/&amp;gt;
            &amp;lt;xsd:element name=&amp;quot;in1&amp;quot; type=&amp;quot;soapenc:string&amp;quot;/&amp;gt;
         &amp;lt;/xsd:sequence&amp;gt;
      &amp;lt;/xsd:complexType&amp;gt;
   &amp;lt;/xsd:element&amp;gt;
&amp;lt;/xsd:schema&amp;gt;&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;targetNamespace&quot;&gt; 
      &lt;string&gt;http://localhost:1880/bcwsgateway/services/SupplierA_WS/bookHotelRoom/Input&lt;/string&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;project&quot;&gt; 
    &lt;string&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;MapperProject version=&amp;quot;3.0.1&amp;quot; suppressEmptyItems=&amp;quot;false&amp;quot; convertor=&amp;quot;nameIndexed&amp;quot; separator=&amp;quot;,&amp;quot;&amp;gt;
  &amp;lt;XSLTEngine&amp;gt;Xalan&amp;lt;/XSLTEngine&amp;gt;
  &amp;lt;XSLTEncoding&amp;gt;UTF-8&amp;lt;/XSLTEncoding&amp;gt;
  &amp;lt;OutputEncoding&amp;gt;UTF-8&amp;lt;/OutputEncoding&amp;gt;
  &amp;lt;indent&amp;gt;true&amp;lt;/indent&amp;gt;
  &amp;lt;setDTD&amp;gt;false&amp;lt;/setDTD&amp;gt;
  &amp;lt;omit-xml-declaration&amp;gt;false&amp;lt;/omit-xml-declaration&amp;gt;
  &amp;lt;Comments&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/Comments&amp;gt;
  &amp;lt;InputStructure name=&amp;quot;Application-Context&amp;quot; mime=&amp;quot;dtd&amp;quot; rootName=&amp;quot;Context&amp;quot; duplicates=&amp;quot;&amp;quot;&amp;gt;&amp;lt;![CDATA[&amp;lt;!ELEMENT Context (#PCDATA)&amp;gt;]]&amp;gt;&amp;lt;/InputStructure&amp;gt;
  &amp;lt;InputStructure name=&amp;quot;Input2&amp;quot; mime=&amp;quot;xsd&amp;quot; rootName=&amp;quot;PropertySegment&amp;quot; namespace=&amp;quot;http://hospitality.com/service/&amp;quot; parser=&amp;quot;Xerces&amp;quot; duplicates=&amp;quot;&amp;quot;&amp;gt;&amp;lt;![CDATA[&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;xsd:schema xmlns=&amp;quot;http://hospitality.com/service/&amp;quot; xmlns:xsd=&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot; targetNamespace=&amp;quot;http://hospitality.com/service/&amp;quot;&amp;gt;
    &amp;lt;xsd:element name=&amp;quot;GuestCount&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;Count&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
    &amp;lt;xsd:element name=&amp;quot;GuestCounts&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:sequence&amp;gt;
                &amp;lt;xsd:element ref=&amp;quot;GuestCount&amp;quot;/&amp;gt;
            &amp;lt;/xsd:sequence&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;IsPerRoom&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
    
    &amp;lt;xsd:element name=&amp;quot;PropertySegment&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:sequence&amp;gt;
                &amp;lt;xsd:element ref=&amp;quot;StayDateRange&amp;quot;/&amp;gt;
                &amp;lt;xsd:element ref=&amp;quot;RoomStayCandidates&amp;quot;/&amp;gt;
            &amp;lt;/xsd:sequence&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;ChainCode&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;HotelCode&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;SystemID&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
    
    &amp;lt;xsd:element name=&amp;quot;RoomStayCandidate&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:sequence&amp;gt;
                &amp;lt;xsd:element ref=&amp;quot;GuestCounts&amp;quot;/&amp;gt;
            &amp;lt;/xsd:sequence&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
    &amp;lt;xsd:element name=&amp;quot;RoomStayCandidates&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:sequence&amp;gt;
                &amp;lt;xsd:element ref=&amp;quot;RoomStayCandidate&amp;quot;/&amp;gt;
            &amp;lt;/xsd:sequence&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
    &amp;lt;xsd:element name=&amp;quot;StayDateRange&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;End&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;Start&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
&amp;lt;/xsd:schema&amp;gt;]]&amp;gt;&amp;lt;/InputStructure&amp;gt;
  &amp;lt;OutputStructure name=&amp;quot;OUT_PORT&amp;quot; mime=&amp;quot;xsd&amp;quot; rootName=&amp;quot;Envelope&amp;quot; namespace=&amp;quot;http://localhost:1880/bcwsgateway/services/SupplierA_WS/bookHotelRoom/Input&amp;quot; parser=&amp;quot;Xerces&amp;quot; duplicates=&amp;quot;&amp;quot;&amp;gt;&amp;lt;![CDATA[&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;xsd:schema xmlns:impl=&amp;quot;http://localhost:1880/bcwsgateway/services/SupplierA_WS&amp;quot; xmlns:intf=&amp;quot;http://localhost:1880/bcwsgateway/services/SupplierA_WS&amp;quot; xmlns:wsdlsoap=&amp;quot;http://schemas.xmlsoap.org/wsdl/soap/&amp;quot; xmlns:apachesoap=&amp;quot;http://xml.apache.org/xml-soap&amp;quot; xmlns:soapenc=&amp;quot;http://schemas.xmlsoap.org/soap/encoding/&amp;quot; xmlns:xsd=&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot; xmlns:wsdl=&amp;quot;http://schemas.xmlsoap.org/wsdl/&amp;quot; xmlns:ftns=&amp;quot;http://localhost:1880/bcwsgateway/services/SupplierA_WS/bookHotelRoom/Input&amp;quot; targetNamespace=&amp;quot;http://localhost:1880/bcwsgateway/services/SupplierA_WS/bookHotelRoom/Input&amp;quot;&amp;gt;
   &amp;lt;xsd:import namespace=&amp;quot;http://schemas.xmlsoap.org/soap/encoding/&amp;quot;/&amp;gt;
   &amp;lt;xsd:element name=&amp;quot;Envelope&amp;quot;&amp;gt;
      &amp;lt;xsd:complexType&amp;gt;
         &amp;lt;xsd:sequence&amp;gt;
            &amp;lt;xsd:element ref=&amp;quot;ftns:Header&amp;quot;/&amp;gt;
            &amp;lt;xsd:element ref=&amp;quot;ftns:Body&amp;quot;/&amp;gt;
         &amp;lt;/xsd:sequence&amp;gt;
      &amp;lt;/xsd:complexType&amp;gt;
   &amp;lt;/xsd:element&amp;gt;
   &amp;lt;xsd:element name=&amp;quot;Header&amp;quot;&amp;gt;
      &amp;lt;xsd:complexType&amp;gt;
         &amp;lt;xsd:sequence/&amp;gt;
      &amp;lt;/xsd:complexType&amp;gt;
   &amp;lt;/xsd:element&amp;gt;
   &amp;lt;xsd:element name=&amp;quot;Body&amp;quot;&amp;gt;
      &amp;lt;xsd:complexType&amp;gt;
         &amp;lt;xsd:sequence&amp;gt;
            &amp;lt;xsd:element ref=&amp;quot;ftns:bookHotelRoom&amp;quot;/&amp;gt;
         &amp;lt;/xsd:sequence&amp;gt;
      &amp;lt;/xsd:complexType&amp;gt;
   &amp;lt;/xsd:element&amp;gt;
   &amp;lt;xsd:element name=&amp;quot;bookHotelRoom&amp;quot;&amp;gt;
      &amp;lt;xsd:complexType&amp;gt;
         &amp;lt;xsd:sequence&amp;gt;
            &amp;lt;xsd:element name=&amp;quot;in0&amp;quot; type=&amp;quot;soapenc:int&amp;quot;/&amp;gt;
            &amp;lt;xsd:element name=&amp;quot;in1&amp;quot; type=&amp;quot;soapenc:string&amp;quot;/&amp;gt;
         &amp;lt;/xsd:sequence&amp;gt;
      &amp;lt;/xsd:complexType&amp;gt;
   &amp;lt;/xsd:element&amp;gt;
&amp;lt;/xsd:schema&amp;gt;]]&amp;gt;&amp;lt;/OutputStructure&amp;gt;
  &amp;lt;Extensions&amp;gt;
    &amp;lt;Extension name=&amp;quot;dateConversion&amp;quot; language=&amp;quot;javascript&amp;quot;&amp;gt;
      &amp;lt;Script&amp;gt;&amp;lt;![CDATA[// ===================================================================
// You may *NOT* re-distribute this code in any way except through its
// use. That means, you can include it in your product, or your web
// site, or any other form where the code is actually being used. You
// may not put the plain javascript up on your site for download or
// include it in your javascript libraries for download. 
// If you wish to share this code with others, please just point them
// to the URL instead.
// Please DO NOT link directly to my .js files from your site. Copy
// the files to your server and use them there. Thank you.
// ===================================================================

// HISTORY
// ------------------------------------------------------------------
// March 11, 2003: Added parseDate() function
// March 11, 2003: Added &amp;quot;NNN&amp;quot; formatting option. Doesn&amp;apos;t match up
//                 perfectly with SimpleDateFormat formats, but 
//                 backwards-compatability was required.

// ------------------------------------------------------------------
// These functions use the same &amp;apos;format&amp;apos; strings as the 
// java.text.SimpleDateFormat class, with minor exceptions.
// The format string consists of the following abbreviations:
// 
// Field        | Full Form          | Short Form
// -------------+--------------------+-----------------------
// Year         | yyyy (4 digits)    | yy (2 digits), y (2 or 4 digits)
// Month        | MMM (name or abbr.)| MM (2 digits), M (1 or 2 digits)
//              | NNN (abbr.)        |
// Day of Month | dd (2 digits)      | d (1 or 2 digits)
// Day of Week  | EE (name)          | E (abbr)
// Hour (1-12)  | hh (2 digits)      | h (1 or 2 digits)
// Hour (0-23)  | HH (2 digits)      | H (1 or 2 digits)
// Hour (0-11)  | KK (2 digits)      | K (1 or 2 digits)
// Hour (1-24)  | kk (2 digits)      | k (1 or 2 digits)
// Minute       | mm (2 digits)      | m (1 or 2 digits)
// Second       | ss (2 digits)      | s (1 or 2 digits)
// AM/PM        | a                  |
//
// NOTE THE DIFFERENCE BETWEEN MM and mm! Month=MM, not mm!
// Examples:
//  &amp;quot;MMM d, y&amp;quot; matches: January 01, 2000
//                      Dec 1, 1900
//                      Nov 20, 00
//  &amp;quot;M/d/yy&amp;quot;   matches: 01/20/00
//                      9/2/00
//  &amp;quot;MMM dd, yyyy hh:mm:ssa&amp;quot; matches: &amp;quot;January 01, 2000 12:30:45AM&amp;quot;
// ------------------------------------------------------------------

var MONTH_NAMES=new Array(&amp;apos;January&amp;apos;,&amp;apos;February&amp;apos;,&amp;apos;March&amp;apos;,&amp;apos;April&amp;apos;,&amp;apos;May&amp;apos;,&amp;apos;June&amp;apos;,&amp;apos;July&amp;apos;,&amp;apos;August&amp;apos;,&amp;apos;September&amp;apos;,&amp;apos;October&amp;apos;,&amp;apos;November&amp;apos;,&amp;apos;December&amp;apos;,&amp;apos;Jan&amp;apos;,&amp;apos;Feb&amp;apos;,&amp;apos;Mar&amp;apos;,&amp;apos;Apr&amp;apos;,&amp;apos;May&amp;apos;,&amp;apos;Jun&amp;apos;,&amp;apos;Jul&amp;apos;,&amp;apos;Aug&amp;apos;,&amp;apos;Sep&amp;apos;,&amp;apos;Oct&amp;apos;,&amp;apos;Nov&amp;apos;,&amp;apos;Dec&amp;apos;);
var DAY_NAMES=new Array(&amp;apos;Sunday&amp;apos;,&amp;apos;Monday&amp;apos;,&amp;apos;Tuesday&amp;apos;,&amp;apos;Wednesday&amp;apos;,&amp;apos;Thursday&amp;apos;,&amp;apos;Friday&amp;apos;,&amp;apos;Saturday&amp;apos;,&amp;apos;Sun&amp;apos;,&amp;apos;Mon&amp;apos;,&amp;apos;Tue&amp;apos;,&amp;apos;Wed&amp;apos;,&amp;apos;Thu&amp;apos;,&amp;apos;Fri&amp;apos;,&amp;apos;Sat&amp;apos;);
function LZ(x) {return(x&amp;lt;0||x&amp;gt;9?&amp;quot;&amp;quot;:&amp;quot;0&amp;quot;)+x}

function convertDate(dateString, inFormat, outFormat)
{
    return formatDate(getDateFromFormat(dateString,inFormat),outFormat);
}

// ------------------------------------------------------------------
// isDate ( date_string, format_string )
// Returns true if date string matches format of format string and
// is a valid date. Else returns false.
// It is recommended that you trim whitespace around the value before
// passing it to this function, as whitespace is NOT ignored!
// ------------------------------------------------------------------
function isDate(val,format) {
    var date=getDateFromFormat(val,format);
    if (date==0) { return false; }
    return true;
    }

// -------------------------------------------------------------------
// compareDates(date1,date1format,date2,date2format)
//   Compare two date strings to see which is greater.
//   Returns:
//   1 if date1 is greater than date2
//   0 if date2 is greater than date1 of if they are the same
//  -1 if either of the dates is in an invalid format
// -------------------------------------------------------------------
function compareDates(date1,dateformat1,date2,dateformat2) {
    var d1=getDateFromFormat(date1,dateformat1);
    var d2=getDateFromFormat(date2,dateformat2);
    if (d1==0 || d2==0) {
        return -1;
        }
    else if (d1 &amp;gt; d2) {
        return 1;
        }
    return 0;
    }

// ------------------------------------------------------------------
// formatDate (date_object, format)
// Returns a date in the output format specified.
// The format string uses the same abbreviations as in getDateFromFormat()
// ------------------------------------------------------------------
function formatDate(date,format) {
    format=format+&amp;quot;&amp;quot;;
    var result=&amp;quot;&amp;quot;;
    var i_format=0;
    var c=&amp;quot;&amp;quot;;
    var token=&amp;quot;&amp;quot;;
    var y=date.getYear()+&amp;quot;&amp;quot;;
    var M=date.getMonth()+1;
    var d=date.getDate();
    var E=date.getDay();
    var H=date.getHours();
    var m=date.getMinutes();
    var s=date.getSeconds();
    var yyyy,yy,MMM,MM,dd,hh,h,mm,ss,ampm,HH,H,KK,K,kk,k;
    // Convert real date parts into formatted versions
    var value=new Object();
    if (y.length &amp;lt; 4) {y=&amp;quot;&amp;quot;+(y-0+1900);}
    value[&amp;quot;y&amp;quot;]=&amp;quot;&amp;quot;+y;
    value[&amp;quot;yyyy&amp;quot;]=y;
    value[&amp;quot;yy&amp;quot;]=y.substring(2,4);
    value[&amp;quot;M&amp;quot;]=M;
    value[&amp;quot;MM&amp;quot;]=LZ(M);
    value[&amp;quot;MMM&amp;quot;]=MONTH_NAMES[M-1];
    value[&amp;quot;NNN&amp;quot;]=MONTH_NAMES[M+11];
    value[&amp;quot;d&amp;quot;]=d;
    value[&amp;quot;dd&amp;quot;]=LZ(d);
    value[&amp;quot;E&amp;quot;]=DAY_NAMES[E+7];
    value[&amp;quot;EE&amp;quot;]=DAY_NAMES[E];
    value[&amp;quot;H&amp;quot;]=H;
    value[&amp;quot;HH&amp;quot;]=LZ(H);
    if (H==0){value[&amp;quot;h&amp;quot;]=12;}
    else if (H&amp;gt;12){value[&amp;quot;h&amp;quot;]=H-12;}
    else {value[&amp;quot;h&amp;quot;]=H;}
    value[&amp;quot;hh&amp;quot;]=LZ(value[&amp;quot;h&amp;quot;]);
    if (H&amp;gt;11){value[&amp;quot;K&amp;quot;]=H-12;} else {value[&amp;quot;K&amp;quot;]=H;}
    value[&amp;quot;k&amp;quot;]=H+1;
    value[&amp;quot;KK&amp;quot;]=LZ(value[&amp;quot;K&amp;quot;]);
    value[&amp;quot;kk&amp;quot;]=LZ(value[&amp;quot;k&amp;quot;]);
    if (H &amp;gt; 11) { value[&amp;quot;a&amp;quot;]=&amp;quot;PM&amp;quot;; }
    else { value[&amp;quot;a&amp;quot;]=&amp;quot;AM&amp;quot;; }
    value[&amp;quot;m&amp;quot;]=m;
    value[&amp;quot;mm&amp;quot;]=LZ(m);
    value[&amp;quot;s&amp;quot;]=s;
    value[&amp;quot;ss&amp;quot;]=LZ(s);
    while (i_format &amp;lt; format.length) {
        c=format.charAt(i_format);
        token=&amp;quot;&amp;quot;;
        while ((format.charAt(i_format)==c) &amp;amp;&amp;amp; (i_format &amp;lt; format.length)) {
            token += format.charAt(i_format++);
            }
        if (value[token] != null) { result=result + value[token]; }
        else { result=result + token; }
        }
    return result;
    }
    
// ------------------------------------------------------------------
// Utility functions for parsing in getDateFromFormat()
// ------------------------------------------------------------------
function _isInteger(val) {
    var digits=&amp;quot;1234567890&amp;quot;;
    for (var i=0; i &amp;lt; val.length; i++) {
        if (digits.indexOf(val.charAt(i))==-1) { return false; }
        }
    return true;
    }
function _getInt(str,i,minlength,maxlength) {
    for (var x=maxlength; x&amp;gt;=minlength; x--) {
        var token=str.substring(i,i+x);
        if (token.length &amp;lt; minlength) { return null; }
        if (_isInteger(token)) { return token; }
        }
    return null;
    }
    
// ------------------------------------------------------------------
// getDateFromFormat( date_string , format_string )
//
// This function takes a date string and a format string. It matches
// If the date string matches the format string, it returns the 
// getTime() of the date. If it does not match, it returns 0.
// ------------------------------------------------------------------
function getDateFromFormat(val,format) {
    val=val+&amp;quot;&amp;quot;;
    format=format+&amp;quot;&amp;quot;;
    var i_val=0;
    var i_format=0;
    var c=&amp;quot;&amp;quot;;
    var token=&amp;quot;&amp;quot;;
    var token2=&amp;quot;&amp;quot;;
    var x,y;
    var now=new Date();
    var year=now.getYear();
    var month=now.getMonth()+1;
    var date=1;
    var hh=now.getHours();
    var mm=now.getMinutes();
    var ss=now.getSeconds();
    var ampm=&amp;quot;&amp;quot;;
    
    while (i_format &amp;lt; format.length) {
        // Get next token from format string
        c=format.charAt(i_format);
        token=&amp;quot;&amp;quot;;
        while ((format.charAt(i_format)==c) &amp;amp;&amp;amp; (i_format &amp;lt; format.length)) {
            token += format.charAt(i_format++);
            }
        // Extract contents of value based on format token
        if (token==&amp;quot;yyyy&amp;quot; || token==&amp;quot;yy&amp;quot; || token==&amp;quot;y&amp;quot;) {
            if (token==&amp;quot;yyyy&amp;quot;) { x=4;y=4; }
            if (token==&amp;quot;yy&amp;quot;)   { x=2;y=2; }
            if (token==&amp;quot;y&amp;quot;)    { x=2;y=4; }
            year=_getInt(val,i_val,x,y);
            if (year==null) { return 0; }
            i_val += year.length;
            if (year.length==2) {
                if (year &amp;gt; 70) { year=1900+(year-0); }
                else { year=2000+(year-0); }
                }
            }
        else if (token==&amp;quot;MMM&amp;quot;||token==&amp;quot;NNN&amp;quot;){
            month=0;
            for (var i=0; i&amp;lt;MONTH_NAMES.length; i++) {
                var month_name=MONTH_NAMES[i];
                if (val.substring(i_val,i_val+month_name.length).toLowerCase()==month_name.toLowerCase()) {
                    if (token==&amp;quot;MMM&amp;quot;||(token==&amp;quot;NNN&amp;quot;&amp;amp;&amp;amp;i&amp;gt;11)) {
                        month=i+1;
                        if (month&amp;gt;12) { month -= 12; }
                        i_val += month_name.length;
                        break;
                        }
                    }
                }
            if ((month &amp;lt; 1)||(month&amp;gt;12)){return 0;}
            }
        else if (token==&amp;quot;EE&amp;quot;||token==&amp;quot;E&amp;quot;){
            for (var i=0; i&amp;lt;DAY_NAMES.length; i++) {
                var day_name=DAY_NAMES[i];
                if (val.substring(i_val,i_val+day_name.length).toLowerCase()==day_name.toLowerCase()) {
                    i_val += day_name.length;
                    break;
                    }
                }
            }
        else if (token==&amp;quot;MM&amp;quot;||token==&amp;quot;M&amp;quot;) {
            month=_getInt(val,i_val,token.length,2);
            if(month==null||(month&amp;lt;1)||(month&amp;gt;12)){return 0;}
            i_val+=month.length;}
        else if (token==&amp;quot;dd&amp;quot;||token==&amp;quot;d&amp;quot;) {
            date=_getInt(val,i_val,token.length,2);
            if(date==null||(date&amp;lt;1)||(date&amp;gt;31)){return 0;}
            i_val+=date.length;}
        else if (token==&amp;quot;hh&amp;quot;||token==&amp;quot;h&amp;quot;) {
            hh=_getInt(val,i_val,token.length,2);
            if(hh==null||(hh&amp;lt;1)||(hh&amp;gt;12)){return 0;}
            i_val+=hh.length;}
        else if (token==&amp;quot;HH&amp;quot;||token==&amp;quot;H&amp;quot;) {
            hh=_getInt(val,i_val,token.length,2);
            if(hh==null||(hh&amp;lt;0)||(hh&amp;gt;23)){return 0;}
            i_val+=hh.length;}
        else if (token==&amp;quot;KK&amp;quot;||token==&amp;quot;K&amp;quot;) {
            hh=_getInt(val,i_val,token.length,2);
            if(hh==null||(hh&amp;lt;0)||(hh&amp;gt;11)){return 0;}
            i_val+=hh.length;}
        else if (token==&amp;quot;kk&amp;quot;||token==&amp;quot;k&amp;quot;) {
            hh=_getInt(val,i_val,token.length,2);
            if(hh==null||(hh&amp;lt;1)||(hh&amp;gt;24)){return 0;}
            i_val+=hh.length;hh--;}
        else if (token==&amp;quot;mm&amp;quot;||token==&amp;quot;m&amp;quot;) {
            mm=_getInt(val,i_val,token.length,2);
            if(mm==null||(mm&amp;lt;0)||(mm&amp;gt;59)){return 0;}
            i_val+=mm.length;}
        else if (token==&amp;quot;ss&amp;quot;||token==&amp;quot;s&amp;quot;) {
            ss=_getInt(val,i_val,token.length,2);
            if(ss==null||(ss&amp;lt;0)||(ss&amp;gt;59)){return 0;}
            i_val+=ss.length;}
        else if (token==&amp;quot;a&amp;quot;) {
            if (val.substring(i_val,i_val+2).toLowerCase()==&amp;quot;am&amp;quot;) {ampm=&amp;quot;AM&amp;quot;;}
            else if (val.substring(i_val,i_val+2).toLowerCase()==&amp;quot;pm&amp;quot;) {ampm=&amp;quot;PM&amp;quot;;}
            else {return 0;}
            i_val+=2;}
        else {
            if (val.substring(i_val,i_val+token.length)!=token) {return 0;}
            else {i_val+=token.length;}
            }
        }
    // If there are any trailing characters left in the value, it doesn&amp;apos;t match
    if (i_val != val.length) { return 0; }
    // Is date valid for month?
    if (month==2) {
        // Check for leap year
        if ( ( (year%4==0)&amp;amp;&amp;amp;(year%100 != 0) ) || (year%400==0) ) { // leap year
            if (date &amp;gt; 29){ return 0; }
            }
        else { if (date &amp;gt; 28) { return 0; } }
        }
    if ((month==4)||(month==6)||(month==9)||(month==11)) {
        if (date &amp;gt; 30) { return 0; }
        }
    // Correct hours value
    if (hh&amp;lt;12 &amp;amp;&amp;amp; ampm==&amp;quot;PM&amp;quot;) { hh=hh-0+12; }
    else if (hh&amp;gt;11 &amp;amp;&amp;amp; ampm==&amp;quot;AM&amp;quot;) { hh-=12; }
    var newdate=new Date(year,month-1,date,hh,mm,ss);
    return newdate;
    }

// ------------------------------------------------------------------
// parseDate( date_string [, prefer_euro_format] )
//
// This function takes a date string and tries to match it to a
// number of possible date formats to get the value. It will try to
// match against the following international formats, in this order:
// y-M-d   MMM d, y   MMM d,y   y-MMM-d   d-MMM-y  MMM d
// M/d/y   M-d-y      M.d.y     MMM-d     M/d      M-d
// d/M/y   d-M-y      d.M.y     d-MMM     d/M      d-M
// A second argument may be passed to instruct the method to search
// for formats like d/M/y (european format) before M/d/y (American).
// Returns a Date object or null if no patterns match.
// ------------------------------------------------------------------
function parseDate(val) {
    var preferEuro=(arguments.length==2)?arguments[1]:false;
    generalFormats=new Array(&amp;apos;y-M-d&amp;apos;,&amp;apos;MMM d, y&amp;apos;,&amp;apos;MMM d,y&amp;apos;,&amp;apos;y-MMM-d&amp;apos;,&amp;apos;d-MMM-y&amp;apos;,&amp;apos;MMM d&amp;apos;);
    monthFirst=new Array(&amp;apos;M/d/y&amp;apos;,&amp;apos;M-d-y&amp;apos;,&amp;apos;M.d.y&amp;apos;,&amp;apos;MMM-d&amp;apos;,&amp;apos;M/d&amp;apos;,&amp;apos;M-d&amp;apos;);
    dateFirst =new Array(&amp;apos;d/M/y&amp;apos;,&amp;apos;d-M-y&amp;apos;,&amp;apos;d.M.y&amp;apos;,&amp;apos;d-MMM&amp;apos;,&amp;apos;d/M&amp;apos;,&amp;apos;d-M&amp;apos;);
    var checkList=new Array(&amp;apos;generalFormats&amp;apos;,preferEuro?&amp;apos;dateFirst&amp;apos;:&amp;apos;monthFirst&amp;apos;,preferEuro?&amp;apos;monthFirst&amp;apos;:&amp;apos;dateFirst&amp;apos;);
    var d=null;
    for (var i=0; i&amp;lt;checkList.length; i++) {
        var l=window[checkList[i]];
        for (var j=0; j&amp;lt;l.length; j++) {
            d=getDateFromFormat(val,l[j]);
            if (d&amp;gt;0) { return new Date(d); }
            }
        }
    return null;
}]]&amp;gt;&amp;lt;/Script&amp;gt;
      &amp;lt;Function name=&amp;quot;convertDate&amp;quot; return=&amp;quot;String&amp;quot;&amp;gt;
        &amp;lt;Argument name=&amp;quot;dateString&amp;quot; datatype=&amp;quot;String&amp;quot;&amp;gt;&amp;lt;/Argument&amp;gt;
        &amp;lt;Argument name=&amp;quot;inFormat&amp;quot; datatype=&amp;quot;String&amp;quot;&amp;gt;&amp;lt;/Argument&amp;gt;
        &amp;lt;Argument name=&amp;quot;outFormat&amp;quot; datatype=&amp;quot;String&amp;quot;&amp;gt;&amp;lt;/Argument&amp;gt;
      &amp;lt;/Function&amp;gt;
    &amp;lt;/Extension&amp;gt;
    &amp;lt;Extension name=&amp;quot;myext&amp;quot; language=&amp;quot;javascript&amp;quot;&amp;gt;
      &amp;lt;Script&amp;gt;&amp;lt;![CDATA[function compute(expr){
    return eval(expr);
}

function nextMillenium(){
    d = new Date()    //today&amp;apos;s date
    mill=new Date(3000, 00, 01, 00, 00, 00)    //Next millennium start date
    diff = mill-d    //difference in milliseconds
    mtg = new String(diff/86400000)    //calculate days and convert to string
    point=mtg.indexOf(&amp;quot;.&amp;quot;)    //find the decimal point
    days=mtg.substring(0,point)    //get just the whole days
    return &amp;quot;There are only &amp;quot; + days + &amp;quot; days remaining to the start of the next millennium.&amp;quot;; 
}

function replace(input, pattern, flags, str){
    return input.replace(new RegExp(pattern, flags), str);
}]]&amp;gt;&amp;lt;/Script&amp;gt;
      &amp;lt;Function name=&amp;quot;compute&amp;quot; return=&amp;quot;String&amp;quot;&amp;gt;
        &amp;lt;Argument name=&amp;quot;expr&amp;quot; datatype=&amp;quot;String&amp;quot;&amp;gt;&amp;lt;/Argument&amp;gt;
      &amp;lt;/Function&amp;gt;
      &amp;lt;Function name=&amp;quot;nextMillenium&amp;quot; return=&amp;quot;String&amp;quot;&amp;gt;&amp;lt;/Function&amp;gt;
      &amp;lt;Function name=&amp;quot;replace&amp;quot; return=&amp;quot;String&amp;quot;&amp;gt;
        &amp;lt;Argument name=&amp;quot;input&amp;quot; datatype=&amp;quot;String&amp;quot;&amp;gt;&amp;lt;/Argument&amp;gt;
        &amp;lt;Argument name=&amp;quot;pattern&amp;quot; datatype=&amp;quot;String&amp;quot;&amp;gt;&amp;lt;/Argument&amp;gt;
        &amp;lt;Argument name=&amp;quot;flags&amp;quot; datatype=&amp;quot;String&amp;quot;&amp;gt;&amp;lt;/Argument&amp;gt;
        &amp;lt;Argument name=&amp;quot;str&amp;quot; datatype=&amp;quot;String&amp;quot;&amp;gt;&amp;lt;/Argument&amp;gt;
      &amp;lt;/Function&amp;gt;
    &amp;lt;/Extension&amp;gt;
    &amp;lt;Extension name=&amp;quot;strings&amp;quot; language=&amp;quot;javascript&amp;quot;&amp;gt;
      &amp;lt;Script&amp;gt;&amp;lt;![CDATA[function multiConcat(ctx, delim){
    var ipString = &amp;quot;&amp;quot;;
    if (ctx.length){
    for (var i=0; i &amp;lt; ctx.getLength(); i++){
        ctxN  = ctx.item(i);
        if (ctxN.nodeType == 1){
            ipString +=  _wander(ctxN, delim);
        }
        if (ctxN.nodeType == 2){
            ipString += ctxN.nodeValue;
        }
    }
    }else{
    return &amp;apos;&amp;apos;;
    }
    return ipString.length&amp;gt;1 ? ipString.substring(delim.length) : ipString;
}
function   _wander(ctx, delim){
    var retStr = &amp;quot;&amp;quot;;
    var nodelist = ctx.childNodes;
    
    for (var i=0; i &amp;lt; ctx.childNodes.length; i++){
        
        ctxN = nodelist.item(i);//ctx.childNodes[i];
        
        switch(ctxN.nodeType){
            case 1:
                retStr +=   _wander(ctxN);
                break;
            case 3:
                retStr += delim +ctxN.nodeValue;
                break;
            default:
                break;
        }
    }
    return retStr;
}]]&amp;gt;&amp;lt;/Script&amp;gt;
      &amp;lt;Function name=&amp;quot;multiConcat&amp;quot; return=&amp;quot;String&amp;quot;&amp;gt;
        &amp;lt;Argument name=&amp;quot;ctx&amp;quot; datatype=&amp;quot;Unknown&amp;quot;&amp;gt;&amp;lt;/Argument&amp;gt;
        &amp;lt;Argument name=&amp;quot;delim&amp;quot; datatype=&amp;quot;String&amp;quot;&amp;gt;&amp;lt;/Argument&amp;gt;
      &amp;lt;/Function&amp;gt;
    &amp;lt;/Extension&amp;gt;
  &amp;lt;/Extensions&amp;gt;
  &amp;lt;Mappings&amp;gt;
    &amp;lt;GraphModel outputNode=&amp;quot;OUT_PORT:0,Envelope:0,Body:0,bookHotelRoom:0,in0:0&amp;quot; x=&amp;quot;593&amp;quot; y=&amp;quot;39&amp;quot; inputPins=&amp;quot;1,2&amp;quot;&amp;gt;
      &amp;lt;TreeGraphNode inputNode=&amp;quot;Input2:0,PropertySegment:0,StayDateRange:0,End:0&amp;quot; x=&amp;quot;107&amp;quot; y=&amp;quot;22&amp;quot;&amp;gt;
        &amp;lt;InputPins&amp;gt;1st&amp;lt;/InputPins&amp;gt;
        &amp;lt;OutputPins&amp;gt;1st&amp;lt;/OutputPins&amp;gt;
      &amp;lt;/TreeGraphNode&amp;gt;
      &amp;lt;TreeGraphNode inputNode=&amp;quot;Input2:0,PropertySegment:0,StayDateRange:0,Start:0&amp;quot; x=&amp;quot;107&amp;quot; y=&amp;quot;56&amp;quot;&amp;gt;
        &amp;lt;InputPins&amp;gt;1st&amp;lt;/InputPins&amp;gt;
        &amp;lt;OutputPins&amp;gt;1st&amp;lt;/OutputPins&amp;gt;
      &amp;lt;/TreeGraphNode&amp;gt;
      &amp;lt;FunctionGraphNode label=&amp;quot;DayInYear&amp;quot; type=&amp;quot;104&amp;quot; x=&amp;quot;281&amp;quot; y=&amp;quot;22&amp;quot;&amp;gt;
        &amp;lt;InputPins&amp;gt;1&amp;lt;/InputPins&amp;gt;
        &amp;lt;OutputPins&amp;gt;R&amp;lt;/OutputPins&amp;gt;
        &amp;lt;Properties&amp;gt;&amp;lt;/Properties&amp;gt;
      &amp;lt;/FunctionGraphNode&amp;gt;
      &amp;lt;FunctionGraphNode label=&amp;quot;DayInYear&amp;quot; type=&amp;quot;104&amp;quot; x=&amp;quot;281&amp;quot; y=&amp;quot;56&amp;quot;&amp;gt;
        &amp;lt;InputPins&amp;gt;1&amp;lt;/InputPins&amp;gt;
        &amp;lt;OutputPins&amp;gt;R&amp;lt;/OutputPins&amp;gt;
        &amp;lt;Properties&amp;gt;&amp;lt;/Properties&amp;gt;
      &amp;lt;/FunctionGraphNode&amp;gt;
      &amp;lt;FunctionGraphNode label=&amp;quot;-&amp;quot; type=&amp;quot;2&amp;quot; x=&amp;quot;453&amp;quot; y=&amp;quot;39&amp;quot;&amp;gt;
        &amp;lt;InputPins&amp;gt;num1,num2&amp;lt;/InputPins&amp;gt;
        &amp;lt;OutputPins&amp;gt;num&amp;lt;/OutputPins&amp;gt;
        &amp;lt;Properties&amp;gt;&amp;lt;/Properties&amp;gt;
      &amp;lt;/FunctionGraphNode&amp;gt;
      &amp;lt;Link inputID=&amp;quot;3&amp;quot; inputIndex=&amp;quot;0&amp;quot; outputID=&amp;quot;1&amp;quot; outputIndex=&amp;quot;0&amp;quot;&amp;gt;&amp;lt;/Link&amp;gt;
      &amp;lt;Link inputID=&amp;quot;4&amp;quot; inputIndex=&amp;quot;0&amp;quot; outputID=&amp;quot;2&amp;quot; outputIndex=&amp;quot;0&amp;quot;&amp;gt;&amp;lt;/Link&amp;gt;
      &amp;lt;Link inputID=&amp;quot;5&amp;quot; inputIndex=&amp;quot;0&amp;quot; outputID=&amp;quot;3&amp;quot; outputIndex=&amp;quot;0&amp;quot;&amp;gt;&amp;lt;/Link&amp;gt;
      &amp;lt;Link inputID=&amp;quot;5&amp;quot; inputIndex=&amp;quot;1&amp;quot; outputID=&amp;quot;4&amp;quot; outputIndex=&amp;quot;0&amp;quot;&amp;gt;&amp;lt;/Link&amp;gt;
      &amp;lt;Link inputID=&amp;quot;0&amp;quot; inputIndex=&amp;quot;0&amp;quot; outputID=&amp;quot;5&amp;quot; outputIndex=&amp;quot;0&amp;quot;&amp;gt;&amp;lt;/Link&amp;gt;
    &amp;lt;/GraphModel&amp;gt;
    &amp;lt;GraphModel outputNode=&amp;quot;OUT_PORT:0,Envelope:0,Body:0,bookHotelRoom:0,in1:0&amp;quot; x=&amp;quot;-1&amp;quot; y=&amp;quot;-1&amp;quot; inputPins=&amp;quot;1&amp;quot;&amp;gt;
      &amp;lt;TreeGraphNode inputNode=&amp;quot;Input2:0,PropertySegment:0,HotelCode:0&amp;quot; x=&amp;quot;-1&amp;quot; y=&amp;quot;-1&amp;quot;&amp;gt;
        &amp;lt;InputPins&amp;gt;1st&amp;lt;/InputPins&amp;gt;
        &amp;lt;OutputPins&amp;gt;1st&amp;lt;/OutputPins&amp;gt;
      &amp;lt;/TreeGraphNode&amp;gt;
      &amp;lt;Link inputID=&amp;quot;0&amp;quot; inputIndex=&amp;quot;0&amp;quot; outputID=&amp;quot;1&amp;quot; outputIndex=&amp;quot;0&amp;quot;&amp;gt;&amp;lt;/Link&amp;gt;
    &amp;lt;/GraphModel&amp;gt;
  &amp;lt;/Mappings&amp;gt;
&amp;lt;/MapperProject&amp;gt;&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;state&quot;&gt; 
    &lt;int&gt;6&lt;/int&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;targetNamespace&quot;&gt; 
    &lt;string&gt;http://www.fiorano.com/fesb/activity/Transform2A_Book&lt;/string&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;category&quot;&gt; 
   &lt;string&gt;Transformation&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;configParams&quot;&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;outPort&lt;/string&gt; 
    &lt;string&gt;OUT_PORT&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsReconnection&lt;/string&gt; 
    &lt;boolean&gt;false&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsScheduling&lt;/string&gt; 
    &lt;boolean&gt;true&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;enableScheduling&lt;/string&gt; 
    &lt;boolean&gt;false&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;inPort&lt;/string&gt; 
    &lt;string&gt;IN_PORT&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsStudio&lt;/string&gt; 
    &lt;boolean&gt;false&lt;/boolean&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;description&quot;&gt; 
   &lt;string&gt;Transforms input XML based on Mappings defined and generates an output XML&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;icon&quot;&gt; 
   &lt;string&gt;xslt.png&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;implClassName&quot;&gt; 
   &lt;class&gt;com.fiorano.adapter.jca.xslt.cci.XsltInteractionSpec&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;name&quot;&gt; 
   &lt;string&gt;XSLT&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;type&quot;&gt; 
   &lt;string&gt;javax.resource.cci.InteractionSpec&lt;/string&gt; 
  &lt;/void&gt; 
 &lt;/object&gt; 
&lt;/java&gt; 
]]&gt;&lt;/ConfigurationObject&gt;&lt;/ConfigurationObjects&gt;&lt;/ESBAdapterConfigurations&gt;</string> 
  </void> 
 </object> 
</java> 
]]]]><![CDATA[></BCConfigurations><TransportConfigurations><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.bc.trgateway.model.dmi.tr.TrConfigurationInfo"/> 
</java> 
]]]]><![CDATA[></TransportConfigurations><ErrorConfigurations><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.bc.trgateway.model.dmi.error.ErrorConfigurationInfo"> 
  <void property="errorActionsMap"> 
   <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorActionsMap"> 
    <void property="errorActionsMap"> 
     <void method="put"> 
      <object class="fiorano.esb.adapter.jca.error.Error"> 
       <void property="errorID"> 
        <int>2</int> 
       </void> 
      </object> 
      <object class="java.util.ArrayList"> 
       <void method="add"> 
        <object class="fiorano.esb.adapter.jca.error.RetryErrorAction"> 
         <void property="errorActionID"> 
          <int>1</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="fiorano.esb.adapter.jca.error.ErrorAction"> 
         <void property="errorActionID"> 
          <int>3</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="active"> 
          <boolean>true</boolean> 
         </void> 
         <void property="errorActionID"> 
          <int>11</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="errorActionID"> 
          <int>12</int> 
         </void> 
        </object> 
       </void> 
      </object> 
     </void> 
     <void method="put"> 
      <object class="fiorano.esb.adapter.jca.error.Error"> 
       <void property="errorID"> 
        <int>0</int> 
       </void> 
      </object> 
      <object class="java.util.ArrayList"> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="active"> 
          <boolean>true</boolean> 
         </void> 
         <void property="errorActionID"> 
          <int>11</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="active"> 
          <boolean>true</boolean> 
         </void> 
         <void property="errorActionID"> 
          <int>2</int> 
         </void> 
        </object> 
       </void> 
      </object> 
     </void> 
    </void> 
   </object> 
  </void> 
 </object> 
</java> 
]]]]><![CDATA[></ErrorConfigurations><SchedulerConfigurations><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.bc.trgateway.model.dmi.scheduler.SchedulerConfigurationInfo"> 
  <void property="startDate"> 
   <object class="java.util.Date"> 
    <long>1136873712546</long> 
   </object> 
  </void> 
  <void property="timeOffset"> 
   <string>+00:00</string> 
  </void> 
  <void property="unit"> 
   <string>seconds</string> 
  </void> 
 </object> 
</java> 
]]]]><![CDATA[></SchedulerConfigurations></TrGatewayConfigurations>]]></configuration><configuration-properties /><deployment nodes="fps" /><execution><debug enabled="false" port="5000" /><launch first-available-node="false" /></execution><inputport-instances><inputport-instance name="IN_PORT"><schema root="{http://hospitality.com/service/}PropertySegment"><content><![CDATA[${Transform2B_Book.IN_PORT}]]></content></schema><jms><destination /><subscriber><transaction enabled="true" /><subscription durable="false" name="null" /></subscriber></jms></inputport-instance></inputport-instances><outputport-instances><outputport-instance name="OUT_PORT"><schema root="{http://localhost:1880/bcwsgateway/services/SupplierA_WS/bookHotelRoom/Input}Envelope"><content><![CDATA[${SupplierA_WS_BH.IN_PORT}]]></content></schema><jms><destination /><publisher><messages priority="4" /></publisher></jms></outputport-instance><outputport-instance name="ON_EXCEPTION"><schema root="{http://www.fiorano.com/fesb/activity/fault}Error"><content><![CDATA[${ERROR_XSD}]]></content></schema><jms><destination /><publisher><messages priority="4" /></publisher></jms></outputport-instance></outputport-instances><logmanager logger="java.util.logging.FileHandler"><Param name="java.util.logging.FileHandler.limit">50000</Param><Param name="java.util.logging.FileHandler.dir">logs</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.dateformat">MM:dd:yyyy</Param><Param name="java.util.logging.FileHandler.count">4</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.includetimestamp">true</Param></logmanager><logmodules><logmodule name="com.fiorano.bc.trgateway" /><logmodule name="com.fiorano.adapter.jca.xslt.spi.outbound.XsltManagedConnectionFactory" /><logmodule name="com.fiorano.adapter.jca.xslt.cci.XsltInteraction" /><logmodule name="ERR_HANDLER" /><logmodule name="com.fiorano.adapter.jca.xslt.cci.XsltInteractionSpec" /><logmodule name="OUT_HANDLER" level="INFO" /></logmodules><runtime-arguments><runtime-argument name="JVM_PARAMS" mandatory="false" inmemory="false"><value>-DLOG_TO_STREAM=true</value></runtime-argument></runtime-arguments></inst><inst name="Transform2B_Avlbl"><service guid="Xslt" version="4.0" /><config-file name="Transform2B_Avlbl.xml" /><configuration><![CDATA[<?xml version="1.0" encoding="UTF-8"?><TrGatewayConfigurations><BCConfigurations><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.bc.trgateway.model.dmi.bcdk.BCDKConfigurationInfo"> 
  <void property="JCAAdapterConfig"> 
   <string>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;ESBAdapterConfigurations&gt;&lt;ConnectionLess&gt;true&lt;/ConnectionLess&gt;&lt;isConfigurationRequired&gt;true&lt;/isConfigurationRequired&gt;&lt;isLicensed&gt;false&lt;/isLicensed&gt;&lt;Inbound&gt;false&lt;/Inbound&gt;&lt;AdapterInstanceProperties&gt;&lt;![CDATA[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; 
&lt;java version=&quot;1.5.0_05&quot; class=&quot;java.beans.XMLDecoder&quot;&gt; 
 &lt;object class=&quot;fiorano.esb.adapter.cfg.ESBAdapterInstanceProperties&quot;&gt; 
  &lt;void property=&quot;domain&quot;&gt; 
   &lt;string&gt;BCConfigPropertySheet&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;instanceName&quot;&gt; 
   &lt;string&gt;Xslt1&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;logCategories&quot;&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;XsltInteractionSpec&lt;/string&gt; 
    &lt;object class=&quot;fiorano.esb.adapter.cfg.LogCategory&quot;&gt; 
     &lt;void property=&quot;loggerDescription&quot;&gt; 
      &lt;string&gt;XsltInteractionSpec&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerDisplayName&quot;&gt; 
      &lt;string&gt;XsltInteractionSpec&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerLevel&quot;&gt; 
      &lt;string&gt;SEVERE&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerName&quot;&gt; 
      &lt;string&gt;com.fiorano.adapter.jca.xslt.cci.XsltInteractionSpec&lt;/string&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;XsltInteraction&lt;/string&gt; 
    &lt;object class=&quot;fiorano.esb.adapter.cfg.LogCategory&quot;&gt; 
     &lt;void property=&quot;loggerDescription&quot;&gt; 
      &lt;string&gt;XsltInteraction&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerDisplayName&quot;&gt; 
      &lt;string&gt;XsltInteraction&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerLevel&quot;&gt; 
      &lt;string&gt;SEVERE&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerName&quot;&gt; 
      &lt;string&gt;com.fiorano.adapter.jca.xslt.cci.XsltInteraction&lt;/string&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;XsltManagedConnectionFactory&lt;/string&gt; 
    &lt;object class=&quot;fiorano.esb.adapter.cfg.LogCategory&quot;&gt; 
     &lt;void property=&quot;loggerDescription&quot;&gt; 
      &lt;string&gt;XsltManagedConnectionFactory&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerDisplayName&quot;&gt; 
      &lt;string&gt;XsltManagedConnectionFactory&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerLevel&quot;&gt; 
      &lt;string&gt;SEVERE&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerName&quot;&gt; 
      &lt;string&gt;com.fiorano.adapter.jca.xslt.spi.outbound.XsltManagedConnectionFactory&lt;/string&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;state&quot;&gt; 
   &lt;int&gt;8&lt;/int&gt; 
  &lt;/void&gt; 
 &lt;/object&gt; 
&lt;/java&gt; 
]]&gt;&lt;/AdapterInstanceProperties&gt;&lt;ConfigurationObjects&gt;&lt;ConfigurationObject&gt;&lt;![CDATA[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; 
&lt;java version=&quot;1.5.0_05&quot; class=&quot;java.beans.XMLDecoder&quot;&gt; 
 &lt;object class=&quot;fiorano.esb.adapter.cfg.ConfigurationObject&quot;&gt; 
  &lt;void property=&quot;beanClassName&quot;&gt; 
   &lt;class&gt;com.fiorano.adapter.jca.xslt.spi.outbound.XsltManagedConnectionFactory&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;configParams&quot;&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsReconnection&lt;/string&gt; 
    &lt;boolean&gt;false&lt;/boolean&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;description&quot;&gt; 
   &lt;string&gt;Xslt Connection&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;icon&quot;&gt; 
   &lt;string&gt;cf.gif&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;implClassName&quot;&gt; 
   &lt;class&gt;com.fiorano.adapter.jca.xslt.spi.outbound.XsltManagedConnectionFactory&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;name&quot;&gt; 
   &lt;string&gt;Xslt Connection&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;type&quot;&gt; 
   &lt;string&gt;javax.resource.spi.ManagedConnectionFactory&lt;/string&gt; 
  &lt;/void&gt; 
 &lt;/object&gt; 
&lt;/java&gt; 
]]&gt;&lt;/ConfigurationObject&gt;&lt;ConfigurationObject&gt;&lt;![CDATA[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; 
&lt;java version=&quot;1.5.0_05&quot; class=&quot;java.beans.XMLDecoder&quot;&gt; 
 &lt;object class=&quot;fiorano.esb.adapter.cfg.ConfigurationObject&quot;&gt; 
  &lt;void property=&quot;beanClassName&quot;&gt; 
   &lt;class&gt;com.fiorano.adapter.jca.xslt.cci.XsltInteractionSpec&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;beanObject&quot;&gt; 
   &lt;void property=&quot;XSL&quot;&gt; 
    &lt;string&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;xsl:stylesheet version=&amp;quot;1.0&amp;quot; xmlns:xsl=&amp;quot;http://www.w3.org/1999/XSL/Transform&amp;quot; xmlns:java=&amp;quot;http://xml.apache.org/xslt/java&amp;quot; xmlns:datetime=&amp;quot;http://exslt.org/dates-and-times&amp;quot; xmlns:set=&amp;quot;http://exslt.org/sets&amp;quot; xmlns:math=&amp;quot;http://exslt.org/math&amp;quot; exclude-result-prefixes=&amp;quot;java&amp;quot; xmlns:lxslt=&amp;quot;http://xml.apache.org/xslt&amp;quot; xmlns:xalan=&amp;quot;http://xml.apache.org/xslt&amp;quot; xmlns:ns1=&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot; xmlns:ns2=&amp;quot;http://www.fiorano.com/fesb/activity/Get_Available/HTTP/In&amp;quot; xmlns:ns0=&amp;quot;http://hospitality.com/service/&amp;quot; xmlns:dateConversion=&amp;quot;ext1&amp;quot; xmlns:myext=&amp;quot;ext2&amp;quot; xmlns:strings=&amp;quot;ext3&amp;quot; extension-element-prefixes=&amp;quot;datetime set math dateConversion myext strings&amp;quot;&amp;gt;
  &amp;lt;xsl:output method=&amp;quot;xml&amp;quot; indent=&amp;quot;yes&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; xalan:indent-amount=&amp;quot;2&amp;quot; omit-xml-declaration=&amp;quot;no&amp;quot;&amp;gt;&amp;lt;/xsl:output&amp;gt;
  &amp;lt;xsl:template match=&amp;quot;/&amp;quot;&amp;gt;
    &amp;lt;ns2:HTTPRequest&amp;gt;
      &amp;lt;Entity&amp;gt;
        &amp;lt;NVPairs&amp;gt;
          &amp;lt;ns2:NVPair&amp;gt;
            &amp;lt;xsl:attribute name=&amp;quot;Name&amp;quot;&amp;gt;
              &amp;lt;xsl:value-of select=&amp;quot;&amp;apos;HotelCode&amp;apos;&amp;quot;&amp;gt;&amp;lt;/xsl:value-of&amp;gt;
            &amp;lt;/xsl:attribute&amp;gt;
            &amp;lt;xsl:attribute name=&amp;quot;Value&amp;quot;&amp;gt;
              &amp;lt;xsl:value-of select=&amp;quot;document(&amp;apos;Input2&amp;apos;)/ns0:PropertySegment/@HotelCode&amp;quot;&amp;gt;&amp;lt;/xsl:value-of&amp;gt;
            &amp;lt;/xsl:attribute&amp;gt;&amp;lt;/ns2:NVPair&amp;gt;
        &amp;lt;/NVPairs&amp;gt;
      &amp;lt;/Entity&amp;gt;
    &amp;lt;/ns2:HTTPRequest&amp;gt;
  &amp;lt;/xsl:template&amp;gt;
&amp;lt;/xsl:stylesheet&amp;gt;&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;errorActionsMap&quot;&gt; 
    &lt;object class=&quot;fiorano.esb.adapter.jca.error.ErrorActionsMap&quot;&gt; 
     &lt;void property=&quot;errorActionsMap&quot;&gt; 
      &lt;void method=&quot;put&quot;&gt; 
       &lt;object class=&quot;fiorano.esb.adapter.jca.error.Error&quot;&gt; 
        &lt;void property=&quot;errorID&quot;&gt; 
         &lt;int&gt;2&lt;/int&gt; 
        &lt;/void&gt; 
       &lt;/object&gt; 
       &lt;object class=&quot;java.util.ArrayList&quot;&gt; 
        &lt;void method=&quot;add&quot;&gt; 
         &lt;object class=&quot;fiorano.esb.adapter.jca.error.RetryErrorAction&quot;&gt; 
          &lt;void property=&quot;errorActionID&quot;&gt; 
           &lt;int&gt;1&lt;/int&gt; 
          &lt;/void&gt; 
         &lt;/object&gt; 
        &lt;/void&gt; 
        &lt;void method=&quot;add&quot;&gt; 
         &lt;object class=&quot;fiorano.esb.adapter.jca.error.ErrorAction&quot;&gt; 
          &lt;void property=&quot;errorActionID&quot;&gt; 
           &lt;int&gt;3&lt;/int&gt; 
          &lt;/void&gt; 
         &lt;/object&gt; 
        &lt;/void&gt; 
       &lt;/object&gt; 
      &lt;/void&gt; 
      &lt;void method=&quot;put&quot;&gt; 
       &lt;object class=&quot;fiorano.esb.adapter.jca.error.Error&quot;&gt; 
        &lt;void property=&quot;errorID&quot;&gt; 
         &lt;int&gt;0&lt;/int&gt; 
        &lt;/void&gt; 
       &lt;/object&gt; 
       &lt;object class=&quot;java.util.ArrayList&quot;/&gt; 
      &lt;/void&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;esbDefInPort&quot;&gt; 
    &lt;object class=&quot;fiorano.esb.record.ESBRecordDefinition&quot;&gt; 
     &lt;void property=&quot;importedStructures&quot;&gt; 
      &lt;object class=&quot;java.util.Hashtable&quot;/&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;rootElementName&quot;&gt; 
      &lt;string&gt;PropertySegment&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;structure&quot;&gt; 
      &lt;string&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;xsd:schema xmlns=&amp;quot;http://hospitality.com/service/&amp;quot; xmlns:xsd=&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot; targetNamespace=&amp;quot;http://hospitality.com/service/&amp;quot;&amp;gt;
    &amp;lt;xsd:element name=&amp;quot;GuestCount&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;Count&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
    &amp;lt;xsd:element name=&amp;quot;GuestCounts&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:sequence&amp;gt;
                &amp;lt;xsd:element ref=&amp;quot;GuestCount&amp;quot;/&amp;gt;
            &amp;lt;/xsd:sequence&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;IsPerRoom&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
    
    &amp;lt;xsd:element name=&amp;quot;PropertySegment&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:sequence&amp;gt;
                &amp;lt;xsd:element ref=&amp;quot;StayDateRange&amp;quot;/&amp;gt;
                &amp;lt;xsd:element ref=&amp;quot;RoomStayCandidates&amp;quot;/&amp;gt;
            &amp;lt;/xsd:sequence&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;ChainCode&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;HotelCode&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;SystemID&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
    
    &amp;lt;xsd:element name=&amp;quot;RoomStayCandidate&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:sequence&amp;gt;
                &amp;lt;xsd:element ref=&amp;quot;GuestCounts&amp;quot;/&amp;gt;
            &amp;lt;/xsd:sequence&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
    &amp;lt;xsd:element name=&amp;quot;RoomStayCandidates&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:sequence&amp;gt;
                &amp;lt;xsd:element ref=&amp;quot;RoomStayCandidate&amp;quot;/&amp;gt;
            &amp;lt;/xsd:sequence&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
    &amp;lt;xsd:element name=&amp;quot;StayDateRange&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;End&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;Start&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
&amp;lt;/xsd:schema&amp;gt;&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;targetNamespace&quot;&gt; 
      &lt;string&gt;http://hospitality.com/service/&lt;/string&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;esbDefOutPort&quot;&gt; 
    &lt;object class=&quot;fiorano.esb.record.ESBRecordDefinition&quot;&gt; 
     &lt;void property=&quot;importedStructures&quot;&gt; 
      &lt;object class=&quot;java.util.Hashtable&quot;/&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;rootElementName&quot;&gt; 
      &lt;string&gt;HTTPRequest&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;structure&quot;&gt; 
      &lt;string&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;xsd:schema xmlns:fns=&amp;quot;http://www.fiorano.com/fesb/activity/Get_Available/HTTP/In&amp;quot; xmlns:xsd=&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot; targetNamespace=&amp;quot;http://www.fiorano.com/fesb/activity/Get_Available/HTTP/In&amp;quot;&amp;gt;
   &amp;lt;xsd:complexType name=&amp;quot;RootType&amp;quot;&amp;gt;
      &amp;lt;xsd:sequence minOccurs=&amp;quot;0&amp;quot;&amp;gt;
         &amp;lt;xsd:element name=&amp;quot;URI&amp;quot; type=&amp;quot;xsd:string&amp;quot;/&amp;gt;
         &amp;lt;xsd:element name=&amp;quot;Header&amp;quot; type=&amp;quot;fns:HeaderType&amp;quot;/&amp;gt;
         &amp;lt;xsd:element name=&amp;quot;Entity&amp;quot; type=&amp;quot;fns:EntityType&amp;quot;/&amp;gt;
      &amp;lt;/xsd:sequence&amp;gt;
   &amp;lt;/xsd:complexType&amp;gt;
   &amp;lt;xsd:element name=&amp;quot;HTTPRequest&amp;quot; type=&amp;quot;fns:RootType&amp;quot;/&amp;gt;
   &amp;lt;xsd:complexType name=&amp;quot;HeaderType&amp;quot;&amp;gt;
      &amp;lt;xsd:sequence&amp;gt;
         &amp;lt;xsd:element name=&amp;quot;Cookie&amp;quot; type=&amp;quot;xsd:string&amp;quot;/&amp;gt;
         &amp;lt;xsd:element name=&amp;quot;Pragma&amp;quot; type=&amp;quot;xsd:string&amp;quot;/&amp;gt;
      &amp;lt;/xsd:sequence&amp;gt;
   &amp;lt;/xsd:complexType&amp;gt;
   &amp;lt;xsd:complexType name=&amp;quot;EntityType&amp;quot;&amp;gt;
      &amp;lt;xsd:sequence&amp;gt;
         &amp;lt;xsd:element name=&amp;quot;NVPairs&amp;quot; type=&amp;quot;fns:NVPairType&amp;quot;/&amp;gt;
      &amp;lt;/xsd:sequence&amp;gt;
   &amp;lt;/xsd:complexType&amp;gt;
   &amp;lt;xsd:complexType name=&amp;quot;NVPairType&amp;quot;&amp;gt;
      &amp;lt;xsd:choice minOccurs=&amp;quot;0&amp;quot; maxOccurs=&amp;quot;unbounded&amp;quot;&amp;gt;
         &amp;lt;xsd:element ref=&amp;quot;fns:NVPair&amp;quot;/&amp;gt;
      &amp;lt;/xsd:choice&amp;gt;
   &amp;lt;/xsd:complexType&amp;gt;
   &amp;lt;xsd:complexType name=&amp;quot;NVPair&amp;quot;&amp;gt;
      &amp;lt;xsd:attribute name=&amp;quot;Name&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
      &amp;lt;xsd:attribute name=&amp;quot;Value&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
   &amp;lt;/xsd:complexType&amp;gt;
   &amp;lt;xsd:element name=&amp;quot;NVPair&amp;quot; type=&amp;quot;fns:NVPair&amp;quot;/&amp;gt;
&amp;lt;/xsd:schema&amp;gt;&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;targetNamespace&quot;&gt; 
      &lt;string&gt;http://www.fiorano.com/fesb/activity/Get_Available/HTTP/In&lt;/string&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;project&quot;&gt; 
    &lt;string&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;MapperProject version=&amp;quot;3.0.1&amp;quot; suppressEmptyItems=&amp;quot;false&amp;quot; convertor=&amp;quot;nameIndexed&amp;quot; separator=&amp;quot;,&amp;quot;&amp;gt;
  &amp;lt;XSLTEngine&amp;gt;Xalan&amp;lt;/XSLTEngine&amp;gt;
  &amp;lt;XSLTEncoding&amp;gt;UTF-8&amp;lt;/XSLTEncoding&amp;gt;
  &amp;lt;OutputEncoding&amp;gt;UTF-8&amp;lt;/OutputEncoding&amp;gt;
  &amp;lt;indent&amp;gt;true&amp;lt;/indent&amp;gt;
  &amp;lt;setDTD&amp;gt;false&amp;lt;/setDTD&amp;gt;
  &amp;lt;omit-xml-declaration&amp;gt;false&amp;lt;/omit-xml-declaration&amp;gt;
  &amp;lt;Comments&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/Comments&amp;gt;
  &amp;lt;InputStructure name=&amp;quot;Application-Context&amp;quot; mime=&amp;quot;dtd&amp;quot; rootName=&amp;quot;Context&amp;quot; duplicates=&amp;quot;&amp;quot;&amp;gt;&amp;lt;![CDATA[&amp;lt;!ELEMENT Context (#PCDATA)&amp;gt;]]&amp;gt;&amp;lt;/InputStructure&amp;gt;
  &amp;lt;InputStructure name=&amp;quot;Input2&amp;quot; mime=&amp;quot;xsd&amp;quot; rootName=&amp;quot;PropertySegment&amp;quot; namespace=&amp;quot;http://hospitality.com/service/&amp;quot; parser=&amp;quot;Xerces&amp;quot; duplicates=&amp;quot;&amp;quot;&amp;gt;&amp;lt;![CDATA[&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;xsd:schema xmlns=&amp;quot;http://hospitality.com/service/&amp;quot; xmlns:xsd=&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot; targetNamespace=&amp;quot;http://hospitality.com/service/&amp;quot;&amp;gt;
    &amp;lt;xsd:element name=&amp;quot;GuestCount&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;Count&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
    &amp;lt;xsd:element name=&amp;quot;GuestCounts&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:sequence&amp;gt;
                &amp;lt;xsd:element ref=&amp;quot;GuestCount&amp;quot;/&amp;gt;
            &amp;lt;/xsd:sequence&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;IsPerRoom&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
    
    &amp;lt;xsd:element name=&amp;quot;PropertySegment&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:sequence&amp;gt;
                &amp;lt;xsd:element ref=&amp;quot;StayDateRange&amp;quot;/&amp;gt;
                &amp;lt;xsd:element ref=&amp;quot;RoomStayCandidates&amp;quot;/&amp;gt;
            &amp;lt;/xsd:sequence&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;ChainCode&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;HotelCode&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;SystemID&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
    
    &amp;lt;xsd:element name=&amp;quot;RoomStayCandidate&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:sequence&amp;gt;
                &amp;lt;xsd:element ref=&amp;quot;GuestCounts&amp;quot;/&amp;gt;
            &amp;lt;/xsd:sequence&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
    &amp;lt;xsd:element name=&amp;quot;RoomStayCandidates&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:sequence&amp;gt;
                &amp;lt;xsd:element ref=&amp;quot;RoomStayCandidate&amp;quot;/&amp;gt;
            &amp;lt;/xsd:sequence&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
    &amp;lt;xsd:element name=&amp;quot;StayDateRange&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;End&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;Start&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
&amp;lt;/xsd:schema&amp;gt;]]&amp;gt;&amp;lt;/InputStructure&amp;gt;
  &amp;lt;OutputStructure name=&amp;quot;OUT_PORT&amp;quot; mime=&amp;quot;xsd&amp;quot; rootName=&amp;quot;HTTPRequest&amp;quot; namespace=&amp;quot;http://www.fiorano.com/fesb/activity/Get_Available/HTTP/In&amp;quot; parser=&amp;quot;Xerces&amp;quot; duplicates=&amp;quot;0&amp;quot;&amp;gt;&amp;lt;![CDATA[&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;xsd:schema xmlns:fns=&amp;quot;http://www.fiorano.com/fesb/activity/Get_Available/HTTP/In&amp;quot; xmlns:xsd=&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot; targetNamespace=&amp;quot;http://www.fiorano.com/fesb/activity/Get_Available/HTTP/In&amp;quot;&amp;gt;
   &amp;lt;xsd:complexType name=&amp;quot;RootType&amp;quot;&amp;gt;
      &amp;lt;xsd:sequence minOccurs=&amp;quot;0&amp;quot;&amp;gt;
         &amp;lt;xsd:element name=&amp;quot;URI&amp;quot; type=&amp;quot;xsd:string&amp;quot;/&amp;gt;
         &amp;lt;xsd:element name=&amp;quot;Header&amp;quot; type=&amp;quot;fns:HeaderType&amp;quot;/&amp;gt;
         &amp;lt;xsd:element name=&amp;quot;Entity&amp;quot; type=&amp;quot;fns:EntityType&amp;quot;/&amp;gt;
      &amp;lt;/xsd:sequence&amp;gt;
   &amp;lt;/xsd:complexType&amp;gt;
   &amp;lt;xsd:element name=&amp;quot;HTTPRequest&amp;quot; type=&amp;quot;fns:RootType&amp;quot;/&amp;gt;
   &amp;lt;xsd:complexType name=&amp;quot;HeaderType&amp;quot;&amp;gt;
      &amp;lt;xsd:sequence&amp;gt;
         &amp;lt;xsd:element name=&amp;quot;Cookie&amp;quot; type=&amp;quot;xsd:string&amp;quot;/&amp;gt;
         &amp;lt;xsd:element name=&amp;quot;Pragma&amp;quot; type=&amp;quot;xsd:string&amp;quot;/&amp;gt;
      &amp;lt;/xsd:sequence&amp;gt;
   &amp;lt;/xsd:complexType&amp;gt;
   &amp;lt;xsd:complexType name=&amp;quot;EntityType&amp;quot;&amp;gt;
      &amp;lt;xsd:sequence&amp;gt;
         &amp;lt;xsd:element name=&amp;quot;NVPairs&amp;quot; type=&amp;quot;fns:NVPairType&amp;quot;/&amp;gt;
      &amp;lt;/xsd:sequence&amp;gt;
   &amp;lt;/xsd:complexType&amp;gt;
   &amp;lt;xsd:complexType name=&amp;quot;NVPairType&amp;quot;&amp;gt;
      &amp;lt;xsd:choice minOccurs=&amp;quot;0&amp;quot; maxOccurs=&amp;quot;unbounded&amp;quot;&amp;gt;
         &amp;lt;xsd:element ref=&amp;quot;fns:NVPair&amp;quot;/&amp;gt;
      &amp;lt;/xsd:choice&amp;gt;
   &amp;lt;/xsd:complexType&amp;gt;
   &amp;lt;xsd:complexType name=&amp;quot;NVPair&amp;quot;&amp;gt;
      &amp;lt;xsd:attribute name=&amp;quot;Name&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
      &amp;lt;xsd:attribute name=&amp;quot;Value&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
   &amp;lt;/xsd:complexType&amp;gt;
   &amp;lt;xsd:element name=&amp;quot;NVPair&amp;quot; type=&amp;quot;fns:NVPair&amp;quot;/&amp;gt;
&amp;lt;/xsd:schema&amp;gt;]]&amp;gt;&amp;lt;/OutputStructure&amp;gt;
  &amp;lt;Extensions&amp;gt;
    &amp;lt;Extension name=&amp;quot;dateConversion&amp;quot; language=&amp;quot;javascript&amp;quot;&amp;gt;
      &amp;lt;Script&amp;gt;&amp;lt;![CDATA[// ===================================================================
// You may *NOT* re-distribute this code in any way except through its
// use. That means, you can include it in your product, or your web
// site, or any other form where the code is actually being used. You
// may not put the plain javascript up on your site for download or
// include it in your javascript libraries for download. 
// If you wish to share this code with others, please just point them
// to the URL instead.
// Please DO NOT link directly to my .js files from your site. Copy
// the files to your server and use them there. Thank you.
// ===================================================================

// HISTORY
// ------------------------------------------------------------------
// March 11, 2003: Added parseDate() function
// March 11, 2003: Added &amp;quot;NNN&amp;quot; formatting option. Doesn&amp;apos;t match up
//                 perfectly with SimpleDateFormat formats, but 
//                 backwards-compatability was required.

// ------------------------------------------------------------------
// These functions use the same &amp;apos;format&amp;apos; strings as the 
// java.text.SimpleDateFormat class, with minor exceptions.
// The format string consists of the following abbreviations:
// 
// Field        | Full Form          | Short Form
// -------------+--------------------+-----------------------
// Year         | yyyy (4 digits)    | yy (2 digits), y (2 or 4 digits)
// Month        | MMM (name or abbr.)| MM (2 digits), M (1 or 2 digits)
//              | NNN (abbr.)        |
// Day of Month | dd (2 digits)      | d (1 or 2 digits)
// Day of Week  | EE (name)          | E (abbr)
// Hour (1-12)  | hh (2 digits)      | h (1 or 2 digits)
// Hour (0-23)  | HH (2 digits)      | H (1 or 2 digits)
// Hour (0-11)  | KK (2 digits)      | K (1 or 2 digits)
// Hour (1-24)  | kk (2 digits)      | k (1 or 2 digits)
// Minute       | mm (2 digits)      | m (1 or 2 digits)
// Second       | ss (2 digits)      | s (1 or 2 digits)
// AM/PM        | a                  |
//
// NOTE THE DIFFERENCE BETWEEN MM and mm! Month=MM, not mm!
// Examples:
//  &amp;quot;MMM d, y&amp;quot; matches: January 01, 2000
//                      Dec 1, 1900
//                      Nov 20, 00
//  &amp;quot;M/d/yy&amp;quot;   matches: 01/20/00
//                      9/2/00
//  &amp;quot;MMM dd, yyyy hh:mm:ssa&amp;quot; matches: &amp;quot;January 01, 2000 12:30:45AM&amp;quot;
// ------------------------------------------------------------------

var MONTH_NAMES=new Array(&amp;apos;January&amp;apos;,&amp;apos;February&amp;apos;,&amp;apos;March&amp;apos;,&amp;apos;April&amp;apos;,&amp;apos;May&amp;apos;,&amp;apos;June&amp;apos;,&amp;apos;July&amp;apos;,&amp;apos;August&amp;apos;,&amp;apos;September&amp;apos;,&amp;apos;October&amp;apos;,&amp;apos;November&amp;apos;,&amp;apos;December&amp;apos;,&amp;apos;Jan&amp;apos;,&amp;apos;Feb&amp;apos;,&amp;apos;Mar&amp;apos;,&amp;apos;Apr&amp;apos;,&amp;apos;May&amp;apos;,&amp;apos;Jun&amp;apos;,&amp;apos;Jul&amp;apos;,&amp;apos;Aug&amp;apos;,&amp;apos;Sep&amp;apos;,&amp;apos;Oct&amp;apos;,&amp;apos;Nov&amp;apos;,&amp;apos;Dec&amp;apos;);
var DAY_NAMES=new Array(&amp;apos;Sunday&amp;apos;,&amp;apos;Monday&amp;apos;,&amp;apos;Tuesday&amp;apos;,&amp;apos;Wednesday&amp;apos;,&amp;apos;Thursday&amp;apos;,&amp;apos;Friday&amp;apos;,&amp;apos;Saturday&amp;apos;,&amp;apos;Sun&amp;apos;,&amp;apos;Mon&amp;apos;,&amp;apos;Tue&amp;apos;,&amp;apos;Wed&amp;apos;,&amp;apos;Thu&amp;apos;,&amp;apos;Fri&amp;apos;,&amp;apos;Sat&amp;apos;);
function LZ(x) {return(x&amp;lt;0||x&amp;gt;9?&amp;quot;&amp;quot;:&amp;quot;0&amp;quot;)+x}

function convertDate(dateString, inFormat, outFormat)
{
    return formatDate(getDateFromFormat(dateString,inFormat),outFormat);
}

// ------------------------------------------------------------------
// isDate ( date_string, format_string )
// Returns true if date string matches format of format string and
// is a valid date. Else returns false.
// It is recommended that you trim whitespace around the value before
// passing it to this function, as whitespace is NOT ignored!
// ------------------------------------------------------------------
function isDate(val,format) {
    var date=getDateFromFormat(val,format);
    if (date==0) { return false; }
    return true;
    }

// -------------------------------------------------------------------
// compareDates(date1,date1format,date2,date2format)
//   Compare two date strings to see which is greater.
//   Returns:
//   1 if date1 is greater than date2
//   0 if date2 is greater than date1 of if they are the same
//  -1 if either of the dates is in an invalid format
// -------------------------------------------------------------------
function compareDates(date1,dateformat1,date2,dateformat2) {
    var d1=getDateFromFormat(date1,dateformat1);
    var d2=getDateFromFormat(date2,dateformat2);
    if (d1==0 || d2==0) {
        return -1;
        }
    else if (d1 &amp;gt; d2) {
        return 1;
        }
    return 0;
    }

// ------------------------------------------------------------------
// formatDate (date_object, format)
// Returns a date in the output format specified.
// The format string uses the same abbreviations as in getDateFromFormat()
// ------------------------------------------------------------------
function formatDate(date,format) {
    format=format+&amp;quot;&amp;quot;;
    var result=&amp;quot;&amp;quot;;
    var i_format=0;
    var c=&amp;quot;&amp;quot;;
    var token=&amp;quot;&amp;quot;;
    var y=date.getYear()+&amp;quot;&amp;quot;;
    var M=date.getMonth()+1;
    var d=date.getDate();
    var E=date.getDay();
    var H=date.getHours();
    var m=date.getMinutes();
    var s=date.getSeconds();
    var yyyy,yy,MMM,MM,dd,hh,h,mm,ss,ampm,HH,H,KK,K,kk,k;
    // Convert real date parts into formatted versions
    var value=new Object();
    if (y.length &amp;lt; 4) {y=&amp;quot;&amp;quot;+(y-0+1900);}
    value[&amp;quot;y&amp;quot;]=&amp;quot;&amp;quot;+y;
    value[&amp;quot;yyyy&amp;quot;]=y;
    value[&amp;quot;yy&amp;quot;]=y.substring(2,4);
    value[&amp;quot;M&amp;quot;]=M;
    value[&amp;quot;MM&amp;quot;]=LZ(M);
    value[&amp;quot;MMM&amp;quot;]=MONTH_NAMES[M-1];
    value[&amp;quot;NNN&amp;quot;]=MONTH_NAMES[M+11];
    value[&amp;quot;d&amp;quot;]=d;
    value[&amp;quot;dd&amp;quot;]=LZ(d);
    value[&amp;quot;E&amp;quot;]=DAY_NAMES[E+7];
    value[&amp;quot;EE&amp;quot;]=DAY_NAMES[E];
    value[&amp;quot;H&amp;quot;]=H;
    value[&amp;quot;HH&amp;quot;]=LZ(H);
    if (H==0){value[&amp;quot;h&amp;quot;]=12;}
    else if (H&amp;gt;12){value[&amp;quot;h&amp;quot;]=H-12;}
    else {value[&amp;quot;h&amp;quot;]=H;}
    value[&amp;quot;hh&amp;quot;]=LZ(value[&amp;quot;h&amp;quot;]);
    if (H&amp;gt;11){value[&amp;quot;K&amp;quot;]=H-12;} else {value[&amp;quot;K&amp;quot;]=H;}
    value[&amp;quot;k&amp;quot;]=H+1;
    value[&amp;quot;KK&amp;quot;]=LZ(value[&amp;quot;K&amp;quot;]);
    value[&amp;quot;kk&amp;quot;]=LZ(value[&amp;quot;k&amp;quot;]);
    if (H &amp;gt; 11) { value[&amp;quot;a&amp;quot;]=&amp;quot;PM&amp;quot;; }
    else { value[&amp;quot;a&amp;quot;]=&amp;quot;AM&amp;quot;; }
    value[&amp;quot;m&amp;quot;]=m;
    value[&amp;quot;mm&amp;quot;]=LZ(m);
    value[&amp;quot;s&amp;quot;]=s;
    value[&amp;quot;ss&amp;quot;]=LZ(s);
    while (i_format &amp;lt; format.length) {
        c=format.charAt(i_format);
        token=&amp;quot;&amp;quot;;
        while ((format.charAt(i_format)==c) &amp;amp;&amp;amp; (i_format &amp;lt; format.length)) {
            token += format.charAt(i_format++);
            }
        if (value[token] != null) { result=result + value[token]; }
        else { result=result + token; }
        }
    return result;
    }
    
// ------------------------------------------------------------------
// Utility functions for parsing in getDateFromFormat()
// ------------------------------------------------------------------
function _isInteger(val) {
    var digits=&amp;quot;1234567890&amp;quot;;
    for (var i=0; i &amp;lt; val.length; i++) {
        if (digits.indexOf(val.charAt(i))==-1) { return false; }
        }
    return true;
    }
function _getInt(str,i,minlength,maxlength) {
    for (var x=maxlength; x&amp;gt;=minlength; x--) {
        var token=str.substring(i,i+x);
        if (token.length &amp;lt; minlength) { return null; }
        if (_isInteger(token)) { return token; }
        }
    return null;
    }
    
// ------------------------------------------------------------------
// getDateFromFormat( date_string , format_string )
//
// This function takes a date string and a format string. It matches
// If the date string matches the format string, it returns the 
// getTime() of the date. If it does not match, it returns 0.
// ------------------------------------------------------------------
function getDateFromFormat(val,format) {
    val=val+&amp;quot;&amp;quot;;
    format=format+&amp;quot;&amp;quot;;
    var i_val=0;
    var i_format=0;
    var c=&amp;quot;&amp;quot;;
    var token=&amp;quot;&amp;quot;;
    var token2=&amp;quot;&amp;quot;;
    var x,y;
    var now=new Date();
    var year=now.getYear();
    var month=now.getMonth()+1;
    var date=1;
    var hh=now.getHours();
    var mm=now.getMinutes();
    var ss=now.getSeconds();
    var ampm=&amp;quot;&amp;quot;;
    
    while (i_format &amp;lt; format.length) {
        // Get next token from format string
        c=format.charAt(i_format);
        token=&amp;quot;&amp;quot;;
        while ((format.charAt(i_format)==c) &amp;amp;&amp;amp; (i_format &amp;lt; format.length)) {
            token += format.charAt(i_format++);
            }
        // Extract contents of value based on format token
        if (token==&amp;quot;yyyy&amp;quot; || token==&amp;quot;yy&amp;quot; || token==&amp;quot;y&amp;quot;) {
            if (token==&amp;quot;yyyy&amp;quot;) { x=4;y=4; }
            if (token==&amp;quot;yy&amp;quot;)   { x=2;y=2; }
            if (token==&amp;quot;y&amp;quot;)    { x=2;y=4; }
            year=_getInt(val,i_val,x,y);
            if (year==null) { return 0; }
            i_val += year.length;
            if (year.length==2) {
                if (year &amp;gt; 70) { year=1900+(year-0); }
                else { year=2000+(year-0); }
                }
            }
        else if (token==&amp;quot;MMM&amp;quot;||token==&amp;quot;NNN&amp;quot;){
            month=0;
            for (var i=0; i&amp;lt;MONTH_NAMES.length; i++) {
                var month_name=MONTH_NAMES[i];
                if (val.substring(i_val,i_val+month_name.length).toLowerCase()==month_name.toLowerCase()) {
                    if (token==&amp;quot;MMM&amp;quot;||(token==&amp;quot;NNN&amp;quot;&amp;amp;&amp;amp;i&amp;gt;11)) {
                        month=i+1;
                        if (month&amp;gt;12) { month -= 12; }
                        i_val += month_name.length;
                        break;
                        }
                    }
                }
            if ((month &amp;lt; 1)||(month&amp;gt;12)){return 0;}
            }
        else if (token==&amp;quot;EE&amp;quot;||token==&amp;quot;E&amp;quot;){
            for (var i=0; i&amp;lt;DAY_NAMES.length; i++) {
                var day_name=DAY_NAMES[i];
                if (val.substring(i_val,i_val+day_name.length).toLowerCase()==day_name.toLowerCase()) {
                    i_val += day_name.length;
                    break;
                    }
                }
            }
        else if (token==&amp;quot;MM&amp;quot;||token==&amp;quot;M&amp;quot;) {
            month=_getInt(val,i_val,token.length,2);
            if(month==null||(month&amp;lt;1)||(month&amp;gt;12)){return 0;}
            i_val+=month.length;}
        else if (token==&amp;quot;dd&amp;quot;||token==&amp;quot;d&amp;quot;) {
            date=_getInt(val,i_val,token.length,2);
            if(date==null||(date&amp;lt;1)||(date&amp;gt;31)){return 0;}
            i_val+=date.length;}
        else if (token==&amp;quot;hh&amp;quot;||token==&amp;quot;h&amp;quot;) {
            hh=_getInt(val,i_val,token.length,2);
            if(hh==null||(hh&amp;lt;1)||(hh&amp;gt;12)){return 0;}
            i_val+=hh.length;}
        else if (token==&amp;quot;HH&amp;quot;||token==&amp;quot;H&amp;quot;) {
            hh=_getInt(val,i_val,token.length,2);
            if(hh==null||(hh&amp;lt;0)||(hh&amp;gt;23)){return 0;}
            i_val+=hh.length;}
        else if (token==&amp;quot;KK&amp;quot;||token==&amp;quot;K&amp;quot;) {
            hh=_getInt(val,i_val,token.length,2);
            if(hh==null||(hh&amp;lt;0)||(hh&amp;gt;11)){return 0;}
            i_val+=hh.length;}
        else if (token==&amp;quot;kk&amp;quot;||token==&amp;quot;k&amp;quot;) {
            hh=_getInt(val,i_val,token.length,2);
            if(hh==null||(hh&amp;lt;1)||(hh&amp;gt;24)){return 0;}
            i_val+=hh.length;hh--;}
        else if (token==&amp;quot;mm&amp;quot;||token==&amp;quot;m&amp;quot;) {
            mm=_getInt(val,i_val,token.length,2);
            if(mm==null||(mm&amp;lt;0)||(mm&amp;gt;59)){return 0;}
            i_val+=mm.length;}
        else if (token==&amp;quot;ss&amp;quot;||token==&amp;quot;s&amp;quot;) {
            ss=_getInt(val,i_val,token.length,2);
            if(ss==null||(ss&amp;lt;0)||(ss&amp;gt;59)){return 0;}
            i_val+=ss.length;}
        else if (token==&amp;quot;a&amp;quot;) {
            if (val.substring(i_val,i_val+2).toLowerCase()==&amp;quot;am&amp;quot;) {ampm=&amp;quot;AM&amp;quot;;}
            else if (val.substring(i_val,i_val+2).toLowerCase()==&amp;quot;pm&amp;quot;) {ampm=&amp;quot;PM&amp;quot;;}
            else {return 0;}
            i_val+=2;}
        else {
            if (val.substring(i_val,i_val+token.length)!=token) {return 0;}
            else {i_val+=token.length;}
            }
        }
    // If there are any trailing characters left in the value, it doesn&amp;apos;t match
    if (i_val != val.length) { return 0; }
    // Is date valid for month?
    if (month==2) {
        // Check for leap year
        if ( ( (year%4==0)&amp;amp;&amp;amp;(year%100 != 0) ) || (year%400==0) ) { // leap year
            if (date &amp;gt; 29){ return 0; }
            }
        else { if (date &amp;gt; 28) { return 0; } }
        }
    if ((month==4)||(month==6)||(month==9)||(month==11)) {
        if (date &amp;gt; 30) { return 0; }
        }
    // Correct hours value
    if (hh&amp;lt;12 &amp;amp;&amp;amp; ampm==&amp;quot;PM&amp;quot;) { hh=hh-0+12; }
    else if (hh&amp;gt;11 &amp;amp;&amp;amp; ampm==&amp;quot;AM&amp;quot;) { hh-=12; }
    var newdate=new Date(year,month-1,date,hh,mm,ss);
    return newdate;
    }

// ------------------------------------------------------------------
// parseDate( date_string [, prefer_euro_format] )
//
// This function takes a date string and tries to match it to a
// number of possible date formats to get the value. It will try to
// match against the following international formats, in this order:
// y-M-d   MMM d, y   MMM d,y   y-MMM-d   d-MMM-y  MMM d
// M/d/y   M-d-y      M.d.y     MMM-d     M/d      M-d
// d/M/y   d-M-y      d.M.y     d-MMM     d/M      d-M
// A second argument may be passed to instruct the method to search
// for formats like d/M/y (european format) before M/d/y (American).
// Returns a Date object or null if no patterns match.
// ------------------------------------------------------------------
function parseDate(val) {
    var preferEuro=(arguments.length==2)?arguments[1]:false;
    generalFormats=new Array(&amp;apos;y-M-d&amp;apos;,&amp;apos;MMM d, y&amp;apos;,&amp;apos;MMM d,y&amp;apos;,&amp;apos;y-MMM-d&amp;apos;,&amp;apos;d-MMM-y&amp;apos;,&amp;apos;MMM d&amp;apos;);
    monthFirst=new Array(&amp;apos;M/d/y&amp;apos;,&amp;apos;M-d-y&amp;apos;,&amp;apos;M.d.y&amp;apos;,&amp;apos;MMM-d&amp;apos;,&amp;apos;M/d&amp;apos;,&amp;apos;M-d&amp;apos;);
    dateFirst =new Array(&amp;apos;d/M/y&amp;apos;,&amp;apos;d-M-y&amp;apos;,&amp;apos;d.M.y&amp;apos;,&amp;apos;d-MMM&amp;apos;,&amp;apos;d/M&amp;apos;,&amp;apos;d-M&amp;apos;);
    var checkList=new Array(&amp;apos;generalFormats&amp;apos;,preferEuro?&amp;apos;dateFirst&amp;apos;:&amp;apos;monthFirst&amp;apos;,preferEuro?&amp;apos;monthFirst&amp;apos;:&amp;apos;dateFirst&amp;apos;);
    var d=null;
    for (var i=0; i&amp;lt;checkList.length; i++) {
        var l=window[checkList[i]];
        for (var j=0; j&amp;lt;l.length; j++) {
            d=getDateFromFormat(val,l[j]);
            if (d&amp;gt;0) { return new Date(d); }
            }
        }
    return null;
}]]&amp;gt;&amp;lt;/Script&amp;gt;
      &amp;lt;Function name=&amp;quot;convertDate&amp;quot; return=&amp;quot;String&amp;quot;&amp;gt;
        &amp;lt;Argument name=&amp;quot;dateString&amp;quot; datatype=&amp;quot;String&amp;quot;&amp;gt;&amp;lt;/Argument&amp;gt;
        &amp;lt;Argument name=&amp;quot;inFormat&amp;quot; datatype=&amp;quot;String&amp;quot;&amp;gt;&amp;lt;/Argument&amp;gt;
        &amp;lt;Argument name=&amp;quot;outFormat&amp;quot; datatype=&amp;quot;String&amp;quot;&amp;gt;&amp;lt;/Argument&amp;gt;
      &amp;lt;/Function&amp;gt;
    &amp;lt;/Extension&amp;gt;
    &amp;lt;Extension name=&amp;quot;myext&amp;quot; language=&amp;quot;javascript&amp;quot;&amp;gt;
      &amp;lt;Script&amp;gt;&amp;lt;![CDATA[function compute(expr){
    return eval(expr);
}

function nextMillenium(){
    d = new Date()    //today&amp;apos;s date
    mill=new Date(3000, 00, 01, 00, 00, 00)    //Next millennium start date
    diff = mill-d    //difference in milliseconds
    mtg = new String(diff/86400000)    //calculate days and convert to string
    point=mtg.indexOf(&amp;quot;.&amp;quot;)    //find the decimal point
    days=mtg.substring(0,point)    //get just the whole days
    return &amp;quot;There are only &amp;quot; + days + &amp;quot; days remaining to the start of the next millennium.&amp;quot;; 
}

function replace(input, pattern, flags, str){
    return input.replace(new RegExp(pattern, flags), str);
}]]&amp;gt;&amp;lt;/Script&amp;gt;
      &amp;lt;Function name=&amp;quot;compute&amp;quot; return=&amp;quot;String&amp;quot;&amp;gt;
        &amp;lt;Argument name=&amp;quot;expr&amp;quot; datatype=&amp;quot;String&amp;quot;&amp;gt;&amp;lt;/Argument&amp;gt;
      &amp;lt;/Function&amp;gt;
      &amp;lt;Function name=&amp;quot;nextMillenium&amp;quot; return=&amp;quot;String&amp;quot;&amp;gt;&amp;lt;/Function&amp;gt;
      &amp;lt;Function name=&amp;quot;replace&amp;quot; return=&amp;quot;String&amp;quot;&amp;gt;
        &amp;lt;Argument name=&amp;quot;input&amp;quot; datatype=&amp;quot;String&amp;quot;&amp;gt;&amp;lt;/Argument&amp;gt;
        &amp;lt;Argument name=&amp;quot;pattern&amp;quot; datatype=&amp;quot;String&amp;quot;&amp;gt;&amp;lt;/Argument&amp;gt;
        &amp;lt;Argument name=&amp;quot;flags&amp;quot; datatype=&amp;quot;String&amp;quot;&amp;gt;&amp;lt;/Argument&amp;gt;
        &amp;lt;Argument name=&amp;quot;str&amp;quot; datatype=&amp;quot;String&amp;quot;&amp;gt;&amp;lt;/Argument&amp;gt;
      &amp;lt;/Function&amp;gt;
    &amp;lt;/Extension&amp;gt;
    &amp;lt;Extension name=&amp;quot;strings&amp;quot; language=&amp;quot;javascript&amp;quot;&amp;gt;
      &amp;lt;Script&amp;gt;&amp;lt;![CDATA[function multiConcat(ctx, delim){
    var ipString = &amp;quot;&amp;quot;;
    if (ctx.length){
    for (var i=0; i &amp;lt; ctx.getLength(); i++){
        ctxN  = ctx.item(i);
        if (ctxN.nodeType == 1){
            ipString +=  _wander(ctxN, delim);
        }
        if (ctxN.nodeType == 2){
            ipString += ctxN.nodeValue;
        }
    }
    }else{
    return &amp;apos;&amp;apos;;
    }
    return ipString.length&amp;gt;1 ? ipString.substring(delim.length) : ipString;
}
function   _wander(ctx, delim){
    var retStr = &amp;quot;&amp;quot;;
    var nodelist = ctx.childNodes;
    
    for (var i=0; i &amp;lt; ctx.childNodes.length; i++){
        
        ctxN = nodelist.item(i);//ctx.childNodes[i];
        
        switch(ctxN.nodeType){
            case 1:
                retStr +=   _wander(ctxN);
                break;
            case 3:
                retStr += delim +ctxN.nodeValue;
                break;
            default:
                break;
        }
    }
    return retStr;
}]]&amp;gt;&amp;lt;/Script&amp;gt;
      &amp;lt;Function name=&amp;quot;multiConcat&amp;quot; return=&amp;quot;String&amp;quot;&amp;gt;
        &amp;lt;Argument name=&amp;quot;ctx&amp;quot; datatype=&amp;quot;Unknown&amp;quot;&amp;gt;&amp;lt;/Argument&amp;gt;
        &amp;lt;Argument name=&amp;quot;delim&amp;quot; datatype=&amp;quot;String&amp;quot;&amp;gt;&amp;lt;/Argument&amp;gt;
      &amp;lt;/Function&amp;gt;
    &amp;lt;/Extension&amp;gt;
  &amp;lt;/Extensions&amp;gt;
  &amp;lt;Mappings&amp;gt;
    &amp;lt;GraphModel outputNode=&amp;quot;OUT_PORT:0,HTTPRequest:0,Entity:0,NVPairs:0,[ZERO MANY]:0,[Choice]:0,NVPair:0,Name:0&amp;quot; x=&amp;quot;330&amp;quot; y=&amp;quot;51&amp;quot; inputPins=&amp;quot;1,2&amp;quot;&amp;gt;
      &amp;lt;FunctionGraphNode label=&amp;quot;HotelCode&amp;quot; type=&amp;quot;22&amp;quot; x=&amp;quot;85&amp;quot; y=&amp;quot;43&amp;quot;&amp;gt;
        &amp;lt;OutputPins&amp;gt;str&amp;lt;/OutputPins&amp;gt;
        &amp;lt;Properties&amp;gt;&amp;lt;/Properties&amp;gt;
      &amp;lt;/FunctionGraphNode&amp;gt;
      &amp;lt;Link inputID=&amp;quot;0&amp;quot; inputIndex=&amp;quot;0&amp;quot; outputID=&amp;quot;1&amp;quot; outputIndex=&amp;quot;0&amp;quot;&amp;gt;&amp;lt;/Link&amp;gt;
    &amp;lt;/GraphModel&amp;gt;
    &amp;lt;GraphModel outputNode=&amp;quot;OUT_PORT:0,HTTPRequest:0,Entity:0,NVPairs:0,[ZERO MANY]:0,[Choice]:0,NVPair:0,Value:0&amp;quot; x=&amp;quot;285&amp;quot; y=&amp;quot;22&amp;quot; inputPins=&amp;quot;1&amp;quot;&amp;gt;
      &amp;lt;TreeGraphNode inputNode=&amp;quot;Input2:0,PropertySegment:0,HotelCode:0&amp;quot; x=&amp;quot;122&amp;quot; y=&amp;quot;22&amp;quot;&amp;gt;
        &amp;lt;InputPins&amp;gt;1st&amp;lt;/InputPins&amp;gt;
        &amp;lt;OutputPins&amp;gt;1st&amp;lt;/OutputPins&amp;gt;
      &amp;lt;/TreeGraphNode&amp;gt;
      &amp;lt;Link inputID=&amp;quot;0&amp;quot; inputIndex=&amp;quot;0&amp;quot; outputID=&amp;quot;1&amp;quot; outputIndex=&amp;quot;0&amp;quot;&amp;gt;&amp;lt;/Link&amp;gt;
    &amp;lt;/GraphModel&amp;gt;
  &amp;lt;/Mappings&amp;gt;
&amp;lt;/MapperProject&amp;gt;&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;state&quot;&gt; 
    &lt;int&gt;6&lt;/int&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;targetNamespace&quot;&gt; 
    &lt;string&gt;http://www.fiorano.com/fesb/activity/Xslt1&lt;/string&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;category&quot;&gt; 
   &lt;string&gt;Transformation&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;configParams&quot;&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;outPort&lt;/string&gt; 
    &lt;string&gt;OUT_PORT&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsReconnection&lt;/string&gt; 
    &lt;boolean&gt;false&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsScheduling&lt;/string&gt; 
    &lt;boolean&gt;true&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;enableScheduling&lt;/string&gt; 
    &lt;boolean&gt;false&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;inPort&lt;/string&gt; 
    &lt;string&gt;IN_PORT&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsStudio&lt;/string&gt; 
    &lt;boolean&gt;false&lt;/boolean&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;description&quot;&gt; 
   &lt;string&gt;Transforms input XML based on Mappings defined and generates an output XML&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;icon&quot;&gt; 
   &lt;string&gt;xslt.png&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;implClassName&quot;&gt; 
   &lt;class&gt;com.fiorano.adapter.jca.xslt.cci.XsltInteractionSpec&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;name&quot;&gt; 
   &lt;string&gt;XSLT&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;type&quot;&gt; 
   &lt;string&gt;javax.resource.cci.InteractionSpec&lt;/string&gt; 
  &lt;/void&gt; 
 &lt;/object&gt; 
&lt;/java&gt; 
]]&gt;&lt;/ConfigurationObject&gt;&lt;/ConfigurationObjects&gt;&lt;/ESBAdapterConfigurations&gt;</string> 
  </void> 
 </object> 
</java> 
]]]]><![CDATA[></BCConfigurations><TransportConfigurations><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.bc.trgateway.model.dmi.tr.TrConfigurationInfo"/> 
</java> 
]]]]><![CDATA[></TransportConfigurations><ErrorConfigurations><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.bc.trgateway.model.dmi.error.ErrorConfigurationInfo"> 
  <void property="errorActionsMap"> 
   <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorActionsMap"> 
    <void property="errorActionsMap"> 
     <void method="put"> 
      <object class="fiorano.esb.adapter.jca.error.Error"> 
       <void property="errorID"> 
        <int>2</int> 
       </void> 
      </object> 
      <object class="java.util.ArrayList"> 
       <void method="add"> 
        <object class="fiorano.esb.adapter.jca.error.RetryErrorAction"> 
         <void property="errorActionID"> 
          <int>1</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="fiorano.esb.adapter.jca.error.ErrorAction"> 
         <void property="errorActionID"> 
          <int>3</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="active"> 
          <boolean>true</boolean> 
         </void> 
         <void property="errorActionID"> 
          <int>11</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="errorActionID"> 
          <int>12</int> 
         </void> 
        </object> 
       </void> 
      </object> 
     </void> 
     <void method="put"> 
      <object class="fiorano.esb.adapter.jca.error.Error"> 
       <void property="errorID"> 
        <int>0</int> 
       </void> 
      </object> 
      <object class="java.util.ArrayList"> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="active"> 
          <boolean>true</boolean> 
         </void> 
         <void property="errorActionID"> 
          <int>11</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="active"> 
          <boolean>true</boolean> 
         </void> 
         <void property="errorActionID"> 
          <int>2</int> 
         </void> 
        </object> 
       </void> 
      </object> 
     </void> 
    </void> 
   </object> 
  </void> 
 </object> 
</java> 
]]]]><![CDATA[></ErrorConfigurations><SchedulerConfigurations><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.bc.trgateway.model.dmi.scheduler.SchedulerConfigurationInfo"> 
  <void property="startDate"> 
   <object class="java.util.Date"> 
    <long>1136875115718</long> 
   </object> 
  </void> 
  <void property="timeOffset"> 
   <string>+00:00</string> 
  </void> 
  <void property="unit"> 
   <string>seconds</string> 
  </void> 
 </object> 
</java> 
]]]]><![CDATA[></SchedulerConfigurations></TrGatewayConfigurations>]]></configuration><configuration-properties /><deployment nodes="fps" /><execution><debug enabled="false" port="5000" /><launch first-available-node="false" /></execution><inputport-instances><inputport-instance name="IN_PORT"><schema root="{http://hospitality.com/service/}PropertySegment"><content><![CDATA[${Transform2B_Book.IN_PORT}]]></content></schema><jms><destination /><subscriber><transaction enabled="true" /><subscription durable="false" name="null" /></subscriber></jms></inputport-instance></inputport-instances><outputport-instances><outputport-instance name="OUT_PORT"><schema root="{http://www.fiorano.com/fesb/activity/Get_Available/HTTP/In}HTTPRequest"><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:fns="http://www.fiorano.com/fesb/activity/Get_Available/HTTP/In" xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.fiorano.com/fesb/activity/Get_Available/HTTP/In">
   <xsd:complexType name="RootType">
      <xsd:sequence minOccurs="0">
         <xsd:element name="URI" type="xsd:string"/>
         <xsd:element name="Header" type="fns:HeaderType"/>
         <xsd:element name="Entity" type="fns:EntityType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="HTTPRequest" type="fns:RootType"/>
   <xsd:complexType name="HeaderType">
      <xsd:sequence>
         <xsd:element name="Cookie" type="xsd:string"/>
         <xsd:element name="Pragma" type="xsd:string"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="EntityType">
      <xsd:sequence>
         <xsd:element name="NVPairs" type="fns:NVPairType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="NVPairType">
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
         <xsd:element ref="fns:NVPair"/>
      </xsd:choice>
   </xsd:complexType>
   <xsd:complexType name="NVPair">
      <xsd:attribute name="Name" type="xsd:string" use="required"/>
      <xsd:attribute name="Value" type="xsd:string" use="required"/>
   </xsd:complexType>
   <xsd:element name="NVPair" type="fns:NVPair"/>
</xsd:schema>]]></content></schema><jms><destination /><publisher><messages priority="4" /></publisher></jms></outputport-instance><outputport-instance name="ON_EXCEPTION"><schema root="{http://www.fiorano.com/fesb/activity/fault}Error"><content><![CDATA[${SplitToSuppliers_Avlbl.ON_EXCEPTION}]]></content></schema><jms><destination /><publisher><messages priority="4" /></publisher></jms></outputport-instance></outputport-instances><logmanager logger="java.util.logging.FileHandler"><Param name="java.util.logging.FileHandler.limit">50000</Param><Param name="java.util.logging.FileHandler.dir">logs</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.dateformat">MM:dd:yyyy</Param><Param name="java.util.logging.FileHandler.count">4</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.includetimestamp">true</Param></logmanager><logmodules><logmodule name="com.fiorano.bc.trgateway" /><logmodule name="com.fiorano.adapter.jca.xslt.spi.outbound.XsltManagedConnectionFactory" /><logmodule name="com.fiorano.adapter.jca.xslt.cci.XsltInteraction" /><logmodule name="ERR_HANDLER" /><logmodule name="com.fiorano.adapter.jca.xslt.cci.XsltInteractionSpec" /><logmodule name="OUT_HANDLER" level="INFO" /></logmodules><runtime-arguments><runtime-argument name="JVM_PARAMS" mandatory="false" inmemory="false"><value>-DLOG_TO_STREAM=true</value></runtime-argument></runtime-arguments></inst><inst name="Transform2A_Avlbl"><service guid="Xslt" version="4.0" /><config-file name="Transform2A_Avlbl.xml" /><configuration><![CDATA[<?xml version="1.0" encoding="UTF-8"?><TrGatewayConfigurations><BCConfigurations><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.bc.trgateway.model.dmi.bcdk.BCDKConfigurationInfo"> 
  <void property="JCAAdapterConfig"> 
   <string>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;ESBAdapterConfigurations&gt;&lt;ConnectionLess&gt;true&lt;/ConnectionLess&gt;&lt;isConfigurationRequired&gt;true&lt;/isConfigurationRequired&gt;&lt;isLicensed&gt;false&lt;/isLicensed&gt;&lt;Inbound&gt;false&lt;/Inbound&gt;&lt;AdapterInstanceProperties&gt;&lt;![CDATA[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; 
&lt;java version=&quot;1.5.0_05&quot; class=&quot;java.beans.XMLDecoder&quot;&gt; 
 &lt;object class=&quot;fiorano.esb.adapter.cfg.ESBAdapterInstanceProperties&quot;&gt; 
  &lt;void property=&quot;domain&quot;&gt; 
   &lt;string&gt;BCConfigPropertySheet&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;instanceName&quot;&gt; 
   &lt;string&gt;Transform2A_Avlbl&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;logCategories&quot;&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;XsltInteractionSpec&lt;/string&gt; 
    &lt;object class=&quot;fiorano.esb.adapter.cfg.LogCategory&quot;&gt; 
     &lt;void property=&quot;loggerDescription&quot;&gt; 
      &lt;string&gt;XsltInteractionSpec&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerDisplayName&quot;&gt; 
      &lt;string&gt;XsltInteractionSpec&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerLevel&quot;&gt; 
      &lt;string&gt;SEVERE&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerName&quot;&gt; 
      &lt;string&gt;com.fiorano.adapter.jca.xslt.cci.XsltInteractionSpec&lt;/string&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;XsltInteraction&lt;/string&gt; 
    &lt;object class=&quot;fiorano.esb.adapter.cfg.LogCategory&quot;&gt; 
     &lt;void property=&quot;loggerDescription&quot;&gt; 
      &lt;string&gt;XsltInteraction&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerDisplayName&quot;&gt; 
      &lt;string&gt;XsltInteraction&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerLevel&quot;&gt; 
      &lt;string&gt;SEVERE&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerName&quot;&gt; 
      &lt;string&gt;com.fiorano.adapter.jca.xslt.cci.XsltInteraction&lt;/string&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;XsltManagedConnectionFactory&lt;/string&gt; 
    &lt;object class=&quot;fiorano.esb.adapter.cfg.LogCategory&quot;&gt; 
     &lt;void property=&quot;loggerDescription&quot;&gt; 
      &lt;string&gt;XsltManagedConnectionFactory&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerDisplayName&quot;&gt; 
      &lt;string&gt;XsltManagedConnectionFactory&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerLevel&quot;&gt; 
      &lt;string&gt;SEVERE&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerName&quot;&gt; 
      &lt;string&gt;com.fiorano.adapter.jca.xslt.spi.outbound.XsltManagedConnectionFactory&lt;/string&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;state&quot;&gt; 
   &lt;int&gt;8&lt;/int&gt; 
  &lt;/void&gt; 
 &lt;/object&gt; 
&lt;/java&gt; 
]]&gt;&lt;/AdapterInstanceProperties&gt;&lt;ConfigurationObjects&gt;&lt;ConfigurationObject&gt;&lt;![CDATA[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; 
&lt;java version=&quot;1.5.0_05&quot; class=&quot;java.beans.XMLDecoder&quot;&gt; 
 &lt;object class=&quot;fiorano.esb.adapter.cfg.ConfigurationObject&quot;&gt; 
  &lt;void property=&quot;beanClassName&quot;&gt; 
   &lt;class&gt;com.fiorano.adapter.jca.xslt.spi.outbound.XsltManagedConnectionFactory&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;configParams&quot;&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsReconnection&lt;/string&gt; 
    &lt;boolean&gt;false&lt;/boolean&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;description&quot;&gt; 
   &lt;string&gt;Xslt Connection&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;icon&quot;&gt; 
   &lt;string&gt;cf.gif&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;implClassName&quot;&gt; 
   &lt;class&gt;com.fiorano.adapter.jca.xslt.spi.outbound.XsltManagedConnectionFactory&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;name&quot;&gt; 
   &lt;string&gt;Xslt Connection&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;type&quot;&gt; 
   &lt;string&gt;javax.resource.spi.ManagedConnectionFactory&lt;/string&gt; 
  &lt;/void&gt; 
 &lt;/object&gt; 
&lt;/java&gt; 
]]&gt;&lt;/ConfigurationObject&gt;&lt;ConfigurationObject&gt;&lt;![CDATA[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; 
&lt;java version=&quot;1.5.0_05&quot; class=&quot;java.beans.XMLDecoder&quot;&gt; 
 &lt;object class=&quot;fiorano.esb.adapter.cfg.ConfigurationObject&quot;&gt; 
  &lt;void property=&quot;beanClassName&quot;&gt; 
   &lt;class&gt;com.fiorano.adapter.jca.xslt.cci.XsltInteractionSpec&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;beanObject&quot;&gt; 
   &lt;void property=&quot;XSL&quot;&gt; 
    &lt;string&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;xsl:stylesheet version=&amp;quot;1.0&amp;quot; xmlns:xsl=&amp;quot;http://www.w3.org/1999/XSL/Transform&amp;quot; xmlns:java=&amp;quot;http://xml.apache.org/xslt/java&amp;quot; xmlns:datetime=&amp;quot;http://exslt.org/dates-and-times&amp;quot; xmlns:set=&amp;quot;http://exslt.org/sets&amp;quot; xmlns:math=&amp;quot;http://exslt.org/math&amp;quot; exclude-result-prefixes=&amp;quot;java&amp;quot; xmlns:lxslt=&amp;quot;http://xml.apache.org/xslt&amp;quot; xmlns:xalan=&amp;quot;http://xml.apache.org/xslt&amp;quot; xmlns:ns3=&amp;quot;http://schemas.xmlsoap.org/soap/encoding/&amp;quot; xmlns:ns2=&amp;quot;http://localhost:1880/bcwsgateway/services/SupplierA_WS/getHotelAvailability/Input&amp;quot; xmlns:ns1=&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot; xmlns:ns0=&amp;quot;http://hospitality.com/service/&amp;quot; xmlns:dateConversion=&amp;quot;ext1&amp;quot; xmlns:myext=&amp;quot;ext2&amp;quot; xmlns:strings=&amp;quot;ext3&amp;quot; extension-element-prefixes=&amp;quot;datetime set math dateConversion myext strings&amp;quot;&amp;gt;
  &amp;lt;xsl:output method=&amp;quot;xml&amp;quot; indent=&amp;quot;yes&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; xalan:indent-amount=&amp;quot;2&amp;quot; omit-xml-declaration=&amp;quot;no&amp;quot;&amp;gt;&amp;lt;/xsl:output&amp;gt;
  &amp;lt;xsl:template match=&amp;quot;/&amp;quot;&amp;gt;
    &amp;lt;ns2:Envelope&amp;gt;
      &amp;lt;ns2:Body&amp;gt;
        &amp;lt;ns2:getHotelAvailability&amp;gt;
          &amp;lt;in0&amp;gt;
            &amp;lt;xsl:value-of select=&amp;quot;document(&amp;apos;Input2&amp;apos;)/ns0:PropertySegment/@ChainCode&amp;quot;&amp;gt;&amp;lt;/xsl:value-of&amp;gt;
          &amp;lt;/in0&amp;gt;
        &amp;lt;/ns2:getHotelAvailability&amp;gt;
      &amp;lt;/ns2:Body&amp;gt;
    &amp;lt;/ns2:Envelope&amp;gt;
  &amp;lt;/xsl:template&amp;gt;
&amp;lt;/xsl:stylesheet&amp;gt;&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;errorActionsMap&quot;&gt; 
    &lt;object class=&quot;fiorano.esb.adapter.jca.error.ErrorActionsMap&quot;&gt; 
     &lt;void property=&quot;errorActionsMap&quot;&gt; 
      &lt;void method=&quot;put&quot;&gt; 
       &lt;object class=&quot;fiorano.esb.adapter.jca.error.Error&quot;&gt; 
        &lt;void property=&quot;errorID&quot;&gt; 
         &lt;int&gt;2&lt;/int&gt; 
        &lt;/void&gt; 
       &lt;/object&gt; 
       &lt;object class=&quot;java.util.ArrayList&quot;&gt; 
        &lt;void method=&quot;add&quot;&gt; 
         &lt;object class=&quot;fiorano.esb.adapter.jca.error.RetryErrorAction&quot;&gt; 
          &lt;void property=&quot;errorActionID&quot;&gt; 
           &lt;int&gt;1&lt;/int&gt; 
          &lt;/void&gt; 
         &lt;/object&gt; 
        &lt;/void&gt; 
        &lt;void method=&quot;add&quot;&gt; 
         &lt;object class=&quot;fiorano.esb.adapter.jca.error.ErrorAction&quot;&gt; 
          &lt;void property=&quot;errorActionID&quot;&gt; 
           &lt;int&gt;3&lt;/int&gt; 
          &lt;/void&gt; 
         &lt;/object&gt; 
        &lt;/void&gt; 
       &lt;/object&gt; 
      &lt;/void&gt; 
      &lt;void method=&quot;put&quot;&gt; 
       &lt;object class=&quot;fiorano.esb.adapter.jca.error.Error&quot;&gt; 
        &lt;void property=&quot;errorID&quot;&gt; 
         &lt;int&gt;0&lt;/int&gt; 
        &lt;/void&gt; 
       &lt;/object&gt; 
       &lt;object class=&quot;java.util.ArrayList&quot;/&gt; 
      &lt;/void&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;esbDefInPort&quot;&gt; 
    &lt;object class=&quot;fiorano.esb.record.ESBRecordDefinition&quot;&gt; 
     &lt;void property=&quot;importedStructures&quot;&gt; 
      &lt;object class=&quot;java.util.Hashtable&quot;/&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;rootElementName&quot;&gt; 
      &lt;string&gt;PropertySegment&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;structure&quot;&gt; 
      &lt;string&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;xsd:schema xmlns=&amp;quot;http://hospitality.com/service/&amp;quot; xmlns:xsd=&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot; targetNamespace=&amp;quot;http://hospitality.com/service/&amp;quot;&amp;gt;
    &amp;lt;xsd:element name=&amp;quot;GuestCount&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;Count&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
    &amp;lt;xsd:element name=&amp;quot;GuestCounts&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:sequence&amp;gt;
                &amp;lt;xsd:element ref=&amp;quot;GuestCount&amp;quot;/&amp;gt;
            &amp;lt;/xsd:sequence&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;IsPerRoom&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
    
    &amp;lt;xsd:element name=&amp;quot;PropertySegment&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:sequence&amp;gt;
                &amp;lt;xsd:element ref=&amp;quot;StayDateRange&amp;quot;/&amp;gt;
                &amp;lt;xsd:element ref=&amp;quot;RoomStayCandidates&amp;quot;/&amp;gt;
            &amp;lt;/xsd:sequence&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;ChainCode&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;HotelCode&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;SystemID&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
    
    &amp;lt;xsd:element name=&amp;quot;RoomStayCandidate&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:sequence&amp;gt;
                &amp;lt;xsd:element ref=&amp;quot;GuestCounts&amp;quot;/&amp;gt;
            &amp;lt;/xsd:sequence&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
    &amp;lt;xsd:element name=&amp;quot;RoomStayCandidates&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:sequence&amp;gt;
                &amp;lt;xsd:element ref=&amp;quot;RoomStayCandidate&amp;quot;/&amp;gt;
            &amp;lt;/xsd:sequence&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
    &amp;lt;xsd:element name=&amp;quot;StayDateRange&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;End&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;Start&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
&amp;lt;/xsd:schema&amp;gt;&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;targetNamespace&quot;&gt; 
      &lt;string&gt;http://hospitality.com/service/&lt;/string&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;esbDefOutPort&quot;&gt; 
    &lt;object class=&quot;fiorano.esb.record.ESBRecordDefinition&quot;&gt; 
     &lt;void property=&quot;importedStructures&quot;&gt; 
      &lt;object class=&quot;java.util.Hashtable&quot;/&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;rootElementName&quot;&gt; 
      &lt;string&gt;Envelope&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;structure&quot;&gt; 
      &lt;string&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;xsd:schema xmlns:impl=&amp;quot;http://localhost:1880/bcwsgateway/services/SupplierA_WS&amp;quot; xmlns:intf=&amp;quot;http://localhost:1880/bcwsgateway/services/SupplierA_WS&amp;quot; xmlns:wsdlsoap=&amp;quot;http://schemas.xmlsoap.org/wsdl/soap/&amp;quot; xmlns:apachesoap=&amp;quot;http://xml.apache.org/xml-soap&amp;quot; xmlns:soapenc=&amp;quot;http://schemas.xmlsoap.org/soap/encoding/&amp;quot; xmlns:xsd=&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot; xmlns:wsdl=&amp;quot;http://schemas.xmlsoap.org/wsdl/&amp;quot; xmlns:tns1=&amp;quot;http://DefaultNamespace&amp;quot; xmlns:ftns=&amp;quot;http://localhost:1880/bcwsgateway/services/SupplierA_WS/getHotelAvailability/Input&amp;quot; targetNamespace=&amp;quot;http://localhost:1880/bcwsgateway/services/SupplierA_WS/getHotelAvailability/Input&amp;quot;&amp;gt;
   &amp;lt;xsd:import namespace=&amp;quot;http://schemas.xmlsoap.org/soap/encoding/&amp;quot;/&amp;gt;
   &amp;lt;xsd:element name=&amp;quot;Envelope&amp;quot;&amp;gt;
      &amp;lt;xsd:complexType&amp;gt;
         &amp;lt;xsd:sequence&amp;gt;
            &amp;lt;xsd:element ref=&amp;quot;ftns:Header&amp;quot;/&amp;gt;
            &amp;lt;xsd:element ref=&amp;quot;ftns:Body&amp;quot;/&amp;gt;
         &amp;lt;/xsd:sequence&amp;gt;
      &amp;lt;/xsd:complexType&amp;gt;
   &amp;lt;/xsd:element&amp;gt;
   &amp;lt;xsd:element name=&amp;quot;Header&amp;quot;&amp;gt;
      &amp;lt;xsd:complexType&amp;gt;
         &amp;lt;xsd:sequence/&amp;gt;
      &amp;lt;/xsd:complexType&amp;gt;
   &amp;lt;/xsd:element&amp;gt;
   &amp;lt;xsd:element name=&amp;quot;Body&amp;quot;&amp;gt;
      &amp;lt;xsd:complexType&amp;gt;
         &amp;lt;xsd:sequence&amp;gt;
            &amp;lt;xsd:element ref=&amp;quot;ftns:getHotelAvailability&amp;quot;/&amp;gt;
         &amp;lt;/xsd:sequence&amp;gt;
      &amp;lt;/xsd:complexType&amp;gt;
   &amp;lt;/xsd:element&amp;gt;
   &amp;lt;xsd:element name=&amp;quot;getHotelAvailability&amp;quot;&amp;gt;
      &amp;lt;xsd:complexType&amp;gt;
         &amp;lt;xsd:sequence&amp;gt;
            &amp;lt;xsd:element name=&amp;quot;in0&amp;quot; type=&amp;quot;soapenc:string&amp;quot;/&amp;gt;
         &amp;lt;/xsd:sequence&amp;gt;
      &amp;lt;/xsd:complexType&amp;gt;
   &amp;lt;/xsd:element&amp;gt;
&amp;lt;/xsd:schema&amp;gt;&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;targetNamespace&quot;&gt; 
      &lt;string&gt;http://localhost:1880/bcwsgateway/services/SupplierA_WS/getHotelAvailability/Input&lt;/string&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;project&quot;&gt; 
    &lt;string&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;MapperProject version=&amp;quot;3.0.1&amp;quot; suppressEmptyItems=&amp;quot;false&amp;quot; convertor=&amp;quot;nameIndexed&amp;quot; separator=&amp;quot;,&amp;quot;&amp;gt;
  &amp;lt;XSLTEngine&amp;gt;Xalan&amp;lt;/XSLTEngine&amp;gt;
  &amp;lt;XSLTEncoding&amp;gt;UTF-8&amp;lt;/XSLTEncoding&amp;gt;
  &amp;lt;OutputEncoding&amp;gt;UTF-8&amp;lt;/OutputEncoding&amp;gt;
  &amp;lt;indent&amp;gt;true&amp;lt;/indent&amp;gt;
  &amp;lt;setDTD&amp;gt;false&amp;lt;/setDTD&amp;gt;
  &amp;lt;omit-xml-declaration&amp;gt;false&amp;lt;/omit-xml-declaration&amp;gt;
  &amp;lt;Comments&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/Comments&amp;gt;
  &amp;lt;InputStructure name=&amp;quot;Application-Context&amp;quot; mime=&amp;quot;dtd&amp;quot; rootName=&amp;quot;Context&amp;quot; duplicates=&amp;quot;&amp;quot;&amp;gt;&amp;lt;![CDATA[&amp;lt;!ELEMENT Context (#PCDATA)&amp;gt;]]&amp;gt;&amp;lt;/InputStructure&amp;gt;
  &amp;lt;InputStructure name=&amp;quot;Input2&amp;quot; mime=&amp;quot;xsd&amp;quot; rootName=&amp;quot;PropertySegment&amp;quot; namespace=&amp;quot;http://hospitality.com/service/&amp;quot; parser=&amp;quot;Xerces&amp;quot; duplicates=&amp;quot;&amp;quot;&amp;gt;&amp;lt;![CDATA[&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;xsd:schema xmlns=&amp;quot;http://hospitality.com/service/&amp;quot; xmlns:xsd=&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot; targetNamespace=&amp;quot;http://hospitality.com/service/&amp;quot;&amp;gt;
    &amp;lt;xsd:element name=&amp;quot;GuestCount&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;Count&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
    &amp;lt;xsd:element name=&amp;quot;GuestCounts&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:sequence&amp;gt;
                &amp;lt;xsd:element ref=&amp;quot;GuestCount&amp;quot;/&amp;gt;
            &amp;lt;/xsd:sequence&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;IsPerRoom&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
    
    &amp;lt;xsd:element name=&amp;quot;PropertySegment&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:sequence&amp;gt;
                &amp;lt;xsd:element ref=&amp;quot;StayDateRange&amp;quot;/&amp;gt;
                &amp;lt;xsd:element ref=&amp;quot;RoomStayCandidates&amp;quot;/&amp;gt;
            &amp;lt;/xsd:sequence&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;ChainCode&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;HotelCode&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;SystemID&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
    
    &amp;lt;xsd:element name=&amp;quot;RoomStayCandidate&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:sequence&amp;gt;
                &amp;lt;xsd:element ref=&amp;quot;GuestCounts&amp;quot;/&amp;gt;
            &amp;lt;/xsd:sequence&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
    &amp;lt;xsd:element name=&amp;quot;RoomStayCandidates&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:sequence&amp;gt;
                &amp;lt;xsd:element ref=&amp;quot;RoomStayCandidate&amp;quot;/&amp;gt;
            &amp;lt;/xsd:sequence&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
    &amp;lt;xsd:element name=&amp;quot;StayDateRange&amp;quot;&amp;gt;
        &amp;lt;xsd:complexType&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;End&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
            &amp;lt;xsd:attribute name=&amp;quot;Start&amp;quot; type=&amp;quot;xsd:string&amp;quot; use=&amp;quot;required&amp;quot;/&amp;gt;
        &amp;lt;/xsd:complexType&amp;gt;
    &amp;lt;/xsd:element&amp;gt;
&amp;lt;/xsd:schema&amp;gt;]]&amp;gt;&amp;lt;/InputStructure&amp;gt;
  &amp;lt;OutputStructure name=&amp;quot;OUT_PORT&amp;quot; mime=&amp;quot;xsd&amp;quot; rootName=&amp;quot;Envelope&amp;quot; namespace=&amp;quot;http://localhost:1880/bcwsgateway/services/SupplierA_WS/getHotelAvailability/Input&amp;quot; parser=&amp;quot;Xerces&amp;quot; duplicates=&amp;quot;&amp;quot;&amp;gt;&amp;lt;![CDATA[&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;xsd:schema xmlns:impl=&amp;quot;http://localhost:1880/bcwsgateway/services/SupplierA_WS&amp;quot; xmlns:intf=&amp;quot;http://localhost:1880/bcwsgateway/services/SupplierA_WS&amp;quot; xmlns:wsdlsoap=&amp;quot;http://schemas.xmlsoap.org/wsdl/soap/&amp;quot; xmlns:apachesoap=&amp;quot;http://xml.apache.org/xml-soap&amp;quot; xmlns:soapenc=&amp;quot;http://schemas.xmlsoap.org/soap/encoding/&amp;quot; xmlns:xsd=&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot; xmlns:wsdl=&amp;quot;http://schemas.xmlsoap.org/wsdl/&amp;quot; xmlns:tns1=&amp;quot;http://DefaultNamespace&amp;quot; xmlns:ftns=&amp;quot;http://localhost:1880/bcwsgateway/services/SupplierA_WS/getHotelAvailability/Input&amp;quot; targetNamespace=&amp;quot;http://localhost:1880/bcwsgateway/services/SupplierA_WS/getHotelAvailability/Input&amp;quot;&amp;gt;
   &amp;lt;xsd:import namespace=&amp;quot;http://schemas.xmlsoap.org/soap/encoding/&amp;quot;/&amp;gt;
   &amp;lt;xsd:element name=&amp;quot;Envelope&amp;quot;&amp;gt;
      &amp;lt;xsd:complexType&amp;gt;
         &amp;lt;xsd:sequence&amp;gt;
            &amp;lt;xsd:element ref=&amp;quot;ftns:Header&amp;quot;/&amp;gt;
            &amp;lt;xsd:element ref=&amp;quot;ftns:Body&amp;quot;/&amp;gt;
         &amp;lt;/xsd:sequence&amp;gt;
      &amp;lt;/xsd:complexType&amp;gt;
   &amp;lt;/xsd:element&amp;gt;
   &amp;lt;xsd:element name=&amp;quot;Header&amp;quot;&amp;gt;
      &amp;lt;xsd:complexType&amp;gt;
         &amp;lt;xsd:sequence/&amp;gt;
      &amp;lt;/xsd:complexType&amp;gt;
   &amp;lt;/xsd:element&amp;gt;
   &amp;lt;xsd:element name=&amp;quot;Body&amp;quot;&amp;gt;
      &amp;lt;xsd:complexType&amp;gt;
         &amp;lt;xsd:sequence&amp;gt;
            &amp;lt;xsd:element ref=&amp;quot;ftns:getHotelAvailability&amp;quot;/&amp;gt;
         &amp;lt;/xsd:sequence&amp;gt;
      &amp;lt;/xsd:complexType&amp;gt;
   &amp;lt;/xsd:element&amp;gt;
   &amp;lt;xsd:element name=&amp;quot;getHotelAvailability&amp;quot;&amp;gt;
      &amp;lt;xsd:complexType&amp;gt;
         &amp;lt;xsd:sequence&amp;gt;
            &amp;lt;xsd:element name=&amp;quot;in0&amp;quot; type=&amp;quot;soapenc:string&amp;quot;/&amp;gt;
         &amp;lt;/xsd:sequence&amp;gt;
      &amp;lt;/xsd:complexType&amp;gt;
   &amp;lt;/xsd:element&amp;gt;
&amp;lt;/xsd:schema&amp;gt;]]&amp;gt;&amp;lt;/OutputStructure&amp;gt;
  &amp;lt;Extensions&amp;gt;
    &amp;lt;Extension name=&amp;quot;dateConversion&amp;quot; language=&amp;quot;javascript&amp;quot;&amp;gt;
      &amp;lt;Script&amp;gt;&amp;lt;![CDATA[// ===================================================================
// You may *NOT* re-distribute this code in any way except through its
// use. That means, you can include it in your product, or your web
// site, or any other form where the code is actually being used. You
// may not put the plain javascript up on your site for download or
// include it in your javascript libraries for download. 
// If you wish to share this code with others, please just point them
// to the URL instead.
// Please DO NOT link directly to my .js files from your site. Copy
// the files to your server and use them there. Thank you.
// ===================================================================

// HISTORY
// ------------------------------------------------------------------
// March 11, 2003: Added parseDate() function
// March 11, 2003: Added &amp;quot;NNN&amp;quot; formatting option. Doesn&amp;apos;t match up
//                 perfectly with SimpleDateFormat formats, but 
//                 backwards-compatability was required.

// ------------------------------------------------------------------
// These functions use the same &amp;apos;format&amp;apos; strings as the 
// java.text.SimpleDateFormat class, with minor exceptions.
// The format string consists of the following abbreviations:
// 
// Field        | Full Form          | Short Form
// -------------+--------------------+-----------------------
// Year         | yyyy (4 digits)    | yy (2 digits), y (2 or 4 digits)
// Month        | MMM (name or abbr.)| MM (2 digits), M (1 or 2 digits)
//              | NNN (abbr.)        |
// Day of Month | dd (2 digits)      | d (1 or 2 digits)
// Day of Week  | EE (name)          | E (abbr)
// Hour (1-12)  | hh (2 digits)      | h (1 or 2 digits)
// Hour (0-23)  | HH (2 digits)      | H (1 or 2 digits)
// Hour (0-11)  | KK (2 digits)      | K (1 or 2 digits)
// Hour (1-24)  | kk (2 digits)      | k (1 or 2 digits)
// Minute       | mm (2 digits)      | m (1 or 2 digits)
// Second       | ss (2 digits)      | s (1 or 2 digits)
// AM/PM        | a                  |
//
// NOTE THE DIFFERENCE BETWEEN MM and mm! Month=MM, not mm!
// Examples:
//  &amp;quot;MMM d, y&amp;quot; matches: January 01, 2000
//                      Dec 1, 1900
//                      Nov 20, 00
//  &amp;quot;M/d/yy&amp;quot;   matches: 01/20/00
//                      9/2/00
//  &amp;quot;MMM dd, yyyy hh:mm:ssa&amp;quot; matches: &amp;quot;January 01, 2000 12:30:45AM&amp;quot;
// ------------------------------------------------------------------

var MONTH_NAMES=new Array(&amp;apos;January&amp;apos;,&amp;apos;February&amp;apos;,&amp;apos;March&amp;apos;,&amp;apos;April&amp;apos;,&amp;apos;May&amp;apos;,&amp;apos;June&amp;apos;,&amp;apos;July&amp;apos;,&amp;apos;August&amp;apos;,&amp;apos;September&amp;apos;,&amp;apos;October&amp;apos;,&amp;apos;November&amp;apos;,&amp;apos;December&amp;apos;,&amp;apos;Jan&amp;apos;,&amp;apos;Feb&amp;apos;,&amp;apos;Mar&amp;apos;,&amp;apos;Apr&amp;apos;,&amp;apos;May&amp;apos;,&amp;apos;Jun&amp;apos;,&amp;apos;Jul&amp;apos;,&amp;apos;Aug&amp;apos;,&amp;apos;Sep&amp;apos;,&amp;apos;Oct&amp;apos;,&amp;apos;Nov&amp;apos;,&amp;apos;Dec&amp;apos;);
var DAY_NAMES=new Array(&amp;apos;Sunday&amp;apos;,&amp;apos;Monday&amp;apos;,&amp;apos;Tuesday&amp;apos;,&amp;apos;Wednesday&amp;apos;,&amp;apos;Thursday&amp;apos;,&amp;apos;Friday&amp;apos;,&amp;apos;Saturday&amp;apos;,&amp;apos;Sun&amp;apos;,&amp;apos;Mon&amp;apos;,&amp;apos;Tue&amp;apos;,&amp;apos;Wed&amp;apos;,&amp;apos;Thu&amp;apos;,&amp;apos;Fri&amp;apos;,&amp;apos;Sat&amp;apos;);
function LZ(x) {return(x&amp;lt;0||x&amp;gt;9?&amp;quot;&amp;quot;:&amp;quot;0&amp;quot;)+x}

function convertDate(dateString, inFormat, outFormat)
{
    return formatDate(getDateFromFormat(dateString,inFormat),outFormat);
}

// ------------------------------------------------------------------
// isDate ( date_string, format_string )
// Returns true if date string matches format of format string and
// is a valid date. Else returns false.
// It is recommended that you trim whitespace around the value before
// passing it to this function, as whitespace is NOT ignored!
// ------------------------------------------------------------------
function isDate(val,format) {
    var date=getDateFromFormat(val,format);
    if (date==0) { return false; }
    return true;
    }

// -------------------------------------------------------------------
// compareDates(date1,date1format,date2,date2format)
//   Compare two date strings to see which is greater.
//   Returns:
//   1 if date1 is greater than date2
//   0 if date2 is greater than date1 of if they are the same
//  -1 if either of the dates is in an invalid format
// -------------------------------------------------------------------
function compareDates(date1,dateformat1,date2,dateformat2) {
    var d1=getDateFromFormat(date1,dateformat1);
    var d2=getDateFromFormat(date2,dateformat2);
    if (d1==0 || d2==0) {
        return -1;
        }
    else if (d1 &amp;gt; d2) {
        return 1;
        }
    return 0;
    }

// ------------------------------------------------------------------
// formatDate (date_object, format)
// Returns a date in the output format specified.
// The format string uses the same abbreviations as in getDateFromFormat()
// ------------------------------------------------------------------
function formatDate(date,format) {
    format=format+&amp;quot;&amp;quot;;
    var result=&amp;quot;&amp;quot;;
    var i_format=0;
    var c=&amp;quot;&amp;quot;;
    var token=&amp;quot;&amp;quot;;
    var y=date.getYear()+&amp;quot;&amp;quot;;
    var M=date.getMonth()+1;
    var d=date.getDate();
    var E=date.getDay();
    var H=date.getHours();
    var m=date.getMinutes();
    var s=date.getSeconds();
    var yyyy,yy,MMM,MM,dd,hh,h,mm,ss,ampm,HH,H,KK,K,kk,k;
    // Convert real date parts into formatted versions
    var value=new Object();
    if (y.length &amp;lt; 4) {y=&amp;quot;&amp;quot;+(y-0+1900);}
    value[&amp;quot;y&amp;quot;]=&amp;quot;&amp;quot;+y;
    value[&amp;quot;yyyy&amp;quot;]=y;
    value[&amp;quot;yy&amp;quot;]=y.substring(2,4);
    value[&amp;quot;M&amp;quot;]=M;
    value[&amp;quot;MM&amp;quot;]=LZ(M);
    value[&amp;quot;MMM&amp;quot;]=MONTH_NAMES[M-1];
    value[&amp;quot;NNN&amp;quot;]=MONTH_NAMES[M+11];
    value[&amp;quot;d&amp;quot;]=d;
    value[&amp;quot;dd&amp;quot;]=LZ(d);
    value[&amp;quot;E&amp;quot;]=DAY_NAMES[E+7];
    value[&amp;quot;EE&amp;quot;]=DAY_NAMES[E];
    value[&amp;quot;H&amp;quot;]=H;
    value[&amp;quot;HH&amp;quot;]=LZ(H);
    if (H==0){value[&amp;quot;h&amp;quot;]=12;}
    else if (H&amp;gt;12){value[&amp;quot;h&amp;quot;]=H-12;}
    else {value[&amp;quot;h&amp;quot;]=H;}
    value[&amp;quot;hh&amp;quot;]=LZ(value[&amp;quot;h&amp;quot;]);
    if (H&amp;gt;11){value[&amp;quot;K&amp;quot;]=H-12;} else {value[&amp;quot;K&amp;quot;]=H;}
    value[&amp;quot;k&amp;quot;]=H+1;
    value[&amp;quot;KK&amp;quot;]=LZ(value[&amp;quot;K&amp;quot;]);
    value[&amp;quot;kk&amp;quot;]=LZ(value[&amp;quot;k&amp;quot;]);
    if (H &amp;gt; 11) { value[&amp;quot;a&amp;quot;]=&amp;quot;PM&amp;quot;; }
    else { value[&amp;quot;a&amp;quot;]=&amp;quot;AM&amp;quot;; }
    value[&amp;quot;m&amp;quot;]=m;
    value[&amp;quot;mm&amp;quot;]=LZ(m);
    value[&amp;quot;s&amp;quot;]=s;
    value[&amp;quot;ss&amp;quot;]=LZ(s);
    while (i_format &amp;lt; format.length) {
        c=format.charAt(i_format);
        token=&amp;quot;&amp;quot;;
        while ((format.charAt(i_format)==c) &amp;amp;&amp;amp; (i_format &amp;lt; format.length)) {
            token += format.charAt(i_format++);
            }
        if (value[token] != null) { result=result + value[token]; }
        else { result=result + token; }
        }
    return result;
    }
    
// ------------------------------------------------------------------
// Utility functions for parsing in getDateFromFormat()
// ------------------------------------------------------------------
function _isInteger(val) {
    var digits=&amp;quot;1234567890&amp;quot;;
    for (var i=0; i &amp;lt; val.length; i++) {
        if (digits.indexOf(val.charAt(i))==-1) { return false; }
        }
    return true;
    }
function _getInt(str,i,minlength,maxlength) {
    for (var x=maxlength; x&amp;gt;=minlength; x--) {
        var token=str.substring(i,i+x);
        if (token.length &amp;lt; minlength) { return null; }
        if (_isInteger(token)) { return token; }
        }
    return null;
    }
    
// ------------------------------------------------------------------
// getDateFromFormat( date_string , format_string )
//
// This function takes a date string and a format string. It matches
// If the date string matches the format string, it returns the 
// getTime() of the date. If it does not match, it returns 0.
// ------------------------------------------------------------------
function getDateFromFormat(val,format) {
    val=val+&amp;quot;&amp;quot;;
    format=format+&amp;quot;&amp;quot;;
    var i_val=0;
    var i_format=0;
    var c=&amp;quot;&amp;quot;;
    var token=&amp;quot;&amp;quot;;
    var token2=&amp;quot;&amp;quot;;
    var x,y;
    var now=new Date();
    var year=now.getYear();
    var month=now.getMonth()+1;
    var date=1;
    var hh=now.getHours();
    var mm=now.getMinutes();
    var ss=now.getSeconds();
    var ampm=&amp;quot;&amp;quot;;
    
    while (i_format &amp;lt; format.length) {
        // Get next token from format string
        c=format.charAt(i_format);
        token=&amp;quot;&amp;quot;;
        while ((format.charAt(i_format)==c) &amp;amp;&amp;amp; (i_format &amp;lt; format.length)) {
            token += format.charAt(i_format++);
            }
        // Extract contents of value based on format token
        if (token==&amp;quot;yyyy&amp;quot; || token==&amp;quot;yy&amp;quot; || token==&amp;quot;y&amp;quot;) {
            if (token==&amp;quot;yyyy&amp;quot;) { x=4;y=4; }
            if (token==&amp;quot;yy&amp;quot;)   { x=2;y=2; }
            if (token==&amp;quot;y&amp;quot;)    { x=2;y=4; }
            year=_getInt(val,i_val,x,y);
            if (year==null) { return 0; }
            i_val += year.length;
            if (year.length==2) {
                if (year &amp;gt; 70) { year=1900+(year-0); }
                else { year=2000+(year-0); }
                }
            }
        else if (token==&amp;quot;MMM&amp;quot;||token==&amp;quot;NNN&amp;quot;){
            month=0;
            for (var i=0; i&amp;lt;MONTH_NAMES.length; i++) {
                var month_name=MONTH_NAMES[i];
                if (val.substring(i_val,i_val+month_name.length).toLowerCase()==month_name.toLowerCase()) {
                    if (token==&amp;quot;MMM&amp;quot;||(token==&amp;quot;NNN&amp;quot;&amp;amp;&amp;amp;i&amp;gt;11)) {
                        month=i+1;
                        if (month&amp;gt;12) { month -= 12; }
                        i_val += month_name.length;
                        break;
                        }
                    }
                }
            if ((month &amp;lt; 1)||(month&amp;gt;12)){return 0;}
            }
        else if (token==&amp;quot;EE&amp;quot;||token==&amp;quot;E&amp;quot;){
            for (var i=0; i&amp;lt;DAY_NAMES.length; i++) {
                var day_name=DAY_NAMES[i];
                if (val.substring(i_val,i_val+day_name.length).toLowerCase()==day_name.toLowerCase()) {
                    i_val += day_name.length;
                    break;
                    }
                }
            }
        else if (token==&amp;quot;MM&amp;quot;||token==&amp;quot;M&amp;quot;) {
            month=_getInt(val,i_val,token.length,2);
            if(month==null||(month&amp;lt;1)||(month&amp;gt;12)){return 0;}
            i_val+=month.length;}
        else if (token==&amp;quot;dd&amp;quot;||token==&amp;quot;d&amp;quot;) {
            date=_getInt(val,i_val,token.length,2);
            if(date==null||(date&amp;lt;1)||(date&amp;gt;31)){return 0;}
            i_val+=date.length;}
        else if (token==&amp;quot;hh&amp;quot;||token==&amp;quot;h&amp;quot;) {
            hh=_getInt(val,i_val,token.length,2);
            if(hh==null||(hh&amp;lt;1)||(hh&amp;gt;12)){return 0;}
            i_val+=hh.length;}
        else if (token==&amp;quot;HH&amp;quot;||token==&amp;quot;H&amp;quot;) {
            hh=_getInt(val,i_val,token.length,2);
            if(hh==null||(hh&amp;lt;0)||(hh&amp;gt;23)){return 0;}
            i_val+=hh.length;}
        else if (token==&amp;quot;KK&amp;quot;||token==&amp;quot;K&amp;quot;) {
            hh=_getInt(val,i_val,token.length,2);
            if(hh==null||(hh&amp;lt;0)||(hh&amp;gt;11)){return 0;}
            i_val+=hh.length;}
        else if (token==&amp;quot;kk&amp;quot;||token==&amp;quot;k&amp;quot;) {
            hh=_getInt(val,i_val,token.length,2);
            if(hh==null||(hh&amp;lt;1)||(hh&amp;gt;24)){return 0;}
            i_val+=hh.length;hh--;}
        else if (token==&amp;quot;mm&amp;quot;||token==&amp;quot;m&amp;quot;) {
            mm=_getInt(val,i_val,token.length,2);
            if(mm==null||(mm&amp;lt;0)||(mm&amp;gt;59)){return 0;}
            i_val+=mm.length;}
        else if (token==&amp;quot;ss&amp;quot;||token==&amp;quot;s&amp;quot;) {
            ss=_getInt(val,i_val,token.length,2);
            if(ss==null||(ss&amp;lt;0)||(ss&amp;gt;59)){return 0;}
            i_val+=ss.length;}
        else if (token==&amp;quot;a&amp;quot;) {
            if (val.substring(i_val,i_val+2).toLowerCase()==&amp;quot;am&amp;quot;) {ampm=&amp;quot;AM&amp;quot;;}
            else if (val.substring(i_val,i_val+2).toLowerCase()==&amp;quot;pm&amp;quot;) {ampm=&amp;quot;PM&amp;quot;;}
            else {return 0;}
            i_val+=2;}
        else {
            if (val.substring(i_val,i_val+token.length)!=token) {return 0;}
            else {i_val+=token.length;}
            }
        }
    // If there are any trailing characters left in the value, it doesn&amp;apos;t match
    if (i_val != val.length) { return 0; }
    // Is date valid for month?
    if (month==2) {
        // Check for leap year
        if ( ( (year%4==0)&amp;amp;&amp;amp;(year%100 != 0) ) || (year%400==0) ) { // leap year
            if (date &amp;gt; 29){ return 0; }
            }
        else { if (date &amp;gt; 28) { return 0; } }
        }
    if ((month==4)||(month==6)||(month==9)||(month==11)) {
        if (date &amp;gt; 30) { return 0; }
        }
    // Correct hours value
    if (hh&amp;lt;12 &amp;amp;&amp;amp; ampm==&amp;quot;PM&amp;quot;) { hh=hh-0+12; }
    else if (hh&amp;gt;11 &amp;amp;&amp;amp; ampm==&amp;quot;AM&amp;quot;) { hh-=12; }
    var newdate=new Date(year,month-1,date,hh,mm,ss);
    return newdate;
    }

// ------------------------------------------------------------------
// parseDate( date_string [, prefer_euro_format] )
//
// This function takes a date string and tries to match it to a
// number of possible date formats to get the value. It will try to
// match against the following international formats, in this order:
// y-M-d   MMM d, y   MMM d,y   y-MMM-d   d-MMM-y  MMM d
// M/d/y   M-d-y      M.d.y     MMM-d     M/d      M-d
// d/M/y   d-M-y      d.M.y     d-MMM     d/M      d-M
// A second argument may be passed to instruct the method to search
// for formats like d/M/y (european format) before M/d/y (American).
// Returns a Date object or null if no patterns match.
// ------------------------------------------------------------------
function parseDate(val) {
    var preferEuro=(arguments.length==2)?arguments[1]:false;
    generalFormats=new Array(&amp;apos;y-M-d&amp;apos;,&amp;apos;MMM d, y&amp;apos;,&amp;apos;MMM d,y&amp;apos;,&amp;apos;y-MMM-d&amp;apos;,&amp;apos;d-MMM-y&amp;apos;,&amp;apos;MMM d&amp;apos;);
    monthFirst=new Array(&amp;apos;M/d/y&amp;apos;,&amp;apos;M-d-y&amp;apos;,&amp;apos;M.d.y&amp;apos;,&amp;apos;MMM-d&amp;apos;,&amp;apos;M/d&amp;apos;,&amp;apos;M-d&amp;apos;);
    dateFirst =new Array(&amp;apos;d/M/y&amp;apos;,&amp;apos;d-M-y&amp;apos;,&amp;apos;d.M.y&amp;apos;,&amp;apos;d-MMM&amp;apos;,&amp;apos;d/M&amp;apos;,&amp;apos;d-M&amp;apos;);
    var checkList=new Array(&amp;apos;generalFormats&amp;apos;,preferEuro?&amp;apos;dateFirst&amp;apos;:&amp;apos;monthFirst&amp;apos;,preferEuro?&amp;apos;monthFirst&amp;apos;:&amp;apos;dateFirst&amp;apos;);
    var d=null;
    for (var i=0; i&amp;lt;checkList.length; i++) {
        var l=window[checkList[i]];
        for (var j=0; j&amp;lt;l.length; j++) {
            d=getDateFromFormat(val,l[j]);
            if (d&amp;gt;0) { return new Date(d); }
            }
        }
    return null;
}]]&amp;gt;&amp;lt;/Script&amp;gt;
      &amp;lt;Function name=&amp;quot;convertDate&amp;quot; return=&amp;quot;String&amp;quot;&amp;gt;
        &amp;lt;Argument name=&amp;quot;dateString&amp;quot; datatype=&amp;quot;String&amp;quot;&amp;gt;&amp;lt;/Argument&amp;gt;
        &amp;lt;Argument name=&amp;quot;inFormat&amp;quot; datatype=&amp;quot;String&amp;quot;&amp;gt;&amp;lt;/Argument&amp;gt;
        &amp;lt;Argument name=&amp;quot;outFormat&amp;quot; datatype=&amp;quot;String&amp;quot;&amp;gt;&amp;lt;/Argument&amp;gt;
      &amp;lt;/Function&amp;gt;
    &amp;lt;/Extension&amp;gt;
    &amp;lt;Extension name=&amp;quot;myext&amp;quot; language=&amp;quot;javascript&amp;quot;&amp;gt;
      &amp;lt;Script&amp;gt;&amp;lt;![CDATA[function compute(expr){
    return eval(expr);
}

function nextMillenium(){
    d = new Date()    //today&amp;apos;s date
    mill=new Date(3000, 00, 01, 00, 00, 00)    //Next millennium start date
    diff = mill-d    //difference in milliseconds
    mtg = new String(diff/86400000)    //calculate days and convert to string
    point=mtg.indexOf(&amp;quot;.&amp;quot;)    //find the decimal point
    days=mtg.substring(0,point)    //get just the whole days
    return &amp;quot;There are only &amp;quot; + days + &amp;quot; days remaining to the start of the next millennium.&amp;quot;; 
}

function replace(input, pattern, flags, str){
    return input.replace(new RegExp(pattern, flags), str);
}]]&amp;gt;&amp;lt;/Script&amp;gt;
      &amp;lt;Function name=&amp;quot;compute&amp;quot; return=&amp;quot;String&amp;quot;&amp;gt;
        &amp;lt;Argument name=&amp;quot;expr&amp;quot; datatype=&amp;quot;String&amp;quot;&amp;gt;&amp;lt;/Argument&amp;gt;
      &amp;lt;/Function&amp;gt;
      &amp;lt;Function name=&amp;quot;nextMillenium&amp;quot; return=&amp;quot;String&amp;quot;&amp;gt;&amp;lt;/Function&amp;gt;
      &amp;lt;Function name=&amp;quot;replace&amp;quot; return=&amp;quot;String&amp;quot;&amp;gt;
        &amp;lt;Argument name=&amp;quot;input&amp;quot; datatype=&amp;quot;String&amp;quot;&amp;gt;&amp;lt;/Argument&amp;gt;
        &amp;lt;Argument name=&amp;quot;pattern&amp;quot; datatype=&amp;quot;String&amp;quot;&amp;gt;&amp;lt;/Argument&amp;gt;
        &amp;lt;Argument name=&amp;quot;flags&amp;quot; datatype=&amp;quot;String&amp;quot;&amp;gt;&amp;lt;/Argument&amp;gt;
        &amp;lt;Argument name=&amp;quot;str&amp;quot; datatype=&amp;quot;String&amp;quot;&amp;gt;&amp;lt;/Argument&amp;gt;
      &amp;lt;/Function&amp;gt;
    &amp;lt;/Extension&amp;gt;
    &amp;lt;Extension name=&amp;quot;strings&amp;quot; language=&amp;quot;javascript&amp;quot;&amp;gt;
      &amp;lt;Script&amp;gt;&amp;lt;![CDATA[function multiConcat(ctx, delim){
    var ipString = &amp;quot;&amp;quot;;
    if (ctx.length){
    for (var i=0; i &amp;lt; ctx.getLength(); i++){
        ctxN  = ctx.item(i);
        if (ctxN.nodeType == 1){
            ipString +=  _wander(ctxN, delim);
        }
        if (ctxN.nodeType == 2){
            ipString += ctxN.nodeValue;
        }
    }
    }else{
    return &amp;apos;&amp;apos;;
    }
    return ipString.length&amp;gt;1 ? ipString.substring(delim.length) : ipString;
}
function   _wander(ctx, delim){
    var retStr = &amp;quot;&amp;quot;;
    var nodelist = ctx.childNodes;
    
    for (var i=0; i &amp;lt; ctx.childNodes.length; i++){
        
        ctxN = nodelist.item(i);//ctx.childNodes[i];
        
        switch(ctxN.nodeType){
            case 1:
                retStr +=   _wander(ctxN);
                break;
            case 3:
                retStr += delim +ctxN.nodeValue;
                break;
            default:
                break;
        }
    }
    return retStr;
}]]&amp;gt;&amp;lt;/Script&amp;gt;
      &amp;lt;Function name=&amp;quot;multiConcat&amp;quot; return=&amp;quot;String&amp;quot;&amp;gt;
        &amp;lt;Argument name=&amp;quot;ctx&amp;quot; datatype=&amp;quot;Unknown&amp;quot;&amp;gt;&amp;lt;/Argument&amp;gt;
        &amp;lt;Argument name=&amp;quot;delim&amp;quot; datatype=&amp;quot;String&amp;quot;&amp;gt;&amp;lt;/Argument&amp;gt;
      &amp;lt;/Function&amp;gt;
    &amp;lt;/Extension&amp;gt;
  &amp;lt;/Extensions&amp;gt;
  &amp;lt;Mappings&amp;gt;
    &amp;lt;GraphModel outputNode=&amp;quot;OUT_PORT:0,Envelope:0,Body:0,getHotelAvailability:0,in0:0&amp;quot; x=&amp;quot;-1&amp;quot; y=&amp;quot;-1&amp;quot; inputPins=&amp;quot;1&amp;quot;&amp;gt;
      &amp;lt;TreeGraphNode inputNode=&amp;quot;Input2:0,PropertySegment:0,ChainCode:0&amp;quot; x=&amp;quot;-1&amp;quot; y=&amp;quot;-1&amp;quot;&amp;gt;
        &amp;lt;InputPins&amp;gt;1st&amp;lt;/InputPins&amp;gt;
        &amp;lt;OutputPins&amp;gt;1st&amp;lt;/OutputPins&amp;gt;
      &amp;lt;/TreeGraphNode&amp;gt;
      &amp;lt;Link inputID=&amp;quot;0&amp;quot; inputIndex=&amp;quot;0&amp;quot; outputID=&amp;quot;1&amp;quot; outputIndex=&amp;quot;0&amp;quot;&amp;gt;&amp;lt;/Link&amp;gt;
    &amp;lt;/GraphModel&amp;gt;
  &amp;lt;/Mappings&amp;gt;
&amp;lt;/MapperProject&amp;gt;&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;state&quot;&gt; 
    &lt;int&gt;6&lt;/int&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;targetNamespace&quot;&gt; 
    &lt;string&gt;http://www.fiorano.com/fesb/activity/Transform2A_Avlbl&lt;/string&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;category&quot;&gt; 
   &lt;string&gt;Transformation&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;configParams&quot;&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;outPort&lt;/string&gt; 
    &lt;string&gt;OUT_PORT&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsReconnection&lt;/string&gt; 
    &lt;boolean&gt;false&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsScheduling&lt;/string&gt; 
    &lt;boolean&gt;true&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;enableScheduling&lt;/string&gt; 
    &lt;boolean&gt;false&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;inPort&lt;/string&gt; 
    &lt;string&gt;IN_PORT&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsStudio&lt;/string&gt; 
    &lt;boolean&gt;false&lt;/boolean&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;description&quot;&gt; 
   &lt;string&gt;Transforms input XML based on Mappings defined and generates an output XML&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;icon&quot;&gt; 
   &lt;string&gt;xslt.png&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;implClassName&quot;&gt; 
   &lt;class&gt;com.fiorano.adapter.jca.xslt.cci.XsltInteractionSpec&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;name&quot;&gt; 
   &lt;string&gt;XSLT&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;type&quot;&gt; 
   &lt;string&gt;javax.resource.cci.InteractionSpec&lt;/string&gt; 
  &lt;/void&gt; 
 &lt;/object&gt; 
&lt;/java&gt; 
]]&gt;&lt;/ConfigurationObject&gt;&lt;/ConfigurationObjects&gt;&lt;/ESBAdapterConfigurations&gt;</string> 
  </void> 
 </object> 
</java> 
]]]]><![CDATA[></BCConfigurations><TransportConfigurations><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.bc.trgateway.model.dmi.tr.TrConfigurationInfo"/> 
</java> 
]]]]><![CDATA[></TransportConfigurations><ErrorConfigurations><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.bc.trgateway.model.dmi.error.ErrorConfigurationInfo"> 
  <void property="errorActionsMap"> 
   <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorActionsMap"> 
    <void property="errorActionsMap"> 
     <void method="put"> 
      <object class="fiorano.esb.adapter.jca.error.Error"> 
       <void property="errorID"> 
        <int>2</int> 
       </void> 
      </object> 
      <object class="java.util.ArrayList"> 
       <void method="add"> 
        <object class="fiorano.esb.adapter.jca.error.RetryErrorAction"> 
         <void property="errorActionID"> 
          <int>1</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="fiorano.esb.adapter.jca.error.ErrorAction"> 
         <void property="errorActionID"> 
          <int>3</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="active"> 
          <boolean>true</boolean> 
         </void> 
         <void property="errorActionID"> 
          <int>11</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="errorActionID"> 
          <int>12</int> 
         </void> 
        </object> 
       </void> 
      </object> 
     </void> 
     <void method="put"> 
      <object class="fiorano.esb.adapter.jca.error.Error"> 
       <void property="errorID"> 
        <int>0</int> 
       </void> 
      </object> 
      <object class="java.util.ArrayList"> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="active"> 
          <boolean>true</boolean> 
         </void> 
         <void property="errorActionID"> 
          <int>11</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="active"> 
          <boolean>true</boolean> 
         </void> 
         <void property="errorActionID"> 
          <int>2</int> 
         </void> 
        </object> 
       </void> 
      </object> 
     </void> 
    </void> 
   </object> 
  </void> 
 </object> 
</java> 
]]]]><![CDATA[></ErrorConfigurations><SchedulerConfigurations><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.bc.trgateway.model.dmi.scheduler.SchedulerConfigurationInfo"> 
  <void property="startDate"> 
   <object class="java.util.Date"> 
    <long>1136875442281</long> 
   </object> 
  </void> 
  <void property="timeOffset"> 
   <string>+00:00</string> 
  </void> 
  <void property="unit"> 
   <string>seconds</string> 
  </void> 
 </object> 
</java> 
]]]]><![CDATA[></SchedulerConfigurations></TrGatewayConfigurations>]]></configuration><configuration-properties /><deployment nodes="fps" /><execution><debug enabled="false" port="5000" /><launch first-available-node="false" /></execution><inputport-instances><inputport-instance name="IN_PORT"><schema root="{http://hospitality.com/service/}PropertySegment"><content><![CDATA[${Transform2B_Book.IN_PORT}]]></content></schema><jms><destination /><subscriber><transaction enabled="true" /><subscription durable="false" name="null" /></subscriber></jms></inputport-instance></inputport-instances><outputport-instances><outputport-instance name="OUT_PORT"><schema root="{http://localhost:1880/bcwsgateway/services/SupplierA_WS/getHotelAvailability/Input}Envelope"><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:impl="http://localhost:1880/bcwsgateway/services/SupplierA_WS" xmlns:intf="http://localhost:1880/bcwsgateway/services/SupplierA_WS" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:apachesoap="http://xml.apache.org/xml-soap" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns1="http://DefaultNamespace" xmlns:ftns="http://localhost:1880/bcwsgateway/services/SupplierA_WS/getHotelAvailability/Input" targetNamespace="http://localhost:1880/bcwsgateway/services/SupplierA_WS/getHotelAvailability/Input">
   <xsd:import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
   <xsd:element name="Envelope">
      <xsd:complexType>
         <xsd:sequence>
            <xsd:element ref="ftns:Header"/>
            <xsd:element ref="ftns:Body"/>
         </xsd:sequence>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="Header">
      <xsd:complexType>
         <xsd:sequence/>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="Body">
      <xsd:complexType>
         <xsd:sequence>
            <xsd:element ref="ftns:getHotelAvailability"/>
         </xsd:sequence>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="getHotelAvailability">
      <xsd:complexType>
         <xsd:sequence>
            <xsd:element name="in0" type="soapenc:string"/>
         </xsd:sequence>
      </xsd:complexType>
   </xsd:element>
</xsd:schema>]]></content></schema><jms><destination /><publisher><messages priority="4" /></publisher></jms></outputport-instance><outputport-instance name="ON_EXCEPTION"><schema root="{http://www.fiorano.com/fesb/activity/fault}Error"><content><![CDATA[${ERROR_XSD}]]></content></schema><jms><destination /><publisher><messages priority="4" /></publisher></jms></outputport-instance></outputport-instances><logmanager logger="java.util.logging.FileHandler"><Param name="java.util.logging.FileHandler.limit">50000</Param><Param name="java.util.logging.FileHandler.dir">logs</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.dateformat">MM:dd:yyyy</Param><Param name="java.util.logging.FileHandler.count">4</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.includetimestamp">true</Param></logmanager><logmodules><logmodule name="com.fiorano.bc.trgateway" /><logmodule name="com.fiorano.adapter.jca.xslt.spi.outbound.XsltManagedConnectionFactory" /><logmodule name="com.fiorano.adapter.jca.xslt.cci.XsltInteraction" /><logmodule name="ERR_HANDLER" /><logmodule name="com.fiorano.adapter.jca.xslt.cci.XsltInteractionSpec" /><logmodule name="OUT_HANDLER" level="INFO" /></logmodules><runtime-arguments><runtime-argument name="JVM_PARAMS" mandatory="false" inmemory="false"><value>-DLOG_TO_STREAM=true</value></runtime-argument></runtime-arguments></inst><inst name="SupplierB_Get"><service guid="HTTPAdapters" version="4.0" /><config-file name="SupplierB_Get.xml" /><configuration><![CDATA[<?xml version="1.0" encoding="UTF-8"?><TrGatewayConfigurations><BCConfigurations><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.bc.trgateway.model.dmi.bcdk.BCDKConfigurationInfo"> 
  <void property="JCAAdapterConfig"> 
   <string>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;ESBAdapterConfigurations&gt;&lt;ConnectionLess&gt;false&lt;/ConnectionLess&gt;&lt;isConfigurationRequired&gt;true&lt;/isConfigurationRequired&gt;&lt;isLicensed&gt;true&lt;/isLicensed&gt;&lt;Inbound&gt;false&lt;/Inbound&gt;&lt;AdapterInstanceProperties&gt;&lt;![CDATA[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; 
&lt;java version=&quot;1.5.0_05&quot; class=&quot;java.beans.XMLDecoder&quot;&gt; 
 &lt;object class=&quot;fiorano.esb.adapter.cfg.ESBAdapterInstanceProperties&quot;&gt; 
  &lt;void property=&quot;domain&quot;&gt; 
   &lt;string&gt;BCConfigPropertySheet&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;instanceName&quot;&gt; 
   &lt;string&gt;Get_Available&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;logCategories&quot;&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;HTTPManagedConnectionFactory&lt;/string&gt; 
    &lt;object class=&quot;fiorano.esb.adapter.cfg.LogCategory&quot;&gt; 
     &lt;void property=&quot;loggerDescription&quot;&gt; 
      &lt;string&gt;HTTPManagedConnectionFactory&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerDisplayName&quot;&gt; 
      &lt;string&gt;HTTPManagedConnectionFactory&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerLevel&quot;&gt; 
      &lt;string&gt;SEVERE&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerName&quot;&gt; 
      &lt;string&gt;HTTPManagedConnectionFactory&lt;/string&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;HTTPInteraction&lt;/string&gt; 
    &lt;object class=&quot;fiorano.esb.adapter.cfg.LogCategory&quot;&gt; 
     &lt;void property=&quot;loggerDescription&quot;&gt; 
      &lt;string&gt;HTTPInteraction&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerDisplayName&quot;&gt; 
      &lt;string&gt;HTTPInteraction&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerLevel&quot;&gt; 
      &lt;string&gt;SEVERE&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerName&quot;&gt; 
      &lt;string&gt;HTTPInteraction&lt;/string&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;state&quot;&gt; 
   &lt;int&gt;8&lt;/int&gt; 
  &lt;/void&gt; 
 &lt;/object&gt; 
&lt;/java&gt; 
]]&gt;&lt;/AdapterInstanceProperties&gt;&lt;ConfigurationObjects&gt;&lt;ConfigurationObject&gt;&lt;![CDATA[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; 
&lt;java version=&quot;1.5.0_05&quot; class=&quot;java.beans.XMLDecoder&quot;&gt; 
 &lt;object class=&quot;fiorano.esb.adapter.cfg.ConfigurationObject&quot;&gt; 
  &lt;void property=&quot;beanClassName&quot;&gt; 
   &lt;class&gt;fiorano.esb.adapter.jca.cci.ESBConnectionSpec&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;beanObject&quot;&gt; 
   &lt;void property=&quot;MCFClassName&quot;&gt; 
    &lt;string&gt;com.fiorano.adapter.jca.http.spi.outbound.HTTPManagedConnectionFactory&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;connectionFactoryJNDIName&quot;&gt; 
    &lt;string&gt;HTTPAdapters&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;state&quot;&gt; 
    &lt;int&gt;8&lt;/int&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;implClassName&quot;&gt; 
   &lt;class&gt;fiorano.esb.adapter.jca.cci.ESBConnectionSpec&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;type&quot;&gt; 
   &lt;string&gt;javax.resource.cci.ConnectionSpec&lt;/string&gt; 
  &lt;/void&gt; 
 &lt;/object&gt; 
&lt;/java&gt; 
]]&gt;&lt;/ConfigurationObject&gt;&lt;ConfigurationObject&gt;&lt;![CDATA[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; 
&lt;java version=&quot;1.5.0_05&quot; class=&quot;java.beans.XMLDecoder&quot;&gt; 
 &lt;object class=&quot;fiorano.esb.adapter.cfg.ConfigurationObject&quot;&gt; 
  &lt;void property=&quot;beanClassName&quot;&gt; 
   &lt;class&gt;com.fiorano.adapter.jca.http.spi.outbound.HTTPManagedConnectionFactory&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;beanObject&quot;&gt; 
   &lt;void property=&quot;HTTPPort&quot;&gt; 
    &lt;int&gt;1880&lt;/int&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;JNDIName&quot;&gt; 
    &lt;string&gt;HTTPAdapters&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;state&quot;&gt; 
    &lt;int&gt;8&lt;/int&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;configParams&quot;&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsReconnection&lt;/string&gt; 
    &lt;boolean&gt;true&lt;/boolean&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;description&quot;&gt; 
   &lt;string&gt;HTTP&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;icon&quot;&gt; 
   &lt;string&gt;httpconnection.png&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;implClassName&quot;&gt; 
   &lt;class&gt;com.fiorano.adapter.jca.http.spi.outbound.HTTPManagedConnectionFactory&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;name&quot;&gt; 
   &lt;string&gt;HTTP&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;type&quot;&gt; 
   &lt;string&gt;javax.resource.spi.ManagedConnectionFactory&lt;/string&gt; 
  &lt;/void&gt; 
 &lt;/object&gt; 
&lt;/java&gt; 
]]&gt;&lt;/ConfigurationObject&gt;&lt;ConfigurationObject&gt;&lt;![CDATA[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; 
&lt;java version=&quot;1.5.0_05&quot; class=&quot;java.beans.XMLDecoder&quot;&gt; 
 &lt;object class=&quot;fiorano.esb.adapter.cfg.ConfigurationObject&quot;&gt; 
  &lt;void property=&quot;beanClassName&quot;&gt; 
   &lt;class&gt;com.fiorano.adapter.jca.http.cci.HTTPInteractionSpec&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;beanObject&quot;&gt; 
   &lt;void property=&quot;HTTPRequestProperty&quot;&gt; 
    &lt;void property=&quot;URI&quot;&gt; 
     &lt;string&gt;/SupplierB/HotelAvailability&lt;/string&gt; 
    &lt;/void&gt; 
    &lt;void property=&quot;contentEncoding&quot;&gt; 
     &lt;string&gt;&lt;/string&gt; 
    &lt;/void&gt; 
    &lt;void property=&quot;contentLength&quot;&gt; 
     &lt;string&gt;&lt;/string&gt; 
    &lt;/void&gt; 
    &lt;void property=&quot;cookie&quot;&gt; 
     &lt;string&gt;&lt;/string&gt; 
    &lt;/void&gt; 
    &lt;void property=&quot;pragma&quot;&gt; 
     &lt;string&gt;&lt;/string&gt; 
    &lt;/void&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;errorActionsMap&quot;&gt; 
    &lt;object class=&quot;fiorano.esb.adapter.jca.error.ErrorActionsMap&quot;&gt; 
     &lt;void property=&quot;errorActionsMap&quot;&gt; 
      &lt;void method=&quot;put&quot;&gt; 
       &lt;object class=&quot;fiorano.esb.adapter.jca.error.Error&quot;&gt; 
        &lt;void property=&quot;errorID&quot;&gt; 
         &lt;int&gt;2&lt;/int&gt; 
        &lt;/void&gt; 
       &lt;/object&gt; 
       &lt;object class=&quot;java.util.ArrayList&quot;&gt; 
        &lt;void method=&quot;add&quot;&gt; 
         &lt;object class=&quot;fiorano.esb.adapter.jca.error.RetryErrorAction&quot;&gt; 
          &lt;void property=&quot;errorActionID&quot;&gt; 
           &lt;int&gt;1&lt;/int&gt; 
          &lt;/void&gt; 
         &lt;/object&gt; 
        &lt;/void&gt; 
        &lt;void method=&quot;add&quot;&gt; 
         &lt;object class=&quot;fiorano.esb.adapter.jca.error.ErrorAction&quot;&gt; 
          &lt;void property=&quot;errorActionID&quot;&gt; 
           &lt;int&gt;3&lt;/int&gt; 
          &lt;/void&gt; 
         &lt;/object&gt; 
        &lt;/void&gt; 
       &lt;/object&gt; 
      &lt;/void&gt; 
      &lt;void method=&quot;put&quot;&gt; 
       &lt;object class=&quot;fiorano.esb.adapter.jca.error.Error&quot;&gt; 
        &lt;void property=&quot;errorID&quot;&gt; 
         &lt;int&gt;1&lt;/int&gt; 
        &lt;/void&gt; 
       &lt;/object&gt; 
       &lt;object class=&quot;java.util.ArrayList&quot;&gt; 
        &lt;void method=&quot;add&quot;&gt; 
         &lt;object class=&quot;fiorano.esb.adapter.jca.error.RetryErrorAction&quot;/&gt; 
        &lt;/void&gt; 
       &lt;/object&gt; 
      &lt;/void&gt; 
      &lt;void method=&quot;put&quot;&gt; 
       &lt;object class=&quot;fiorano.esb.adapter.jca.error.Error&quot;&gt; 
        &lt;void property=&quot;errorID&quot;&gt; 
         &lt;int&gt;0&lt;/int&gt; 
        &lt;/void&gt; 
       &lt;/object&gt; 
       &lt;object class=&quot;java.util.ArrayList&quot;/&gt; 
      &lt;/void&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;state&quot;&gt; 
    &lt;int&gt;6&lt;/int&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;targetNamespace&quot;&gt; 
    &lt;string&gt;http://www.fiorano.com/fesb/activity/Get_Available&lt;/string&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;category&quot;&gt; 
   &lt;string&gt;Web&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;configParams&quot;&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsReconnection&lt;/string&gt; 
    &lt;boolean&gt;true&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsScheduling&lt;/string&gt; 
    &lt;boolean&gt;true&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;enableScheduling&lt;/string&gt; 
    &lt;boolean&gt;false&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsStudio&lt;/string&gt; 
    &lt;boolean&gt;true&lt;/boolean&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;description&quot;&gt; 
   &lt;string&gt;Send a HTTP Get/Post request&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;icon&quot;&gt; 
   &lt;string&gt;httpcomponent.png&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;implClassName&quot;&gt; 
   &lt;class&gt;com.fiorano.adapter.jca.http.cci.HTTPInteractionSpec&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;name&quot;&gt; 
   &lt;string&gt;HTTP&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;type&quot;&gt; 
   &lt;string&gt;javax.resource.cci.InteractionSpec&lt;/string&gt; 
  &lt;/void&gt; 
 &lt;/object&gt; 
&lt;/java&gt; 
]]&gt;&lt;/ConfigurationObject&gt;&lt;/ConfigurationObjects&gt;&lt;/ESBAdapterConfigurations&gt;</string> 
  </void> 
 </object> 
</java> 
]]]]><![CDATA[></BCConfigurations><TransportConfigurations><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.bc.trgateway.model.dmi.tr.TrConfigurationInfo"/> 
</java> 
]]]]><![CDATA[></TransportConfigurations><ErrorConfigurations><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.bc.trgateway.model.dmi.error.ErrorConfigurationInfo"> 
  <void property="errorActionsMap"> 
   <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorActionsMap"> 
    <void property="errorActionsMap"> 
     <void method="put"> 
      <object class="fiorano.esb.adapter.jca.error.Error"> 
       <void property="errorID"> 
        <int>2</int> 
       </void> 
      </object> 
      <object class="java.util.ArrayList"> 
       <void method="add"> 
        <object class="fiorano.esb.adapter.jca.error.RetryErrorAction"> 
         <void property="errorActionID"> 
          <int>1</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="fiorano.esb.adapter.jca.error.ErrorAction"> 
         <void property="errorActionID"> 
          <int>3</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="active"> 
          <boolean>true</boolean> 
         </void> 
         <void property="errorActionID"> 
          <int>11</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="errorActionID"> 
          <int>12</int> 
         </void> 
        </object> 
       </void> 
      </object> 
     </void> 
     <void method="put"> 
      <object class="fiorano.esb.adapter.jca.error.Error"> 
       <void property="errorID"> 
        <int>1</int> 
       </void> 
      </object> 
      <object class="java.util.ArrayList"> 
       <void method="add"> 
        <object class="fiorano.esb.adapter.jca.error.RetryErrorAction"/> 
       </void> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="active"> 
          <boolean>true</boolean> 
         </void> 
         <void property="errorActionID"> 
          <int>11</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="errorActionID"> 
          <int>12</int> 
         </void> 
        </object> 
       </void> 
      </object> 
     </void> 
     <void method="put"> 
      <object class="fiorano.esb.adapter.jca.error.Error"> 
       <void property="errorID"> 
        <int>0</int> 
       </void> 
      </object> 
      <object class="java.util.ArrayList"> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="active"> 
          <boolean>true</boolean> 
         </void> 
         <void property="errorActionID"> 
          <int>11</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="active"> 
          <boolean>true</boolean> 
         </void> 
         <void property="errorActionID"> 
          <int>2</int> 
         </void> 
        </object> 
       </void> 
      </object> 
     </void> 
    </void> 
   </object> 
  </void> 
 </object> 
</java> 
]]]]><![CDATA[></ErrorConfigurations><SchedulerConfigurations><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.bc.trgateway.model.dmi.scheduler.SchedulerConfigurationInfo"> 
  <void property="startDate"> 
   <object class="java.util.Date"> 
    <long>1136814556218</long> 
   </object> 
  </void> 
  <void property="timeOffset"> 
   <string>+00:00</string> 
  </void> 
  <void property="unit"> 
   <string>seconds</string> 
  </void> 
 </object> 
</java> 
]]]]><![CDATA[></SchedulerConfigurations></TrGatewayConfigurations>]]></configuration><configuration-properties /><deployment nodes="fps" /><execution><debug enabled="false" port="5000" /><launch first-available-node="false" /></execution><inputport-instances><inputport-instance name="IN_PORT"><schema root="{http://www.fiorano.com/fesb/activity/Get_Available/HTTP/In}HTTPRequest"><content><![CDATA[${Transform2B_Avlbl.OUT_PORT}]]></content></schema><jms><destination /><subscriber><transaction enabled="true" /><subscription durable="false" name="null" /></subscriber></jms></inputport-instance></inputport-instances><outputport-instances><outputport-instance name="OUT_PORT"><schema root="{http://www.fiorano.com/fesb/activity/Get_Available/HTTP/Out}HTTP-Response"><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:fns="http://www.fiorano.com/fesb/activity/Get_Available/HTTP/Out" xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://www.fiorano.com/fesb/activity/Get_Available/HTTP/Out">
   <xsd:complexType name="ResponseType">
      <xsd:sequence minOccurs="0">
         <xsd:element minOccurs="0" name="Response-Code" type="xsd:string"/>
         <xsd:element minOccurs="0" name="Response-Message" type="xsd:string"/>
         <xsd:element name="Header" type="fns:HeaderType"/>
         <xsd:element name="Body" type="fns:BodyType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="HTTP-Response" type="fns:ResponseType"/>
   <xsd:complexType name="HeaderType">
      <xsd:sequence minOccurs="0">
         <xsd:element name="Content-Encoding" type="xsd:string"/>
         <xsd:element name="Content-Length" type="xsd:string"/>
         <xsd:element name="Content-Type" type="xsd:string"/>
         <xsd:element name="Content-Range" type="xsd:string"/>
         <xsd:element name="Content-Location" type="xsd:string"/>
         <xsd:element name="Last-Modified" type="xsd:string"/>
         <xsd:element name="Set-Cookie" type="xsd:string"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="BodyType">
      <xsd:sequence minOccurs="0" maxOccurs="unbounded">
         <xsd:element name="Text" type="xsd:string"/>
      </xsd:sequence>
   </xsd:complexType>
</xsd:schema>]]></content></schema><jms><destination /><publisher><messages priority="4" /></publisher></jms></outputport-instance><outputport-instance name="ON_EXCEPTION"><schema root="Error"><content><![CDATA[${SplitToSuppliers_Book.ON_EXCEPTION}]]></content></schema><jms><destination /><publisher><messages priority="4" /></publisher></jms></outputport-instance></outputport-instances><logmanager logger="java.util.logging.FileHandler"><Param name="java.util.logging.FileHandler.limit">50000</Param><Param name="java.util.logging.FileHandler.dir">logs</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.dateformat">MM:dd:yyyy</Param><Param name="java.util.logging.FileHandler.count">4</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.includetimestamp">true</Param></logmanager><logmodules><logmodule name="com.fiorano.bc.trgateway" /><logmodule name="HTTPManagedConnectionFactory" /><logmodule name="HTTPInteraction" /><logmodule name="ERR_HANDLER" /><logmodule name="OUT_HANDLER" level="INFO" /></logmodules><runtime-arguments><runtime-argument name="JVM_PARAMS" mandatory="false" inmemory="false"><value>-DLOG_TO_STREAM=true</value></runtime-argument></runtime-arguments></inst><inst name="SupplierA_WS_HA"><service guid="WebServiceConsumer" version="4.0" /><long-description>WebService Invoker component</long-description><config-file name="SupplierA_WS_HA.xml" /><configuration><![CDATA[<?xml version="1.0" encoding="UTF-8"?><TrGatewayConfigurations><BCConfigurations><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.bc.trgateway.model.dmi.bcdk.BCDKConfigurationInfo"> 
  <void property="JCAAdapterConfig"> 
   <string>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;ESBAdapterConfigurations&gt;&lt;ConnectionLess&gt;false&lt;/ConnectionLess&gt;&lt;isConfigurationRequired&gt;true&lt;/isConfigurationRequired&gt;&lt;isLicensed&gt;false&lt;/isLicensed&gt;&lt;Inbound&gt;false&lt;/Inbound&gt;&lt;AdapterInstanceProperties&gt;&lt;![CDATA[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; 
&lt;java version=&quot;1.5.0_05&quot; class=&quot;java.beans.XMLDecoder&quot;&gt; 
 &lt;object class=&quot;fiorano.esb.adapter.cfg.ESBAdapterInstanceProperties&quot;&gt; 
  &lt;void property=&quot;domain&quot;&gt; 
   &lt;string&gt;BCConfigPropertySheet&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;instanceName&quot;&gt; 
   &lt;string&gt;Invoke_Available_WS&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;logCategories&quot;&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;WSInvokerInteractionSpec&lt;/string&gt; 
    &lt;object class=&quot;fiorano.esb.adapter.cfg.LogCategory&quot;&gt; 
     &lt;void property=&quot;loggerDescription&quot;&gt; 
      &lt;string&gt;WSInvokerInteractionSpec&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerDisplayName&quot;&gt; 
      &lt;string&gt;WSInvokerInteractionSpec&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerLevel&quot;&gt; 
      &lt;string&gt;SEVERE&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerName&quot;&gt; 
      &lt;string&gt;com.fiorano.webservices.invoker.cci.WSInvokerInteractionSpec&lt;/string&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;WSInvokerManagedConnectionFactory&lt;/string&gt; 
    &lt;object class=&quot;fiorano.esb.adapter.cfg.LogCategory&quot;&gt; 
     &lt;void property=&quot;loggerDescription&quot;&gt; 
      &lt;string&gt;WSInvokerManagedConnectionFactory&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerDisplayName&quot;&gt; 
      &lt;string&gt;WSInvokerManagedConnectionFactory&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerLevel&quot;&gt; 
      &lt;string&gt;SEVERE&lt;/string&gt; 
     &lt;/void&gt; 
     &lt;void property=&quot;loggerName&quot;&gt; 
      &lt;string&gt;com.fiorano.webservices.invoker.spi.outbound.WSInvokerManagedConnectionFactory&lt;/string&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;state&quot;&gt; 
   &lt;int&gt;8&lt;/int&gt; 
  &lt;/void&gt; 
 &lt;/object&gt; 
&lt;/java&gt; 
]]&gt;&lt;/AdapterInstanceProperties&gt;&lt;ConfigurationObjects&gt;&lt;ConfigurationObject&gt;&lt;![CDATA[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; 
&lt;java version=&quot;1.5.0_05&quot; class=&quot;java.beans.XMLDecoder&quot;&gt; 
 &lt;object class=&quot;fiorano.esb.adapter.cfg.ConfigurationObject&quot;&gt; 
  &lt;void property=&quot;beanClassName&quot;&gt; 
   &lt;class&gt;com.fiorano.webservices.invoker.cci.WSInvokerInteractionSpec&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;beanObject&quot;&gt; 
   &lt;void property=&quot;description&quot;&gt; 
    &lt;string&gt;&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;&amp;lt;h3&amp;gt;getHotelAvailability&amp;lt;/h3&amp;gt;&amp;lt;pre&amp;gt;string &amp;lt;b&amp;gt;getHotelAvailability&amp;lt;/b&amp;gt;(string in0)&amp;lt;/pre&amp;gt;&amp;lt;dl&amp;gt;&amp;lt;dt&amp;gt;&amp;lt;b&amp;gt;Parameters:&amp;lt;/b&amp;gt;&amp;lt;dd&amp;gt;&amp;lt;code&amp;gt;in0&amp;lt;/code&amp;gt; - The string value.&amp;lt;dt&amp;gt;&amp;lt;b&amp;gt;Returns:&amp;lt;/b&amp;gt;&amp;lt;dd&amp;gt;&amp;lt;code&amp;gt;string&amp;lt;/code&amp;gt; - The string value.&amp;lt;/dl&amp;gt;&amp;lt;/dd&amp;gt;&amp;lt;/dl&amp;gt;&amp;lt;/html&amp;gt;&amp;lt;/body&amp;gt;&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;endpointAddress&quot;&gt; 
    &lt;string&gt;http://localhost:1880/bcwsgateway/services/SupplierA_WS&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;errorActionsMap&quot;&gt; 
    &lt;object class=&quot;fiorano.esb.adapter.jca.error.ErrorActionsMap&quot;&gt; 
     &lt;void property=&quot;errorActionsMap&quot;&gt; 
      &lt;void method=&quot;put&quot;&gt; 
       &lt;object class=&quot;fiorano.esb.adapter.jca.error.Error&quot;&gt; 
        &lt;void property=&quot;errorID&quot;&gt; 
         &lt;int&gt;2&lt;/int&gt; 
        &lt;/void&gt; 
       &lt;/object&gt; 
       &lt;object class=&quot;java.util.ArrayList&quot;&gt; 
        &lt;void method=&quot;add&quot;&gt; 
         &lt;object class=&quot;fiorano.esb.adapter.jca.error.RetryErrorAction&quot;&gt; 
          &lt;void property=&quot;errorActionID&quot;&gt; 
           &lt;int&gt;1&lt;/int&gt; 
          &lt;/void&gt; 
         &lt;/object&gt; 
        &lt;/void&gt; 
        &lt;void method=&quot;add&quot;&gt; 
         &lt;object class=&quot;fiorano.esb.adapter.jca.error.ErrorAction&quot;&gt; 
          &lt;void property=&quot;errorActionID&quot;&gt; 
           &lt;int&gt;3&lt;/int&gt; 
          &lt;/void&gt; 
         &lt;/object&gt; 
        &lt;/void&gt; 
       &lt;/object&gt; 
      &lt;/void&gt; 
      &lt;void method=&quot;put&quot;&gt; 
       &lt;object class=&quot;fiorano.esb.adapter.jca.error.Error&quot;&gt; 
        &lt;void property=&quot;errorID&quot;&gt; 
         &lt;int&gt;1&lt;/int&gt; 
        &lt;/void&gt; 
       &lt;/object&gt; 
       &lt;object class=&quot;java.util.ArrayList&quot;&gt; 
        &lt;void method=&quot;add&quot;&gt; 
         &lt;object class=&quot;fiorano.esb.adapter.jca.error.RetryErrorAction&quot;/&gt; 
        &lt;/void&gt; 
       &lt;/object&gt; 
      &lt;/void&gt; 
      &lt;void method=&quot;put&quot;&gt; 
       &lt;object class=&quot;fiorano.esb.adapter.jca.error.Error&quot;&gt; 
        &lt;void property=&quot;errorID&quot;&gt; 
         &lt;int&gt;0&lt;/int&gt; 
        &lt;/void&gt; 
       &lt;/object&gt; 
       &lt;object class=&quot;java.util.ArrayList&quot;/&gt; 
      &lt;/void&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;operationInputParam&quot;&gt; 
    &lt;string&gt;getHotelAvailabilityRequest&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;operationName&quot;&gt; 
    &lt;string&gt;getHotelAvailability&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;operationOutputParam&quot;&gt; 
    &lt;string&gt;getHotelAvailabilityResponse&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;portName&quot;&gt; 
    &lt;string&gt;SupplierA_WS&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;properties&quot;&gt; 
    &lt;void method=&quot;put&quot;&gt; 
     &lt;string&gt;TargetNamespace.Prefix&lt;/string&gt; 
     &lt;string&gt;impl&lt;/string&gt; 
    &lt;/void&gt; 
    &lt;void method=&quot;put&quot;&gt; 
     &lt;string&gt;javax.xml.rpc.soap.operation.style&lt;/string&gt; 
     &lt;string&gt;rpc&lt;/string&gt; 
    &lt;/void&gt; 
    &lt;void method=&quot;put&quot;&gt; 
     &lt;string&gt;SOAP.version&lt;/string&gt; 
     &lt;string&gt;http://schemas.xmlsoap.org/wsdl/soap/&lt;/string&gt; 
    &lt;/void&gt; 
    &lt;void method=&quot;put&quot;&gt; 
     &lt;string&gt;javax.xml.rpc.soap.http.soapaction.uri&lt;/string&gt; 
     &lt;string&gt;&lt;/string&gt; 
    &lt;/void&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;service&quot;&gt; 
    &lt;string&gt;{http://localhost:1880/bcwsgateway/services/SupplierA_WS}SupplierA_WSService&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;soapBodyNS&quot;&gt; 
    &lt;string&gt;http://DefaultNamespace&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;state&quot;&gt; 
    &lt;int&gt;6&lt;/int&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;category&quot;&gt; 
   &lt;string&gt;WebService&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;configParams&quot;&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsScheduling&lt;/string&gt; 
    &lt;boolean&gt;true&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;enableScheduling&lt;/string&gt; 
    &lt;boolean&gt;false&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsStudio&lt;/string&gt; 
    &lt;boolean&gt;true&lt;/boolean&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;description&quot;&gt; 
   &lt;string&gt;WebService Invoker component&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;icon&quot;&gt; 
   &lt;string&gt;wsinvoker.png&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;implClassName&quot;&gt; 
   &lt;class&gt;com.fiorano.webservices.invoker.cci.WSInvokerInteractionSpec&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;name&quot;&gt; 
   &lt;string&gt;WebServiceConsumer&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;type&quot;&gt; 
   &lt;string&gt;javax.resource.cci.InteractionSpec&lt;/string&gt; 
  &lt;/void&gt; 
 &lt;/object&gt; 
&lt;/java&gt; 
]]&gt;&lt;/ConfigurationObject&gt;&lt;ConfigurationObject&gt;&lt;![CDATA[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; 
&lt;java version=&quot;1.5.0_05&quot; class=&quot;java.beans.XMLDecoder&quot;&gt; 
 &lt;object class=&quot;fiorano.esb.adapter.cfg.ConfigurationObject&quot;&gt; 
  &lt;void property=&quot;beanClassName&quot;&gt; 
   &lt;class&gt;com.fiorano.webservices.invoker.spi.outbound.WSInvokerManagedConnectionFactory&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;beanObject&quot;&gt; 
   &lt;void property=&quot;JNDIName&quot;&gt; 
    &lt;string&gt;WebServiceConsumer&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;state&quot;&gt; 
    &lt;int&gt;8&lt;/int&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;wsdl&quot;&gt; 
    &lt;object class=&quot;com.fiorano.webservices.invoker.model.WSDLInfo&quot;&gt; 
     &lt;void property=&quot;wsdlURL&quot;&gt; 
      &lt;string&gt;http://localhost:1880/bcwsgateway/services/SupplierA_WS?wsdl&lt;/string&gt; 
     &lt;/void&gt; 
    &lt;/object&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;category&quot;&gt; 
   &lt;string&gt;WebService&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;configParams&quot;&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsReconnection&lt;/string&gt; 
    &lt;boolean&gt;true&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsScheduling&lt;/string&gt; 
    &lt;boolean&gt;true&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;enableScheduling&lt;/string&gt; 
    &lt;boolean&gt;false&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsStudio&lt;/string&gt; 
    &lt;boolean&gt;true&lt;/boolean&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;description&quot;&gt; 
   &lt;string&gt;WSInvoker Connection&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;icon&quot;&gt; 
   &lt;string&gt;wsinvoker.png&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;implClassName&quot;&gt; 
   &lt;class&gt;com.fiorano.webservices.invoker.spi.outbound.WSInvokerManagedConnectionFactory&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;name&quot;&gt; 
   &lt;string&gt;WebServiceConsumer&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;type&quot;&gt; 
   &lt;string&gt;javax.resource.spi.ManagedConnectionFactory&lt;/string&gt; 
  &lt;/void&gt; 
 &lt;/object&gt; 
&lt;/java&gt; 
]]&gt;&lt;/ConfigurationObject&gt;&lt;ConfigurationObject&gt;&lt;![CDATA[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; 
&lt;java version=&quot;1.5.0_05&quot; class=&quot;java.beans.XMLDecoder&quot;&gt; 
 &lt;object class=&quot;fiorano.esb.adapter.cfg.ConfigurationObject&quot;&gt; 
  &lt;void property=&quot;beanClassName&quot;&gt; 
   &lt;class&gt;fiorano.esb.adapter.jca.cci.ESBConnectionSpec&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;beanObject&quot;&gt; 
   &lt;void property=&quot;MCFClassName&quot;&gt; 
    &lt;string&gt;com.fiorano.webservices.invoker.spi.outbound.WSInvokerManagedConnectionFactory&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;connectionFactoryJNDIName&quot;&gt; 
    &lt;string&gt;WebServiceConsumer&lt;/string&gt; 
   &lt;/void&gt; 
   &lt;void property=&quot;state&quot;&gt; 
    &lt;int&gt;8&lt;/int&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;category&quot;&gt; 
   &lt;string&gt;WebService&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;configParams&quot;&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsReconnection&lt;/string&gt; 
    &lt;boolean&gt;true&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsScheduling&lt;/string&gt; 
    &lt;boolean&gt;true&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;enableScheduling&lt;/string&gt; 
    &lt;boolean&gt;false&lt;/boolean&gt; 
   &lt;/void&gt; 
   &lt;void method=&quot;put&quot;&gt; 
    &lt;string&gt;supportsStudio&lt;/string&gt; 
    &lt;boolean&gt;true&lt;/boolean&gt; 
   &lt;/void&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;description&quot;&gt; 
   &lt;string&gt;WSInvoker Connection&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;icon&quot;&gt; 
   &lt;string&gt;wsinvoker.png&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;implClassName&quot;&gt; 
   &lt;class&gt;fiorano.esb.adapter.jca.cci.ESBConnectionSpec&lt;/class&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;name&quot;&gt; 
   &lt;string&gt;WebServiceConsumer&lt;/string&gt; 
  &lt;/void&gt; 
  &lt;void property=&quot;type&quot;&gt; 
   &lt;string&gt;javax.resource.cci.ConnectionSpec&lt;/string&gt; 
  &lt;/void&gt; 
 &lt;/object&gt; 
&lt;/java&gt; 
]]&gt;&lt;/ConfigurationObject&gt;&lt;/ConfigurationObjects&gt;&lt;/ESBAdapterConfigurations&gt;</string> 
  </void> 
 </object> 
</java> 
]]]]><![CDATA[></BCConfigurations><TransportConfigurations><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.bc.trgateway.model.dmi.tr.TrConfigurationInfo"/> 
</java> 
]]]]><![CDATA[></TransportConfigurations><ErrorConfigurations><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.bc.trgateway.model.dmi.error.ErrorConfigurationInfo"> 
  <void property="errorActionsMap"> 
   <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorActionsMap"> 
    <void property="errorActionsMap"> 
     <void method="put"> 
      <object class="fiorano.esb.adapter.jca.error.Error"> 
       <void property="errorID"> 
        <int>2</int> 
       </void> 
      </object> 
      <object class="java.util.ArrayList"> 
       <void method="add"> 
        <object class="fiorano.esb.adapter.jca.error.RetryErrorAction"> 
         <void property="errorActionID"> 
          <int>1</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="fiorano.esb.adapter.jca.error.ErrorAction"> 
         <void property="errorActionID"> 
          <int>3</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="active"> 
          <boolean>true</boolean> 
         </void> 
         <void property="errorActionID"> 
          <int>11</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="errorActionID"> 
          <int>12</int> 
         </void> 
        </object> 
       </void> 
      </object> 
     </void> 
     <void method="put"> 
      <object class="fiorano.esb.adapter.jca.error.Error"> 
       <void property="errorID"> 
        <int>1</int> 
       </void> 
      </object> 
      <object class="java.util.ArrayList"> 
       <void method="add"> 
        <object class="fiorano.esb.adapter.jca.error.RetryErrorAction"/> 
       </void> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="active"> 
          <boolean>true</boolean> 
         </void> 
         <void property="errorActionID"> 
          <int>11</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="errorActionID"> 
          <int>12</int> 
         </void> 
        </object> 
       </void> 
      </object> 
     </void> 
     <void method="put"> 
      <object class="fiorano.esb.adapter.jca.error.Error"> 
       <void property="errorID"> 
        <int>0</int> 
       </void> 
      </object> 
      <object class="java.util.ArrayList"> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="active"> 
          <boolean>true</boolean> 
         </void> 
         <void property="errorActionID"> 
          <int>11</int> 
         </void> 
        </object> 
       </void> 
       <void method="add"> 
        <object class="com.fiorano.bc.trgateway.model.dmi.error.XErrorAction"> 
         <void property="active"> 
          <boolean>true</boolean> 
         </void> 
         <void property="errorActionID"> 
          <int>2</int> 
         </void> 
        </object> 
       </void> 
      </object> 
     </void> 
    </void> 
   </object> 
  </void> 
 </object> 
</java> 
]]]]><![CDATA[></ErrorConfigurations><SchedulerConfigurations><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.bc.trgateway.model.dmi.scheduler.SchedulerConfigurationInfo"> 
  <void property="startDate"> 
   <object class="java.util.Date"> 
    <long>1136797756468</long> 
   </object> 
  </void> 
  <void property="timeOffset"> 
   <string>+00:00</string> 
  </void> 
  <void property="unit"> 
   <string>seconds</string> 
  </void> 
 </object> 
</java> 
]]]]><![CDATA[></SchedulerConfigurations></TrGatewayConfigurations>]]></configuration><configuration-properties /><deployment nodes="fps" /><execution><debug enabled="false" port="5000" /><launch first-available-node="false" /></execution><inputport-instances><inputport-instance name="IN_PORT"><schema root="{http://localhost:1880/bcwsgateway/services/SupplierA_WS/getHotelAvailability/Input}Envelope"><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:impl="http://localhost:1880/bcwsgateway/services/SupplierA_WS" xmlns:intf="http://localhost:1880/bcwsgateway/services/SupplierA_WS" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:apachesoap="http://xml.apache.org/xml-soap" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ftns="http://localhost:1880/bcwsgateway/services/SupplierA_WS/getHotelAvailability/Input" targetNamespace="http://localhost:1880/bcwsgateway/services/SupplierA_WS/getHotelAvailability/Input">
   <xsd:import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
   <xsd:element name="Envelope">
      <xsd:complexType>
         <xsd:sequence>
            <xsd:element ref="ftns:Header"/>
            <xsd:element ref="ftns:Body"/>
         </xsd:sequence>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="Header">
      <xsd:complexType>
         <xsd:sequence/>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="Body">
      <xsd:complexType>
         <xsd:sequence>
            <xsd:element ref="ftns:getHotelAvailability"/>
         </xsd:sequence>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="getHotelAvailability">
      <xsd:complexType>
         <xsd:sequence>
            <xsd:element name="in0" type="soapenc:string"/>
         </xsd:sequence>
      </xsd:complexType>
   </xsd:element>
</xsd:schema>]]></content></schema><jms><destination /><subscriber><transaction enabled="true" /><subscription durable="false" name="null" /></subscriber></jms></inputport-instance></inputport-instances><outputport-instances><outputport-instance name="OUT_PORT"><schema root="{http://localhost:1880/bcwsgateway/services/SupplierA_WS/getHotelAvailability/Output}Envelope"><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:impl="http://localhost:1880/bcwsgateway/services/SupplierA_WS" xmlns:intf="http://localhost:1880/bcwsgateway/services/SupplierA_WS" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:apachesoap="http://xml.apache.org/xml-soap" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ftns="http://localhost:1880/bcwsgateway/services/SupplierA_WS/getHotelAvailability/Output" targetNamespace="http://localhost:1880/bcwsgateway/services/SupplierA_WS/getHotelAvailability/Output">
   <xsd:import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
   <xsd:element name="Envelope">
      <xsd:complexType>
         <xsd:sequence>
            <xsd:element ref="ftns:Header"/>
            <xsd:element ref="ftns:Body"/>
         </xsd:sequence>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="Header">
      <xsd:complexType>
         <xsd:sequence/>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="Body">
      <xsd:complexType>
         <xsd:sequence>
            <xsd:element ref="ftns:getHotelAvailability"/>
         </xsd:sequence>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="getHotelAvailability">
      <xsd:complexType>
         <xsd:sequence>
            <xsd:element name="getHotelAvailabilityReturn" type="soapenc:string"/>
         </xsd:sequence>
      </xsd:complexType>
   </xsd:element>
</xsd:schema>]]></content></schema><jms><destination /><publisher><messages priority="4" /></publisher></jms></outputport-instance><outputport-instance name="ON_EXCEPTION"><schema root="{http://www.fiorano.com/fesb/activity/fault}Error"><content><![CDATA[${SupplierA_WS_BH.ON_EXCEPTION}]]></content></schema><jms><destination /><publisher><messages priority="4" /></publisher></jms></outputport-instance></outputport-instances><logmanager logger="java.util.logging.FileHandler"><Param name="java.util.logging.FileHandler.limit">50000</Param><Param name="java.util.logging.FileHandler.dir">logs</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.dateformat">MM:dd:yyyy</Param><Param name="java.util.logging.FileHandler.count">4</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.includetimestamp">true</Param></logmanager><logmodules><logmodule name="com.fiorano.bc.trgateway" /><logmodule name="ERR_HANDLER" /><logmodule name="com.fiorano.webservices.invoker.spi.outbound.WSInvokerManagedConnectionFactory" /><logmodule name="OUT_HANDLER" level="INFO" /><logmodule name="com.fiorano.webservices.invoker.cci.WSInvokerInteractionSpec" /></logmodules><runtime-arguments><runtime-argument name="JVM_PARAMS" mandatory="false" inmemory="false"><value>-DLOG_TO_STREAM=true</value></runtime-argument></runtime-arguments></inst><inst name="Aggregate_Avlbl"><service guid="Aggregator" version="4.0" /><config-file name="Aggregate_Avlbl.xml" /><configuration><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.aggregator.model.AggregatorPropertyModel"> 
  <void property="completenessMsgCount"> 
   <int>2</int> 
  </void> 
  <void property="completionCondition"> 
   <string>Wait For &apos;N&apos; Messages</string> 
  </void> 
  <void property="rootElementQName"> 
   <string>HotelAvailability_ALL_Suppliers</string> 
  </void> 
 </object> 
</java> 
]]></configuration><configuration-properties /><deployment nodes="fps" /><execution><debug enabled="false" port="5000" /><launch first-available-node="false" /></execution><inputport-instances><inputport-instance name="IN_PORT"><jms><destination /><subscriber><transaction enabled="true" /><subscription durable="false" name="null" /></subscriber></jms></inputport-instance></inputport-instances><outputport-instances><outputport-instance name="OUT_PORT"><jms><destination /><publisher><messages priority="4" /></publisher></jms></outputport-instance><outputport-instance name="ON_EXCEPTION"><schema root="{http://www.fiorano.com/fesb/activity/fault}Error"><content><![CDATA[${RequestFeeder.ON_EXCEPTION}]]></content></schema><jms><destination /><publisher><messages priority="4" /></publisher></jms></outputport-instance></outputport-instances><logmanager logger="java.util.logging.FileHandler"><Param name="java.util.logging.FileHandler.limit">50000</Param><Param name="java.util.logging.FileHandler.dir">logs</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.dateformat">MM:dd:yyyy</Param><Param name="java.util.logging.FileHandler.count">4</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.includetimestamp">true</Param></logmanager><logmodules><logmodule name="Aggregator" /><logmodule name="ERR_HANDLER" /><logmodule name="OUT_HANDLER" level="INFO" /></logmodules><runtime-arguments><runtime-argument name="JVM_PARAMS" mandatory="false" inmemory="false"><value>-DLOG_TO_STREAM=true</value></runtime-argument></runtime-arguments></inst><inst name="Aggregate_booking"><service guid="Aggregator" version="4.0" /><config-file name="Aggregate_booking.xml" /><configuration><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<java version="1.5.0_05" class="java.beans.XMLDecoder"> 
 <object class="com.fiorano.aggregator.model.AggregatorPropertyModel"> 
  <void property="completenessMsgCount"> 
   <int>2</int> 
  </void> 
  <void property="completionCondition"> 
   <string>Wait For &apos;N&apos; Messages</string> 
  </void> 
  <void property="rootElementQName"> 
   <string>BookHotel_ALL_Suppliers</string> 
  </void> 
 </object> 
</java> 
]]></configuration><configuration-properties /><deployment nodes="fps" /><execution><debug enabled="false" port="5000" /><launch first-available-node="false" /></execution><inputport-instances><inputport-instance name="IN_PORT"><jms><destination /><subscriber><transaction enabled="true" /><subscription durable="false" name="null" /></subscriber></jms></inputport-instance></inputport-instances><outputport-instances><outputport-instance name="OUT_PORT"><jms><destination /><publisher><messages priority="4" /></publisher></jms></outputport-instance><outputport-instance name="ON_EXCEPTION"><schema root="{http://www.fiorano.com/fesb/activity/fault}Error"><content><![CDATA[${RequestFeeder.ON_EXCEPTION}]]></content></schema><jms><destination /><publisher><messages priority="4" /></publisher></jms></outputport-instance></outputport-instances><logmanager logger="java.util.logging.FileHandler"><Param name="java.util.logging.FileHandler.limit">50000</Param><Param name="java.util.logging.FileHandler.dir">logs</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.dateformat">MM:dd:yyyy</Param><Param name="java.util.logging.FileHandler.count">4</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.includetimestamp">true</Param></logmanager><logmodules><logmodule name="Aggregator" /><logmodule name="ERR_HANDLER" /><logmodule name="OUT_HANDLER" level="INFO" /></logmodules><runtime-arguments><runtime-argument name="JVM_PARAMS" mandatory="false" inmemory="false"><value>-DLOG_TO_STREAM=true</value></runtime-argument></runtime-arguments></inst><inst name="Suppliers_Response"><service guid="Display" version="4.0" /><configuration-properties /><deployment nodes="fps" /><execution><debug enabled="false" port="5000" /><launch first-available-node="false" /></execution><inputport-instances><inputport-instance name="IN_PORT"><jms><destination /><subscriber><transaction enabled="true" /><subscription durable="false" name="null" /></subscriber></jms></inputport-instance></inputport-instances><outputport-instances><outputport-instance name="OUT_PORT"><jms><destination /><publisher><messages priority="4" /></publisher></jms></outputport-instance><outputport-instance name="ON_EXCEPTION"><schema root="{http://www.fiorano.com/fesb/activity/fault}Error"><content><![CDATA[<?xml version="1.0" encoding="UTF-8" ?>
									<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.fiorano.com/fesb/activity/fault">
									<xsd:element name="Error">
									<xsd:complexType>
									<xsd:sequence>
									<xsd:element name="errorCode" type="xsd:string"/>
									<xsd:element name="errorMessage" type="xsd:string"/>
									<xsd:element name="errorDetail" type="xsd:string" minOccurs="0"/>
									<xsd:element name="data" minOccurs="0">
									<xsd:complexType>
									<xsd:sequence>
									<xsd:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>
									</xsd:sequence>
									</xsd:complexType>
									</xsd:element>
									</xsd:sequence>
									</xsd:complexType>
									</xsd:element>
									</xsd:schema>            
							]]></content></schema><jms><destination /><publisher><messages priority="4" /></publisher></jms></outputport-instance></outputport-instances><logmanager logger="java.util.logging.FileHandler"><Param name="java.util.logging.FileHandler.limit">50000</Param><Param name="java.util.logging.FileHandler.dir">logs</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.dateformat">MM:dd:yyyy</Param><Param name="java.util.logging.FileHandler.count">4</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.includetimestamp">true</Param></logmanager><logmodules><logmodule name="DisplayServiceInfo" /><logmodule name="ERR_HANDLER" /><logmodule name="OUT_HANDLER" level="INFO" /></logmodules><runtime-arguments><runtime-argument name="JVM_PARAMS" mandatory="false" inmemory="false"><value>-DLOG_TO_STREAM=true</value></runtime-argument></runtime-arguments></inst></service-instances><routes><route name="1"><source inst="RequestFeeder" port="OUT_PORT" /><target inst="OperationType" port="IN_PORT" /><messages /></route><route name="req1"><source inst="SplitToSuppliers_Avlbl" port="OUT_PORT" /><target inst="SupplierRouter_1" port="IN_PORT" /><messages /></route><route name="req2"><source inst="SplitToSuppliers_Book" port="OUT_PORT" /><target inst="SupplierRouter_2" port="IN_PORT" /><messages /></route><route name="B1"><source inst="Transform2B_Book" port="OUT_PORT" /><target inst="SupplierB_Post" port="IN_PORT" /><messages /></route><route name="A1"><source inst="Transform2A_Book" port="OUT_PORT" /><target inst="SupplierA_WS_BH" port="IN_PORT" /><messages /></route><route name="B2"><source inst="Transform2B_Avlbl" port="OUT_PORT" /><target inst="SupplierB_Get" port="IN_PORT" /><messages /></route><route name="A2"><source inst="Transform2A_Avlbl" port="OUT_PORT" /><target inst="SupplierA_WS_HA" port="IN_PORT" /><messages /></route><route name="res1"><source inst="SupplierB_Get" port="OUT_PORT" /><target inst="Aggregate_Avlbl" port="IN_PORT" /><messages /></route><route name="res2"><source inst="SupplierA_WS_HA" port="OUT_PORT" /><target inst="Aggregate_Avlbl" port="IN_PORT" /><messages /></route><route name="res3"><source inst="SupplierB_Post" port="OUT_PORT" /><target inst="Aggregate_booking" port="IN_PORT" /><messages /></route><route name="res4"><source inst="SupplierA_WS_BH" port="OUT_PORT" /><target inst="Aggregate_booking" port="IN_PORT" /><messages /></route><route name="resp1"><source inst="Aggregate_Avlbl" port="OUT_PORT" /><target inst="Suppliers_Response" port="IN_PORT" /><messages /></route><route name="resp2"><source inst="Aggregate_booking" port="OUT_PORT" /><target inst="Suppliers_Response" port="IN_PORT" /><messages /></route><route name="route1"><source inst="SupplierRouter_2" port="Supplier_A_Req" /><target inst="Transform2A_Book" port="IN_PORT" /><messages /></route><route name="route2"><source inst="SupplierRouter_2" port="Supplier_B_Req" /><target inst="Transform2B_Book" port="IN_PORT" /><messages /></route><route name="route3"><source inst="SupplierRouter_1" port="Supplier_A_Req" /><target inst="Transform2A_Avlbl" port="IN_PORT" /><messages /></route><route name="route4"><source inst="SupplierRouter_1" port="Supplier_B_Req" /><target inst="Transform2B_Avlbl" port="IN_PORT" /><messages /></route><route name="route5"><source inst="OperationType" port="BookHotel" /><target inst="SplitToSuppliers_Book" port="IN_PORT" /><messages /></route><route name="route6"><source inst="OperationType" port="Availability" /><target inst="SplitToSuppliers_Avlbl" port="IN_PORT" /><messages /></route></routes><layout><![CDATA[<layout zoomFactor="100">
   
   <service-instance name="RequestFeeder" position="48,236"/>
   <service-instance name="OperationType" position="138,236"/>
   <service-instance name="SplitToSuppliers_Avlbl" position="254,348"/>
   <service-instance name="SplitToSuppliers_Book" position="255,153"/>
   <service-instance name="SupplierRouter_1" position="344,348"/>
   <service-instance name="SupplierRouter_2" position="350,153"/>
   <service-instance name="SupplierA_WS_BH" position="563,95"/>
   <service-instance name="SupplierB_Post" position="567,207"/>
   <service-instance name="Transform2B_Book" position="463,214"/>
   <service-instance name="Transform2A_Book" position="460,95"/>
   <service-instance name="Transform2B_Avlbl" position="473,430"/>
   <service-instance name="Transform2A_Avlbl" position="469,297"/>
   <service-instance name="SupplierB_Get" position="574,423"/>
   <service-instance name="SupplierA_WS_HA" position="572,297"/>
   <service-instance name="Aggregate_Avlbl" position="684,358"/>
   <service-instance name="Aggregate_booking" position="675,151"/>
   <service-instance name="Suppliers_Response" position="797,260"/>
   <route name="1" shape="0"/>
   <route name="req1" shape="1"/>
   <route name="req2" shape="1"/>
   <route name="B1" shape="1"/>
   <route name="A1" shape="1"/>
   <route name="B2" shape="1"/>
   <route name="A2" shape="1"/>
   <route name="res1" shape="1"/>
   <route name="res2" shape="1"/>
   <route name="res3" shape="1"/>
   <route name="res4" shape="1"/>
   <route name="resp1" shape="1"/>
   <route name="resp2" shape="1"/>
   <route name="route1" shape="2"/>
   <route name="route2" shape="2"/>
   <route name="route3" shape="2"/>
   <route name="route4" shape="2"/>
   <route name="route5" shape="2"/>
   <route name="route6" shape="2"/>
<documentation>SCENARIO:
--------
      This demo is a scaled down version of a real life implementation for the 
Hospitality industry. It represents a typical situation where the hospitality vendor 
needs to integrate with third party suppliers. The application also shows how a business 
scenario can be built using the Fiorano Event Process Orchestrator, by simply dragging 
and dropping various coarse grained components (or Fiorano Components) and orchestrating 
an event process based on the current business needs.
      This demo interacts with two suppliers (A &amp; B) who provide services like booking 
rooms in a hotel and finding the hotel availability. This flow can be plugged into a 
larger process which provides a set of hospitality services. The front end and the back 
end of this flow can be replaced with more advanced UI logic. Supplier A provides its 
services as Web Services whereas Supplier B uses Servlets. A request to find hotel 
availability is sent to both suppliers. The result is then aggregated and presented to 
the user.

PRELIMINARY STEPS:
-----------------
1. Start a console window from Start &gt; Programs &gt; Fiorano &gt; Fiorano SOA Platform 
   &gt; Fiorano ESB Console &gt; EDBC Sample. Change directory to EventProcesses\
   HospitalityService\resources and deploy the suppliers services (web service and 
   servlet) by executing “ant deploy_suppliers” on the console. 
   
RUNNING THE EVENT PROCESS:
-------------------------
1. Instances of the “RequestFeeder” and “SupplierResponse” components will come up. 
   Click on the send button of “RequestFeeder”. The response will take some time to 
   appear on the “SupplierResponse” as the aggregator will wait for both the servlet 
   and the web service to return responses.
2. In this case, the display component is best viewed using the tree icon (middle tab) 
   tab. This will show the response from both suppliers.
3. Modify the request in the “RequestFeeder” so that the element “RequestMods” contains 
   the value “BookHotel”. This will launch a similar flow for hotel booking.
</documentation></layout>]]></layout></application>